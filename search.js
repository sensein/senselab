window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"senselab": {"fullname": "senselab", "modulename": "senselab", "kind": "module", "doc": "<p><a href=\"https://github.com/sensein/senselab/actions/workflows/main-branch-status.yaml\"><img src=\"https://github.com/sensein/senselab/actions/workflows/main-branch-status.yaml/badge.svg\" alt=\"Build\" /></a>\n<a href=\"https://codecov.io/gh/sensein/senselab\"><img src=\"https://codecov.io/gh/sensein/senselab/graph/badge.svg?token=9S8WY128PO\" alt=\"codecov\" /></a>\n<a href=\"https://github.com/astral-sh/ruff\"><img src=\"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json\" alt=\"Ruff\" /></a></p>\n\n<p><a href=\"https://pypi.org/project/senselab/\"><img src=\"https://img.shields.io/pypi/v/senselab.svg\" alt=\"PyPI\" /></a>\n<a href=\"https://pypi.org/project/senselab\"><img src=\"https://img.shields.io/pypi/pyversions/senselab\" alt=\"Python Version\" /></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\"><img src=\"https://img.shields.io/pypi/l/senselab\" alt=\"License\" /></a></p>\n\n<p><a href=\"https://sensein.github.io/senselab\"><img src=\"https://img.shields.io/badge/api-docs-blue\" alt=\"pages\" /></a></p>\n\n<p>Welcome to <code>senselab</code>! This is a Python package for streamlining the processing and analysis of behavioral data, such as voice and speech patterns, with robust and reproducible methodologies.</p>\n\n<h3 id=\"why-should-i-use-senselab\">Why should I use senselab?</h3>\n\n<ul>\n<li><strong>Modular Design</strong>: Easily integrate or use standalone transformations for flexible data manipulation.</li>\n<li><strong>Pre-built Pipelines</strong>: Access pre-configured pipelines to reduce setup time and effort.</li>\n<li><strong>Reproducibility</strong>: Ensure consistent and verifiable results with fixed seeds and version-controlled steps.</li>\n<li><strong>Easy Integration</strong>: Seamlessly fit into existing workflows with minimal configuration.</li>\n<li><strong>Extensible</strong>: Modify and contribute custom transformations and pipelines to meet specific research needs.</li>\n<li><strong>Comprehensive Documentation</strong>: Detailed guides, examples, and documentation for all features and modules.</li>\n<li><strong>Performance Optimized</strong>: Efficiently process large datasets with optimized code and algorithms.</li>\n<li><strong>Interactive Examples</strong>: Jupyter notebooks provide practical examples for deriving insights from real-world datasets.</li>\n</ul>\n\n<p><strong>Caution:</strong>: this package is still under development and may change rapidly over the next few weeks.</p>\n\n<h2 id=\"system-requirements\">\u26a0\ufe0f System Requirements</h2>\n\n<ol>\n<li><p><strong>If on macOS, this package requires an ARM64 architecture</strong> due to PyTorch 2.2.2+ dropping support for x86-64 on macOS.</p>\n\n<p>\u274c Unsupported systems include:</p>\n\n<ul>\n<li>macOS (Intel x86-64)</li>\n<li>Other platforms where dependencies are unavailable</li>\n</ul>\n\n<p>To check your system compatibility, please run this command:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>python<span class=\"w\"> </span>-c<span class=\"w\"> </span><span class=\"s2\">&quot;import platform; print(platform.machine())&quot;</span>\n</code></pre>\n</div>\n\n<p>If the output is:</p>\n\n<ul>\n<li><code>arm64</code> \u2192 \u2705 Your system is compatible.</li>\n<li><code>x86_64</code> \u2192 \u274c Your system is not supported.</li>\n</ul>\n\n<p>If you attempt to install this package on an unsupported system, the installation or execution will fail.</p></li>\n<li><p><code>FFmpeg</code> is required by some audio and video dependencies (e.g., <code>torchaudio</code>). Please make sure you have <code>FFmpeg</code> properly installed on your machine before installing and using <code>senselab</code> (see <a href=\"https://www.ffmpeg.org/download.html\">here</a> for detailed platform-dependent instructions).</p></li>\n</ol>\n\n<h2 id=\"installation\">Installation</h2>\n\n<p>Install this package via:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"s1\">&#39;senselab[all]&#39;</span>\n</code></pre>\n</div>\n\n<p>Or get the newest development version via:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>git+https://github.com/sensein/senselab.git\n</code></pre>\n</div>\n\n<p>If you want to install only audio dependencies, you do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"s1\">&#39;senselab[audio]&#39;</span>\n</code></pre>\n</div>\n\n<p>To install video and text extras, please do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"s1\">&#39;senselab[video,text]&#39;</span>\n</code></pre>\n</div>\n\n<h2 id=\"quick-start\">Quick start</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">senselab.audio.data_structures</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Audio</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">senselab.audio.tasks.preprocessing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">resample_audios</span>\n\n<span class=\"n\">audio</span> <span class=\"o\">=</span> <span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s1\">&#39;path_to_audio_file.wav&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;The original audio has a sampling rate of </span><span class=\"si\">{}</span><span class=\"s2\"> Hz.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">sampling_rate</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"n\">audio</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">resample_audios</span><span class=\"p\">([</span><span class=\"n\">audio</span><span class=\"p\">],</span> <span class=\"n\">resample_rate</span><span class=\"o\">=</span><span class=\"mi\">16000</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;The resampled audio has a sampling rate of </span><span class=\"si\">{}</span><span class=\"s2\"> Hz.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">sampling_rate</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p>For more detailed information, check out our <a href=\"https://github.com/sensein/senselab/blob/main/tutorials/audio/getting_started.ipynb\"><strong>Getting Started Tutorial</strong></a>.</p>\n\n<h2 id=\"contributing\">Contributing</h2>\n\n<p>We welcome contributions from the community! Before getting started, please review our <a href=\"https://github.com/sensein/senselab/blob/main/CONTRIBUTING.md\"><strong>CONTRIBUTING.md</strong></a>.</p>\n\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n\n<p><code>senselab</code> is mostly supported by the following organizations and initiatives:</p>\n\n<ul>\n<li>McGovern Institute ICON Fellowship</li>\n<li>NIH Bridge2AI Precision Public Health (OT2OD032720)</li>\n<li>Child Mind Institute</li>\n<li>ReadNet Project</li>\n<li>Chris and Lann Woehrle Psychiatric Fund</li>\n</ul>\n"}, "senselab.audio": {"fullname": "senselab.audio", "modulename": "senselab.audio", "kind": "module", "doc": "<p>This module contains implementations related to audio processing.</p>\n"}, "senselab.audio.data_structures": {"fullname": "senselab.audio.data_structures", "modulename": "senselab.audio.data_structures", "kind": "module", "doc": "<p>This module contains data structures for audio processing.</p>\n"}, "senselab.audio.data_structures.audio": {"fullname": "senselab.audio.data_structures.audio", "modulename": "senselab.audio.data_structures.audio", "kind": "module", "doc": "<p>Audio data structure module.</p>\n"}, "senselab.audio.data_structures.audio.Audio": {"fullname": "senselab.audio.data_structures.audio.Audio", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio", "kind": "class", "doc": "<p>Represents an audio file and its associated metadata.</p>\n\n<p>Users should instantiate Audio via the constructor (from file path or waveform + sampling rate)\nor the 'from_stream' method, which yiels Audio objects from a live audio stream.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>metadata:</strong>  A dictionary containing any additional metadata.</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.audio.data_structures.audio.Audio.__init__": {"fullname": "senselab.audio.data_structures.audio.Audio.__init__", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.__init__", "kind": "function", "doc": "<p>Initialize an Audio instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>waveform (optional):</strong>  Pre-loaded audio data as a list, NumPy array, or torch.Tensor.</li>\n<li><strong>sampling_rate (optional):</strong>  If provided, sets the sampling rate.\nThis must be provided if a waveform is supplied.</li>\n<li><strong>filepath (optional):</strong>  File path for lazy loading the waveform if not provided.</li>\n<li><strong>offset_in_sec (optional):</strong>  Offset (in seconds) from which to start reading the file. Defaults to 0.0.</li>\n<li><strong>duration_in_sec (optional):</strong>  Duration (in seconds) to read from the file. If None, the full file is loaded.</li>\n<li><strong>backend (optional):</strong>  I/O backend to use when loading the audio (e.g. \"ffmpeg\", \"sox\", \"soundfile\").</li>\n<li><strong>metadata (optional):</strong>  A dictionary of additional metadata.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If neither waveform nor filepath is provided.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "senselab.audio.data_structures.audio.Audio.metadata": {"fullname": "senselab.audio.data_structures.audio.Audio.metadata", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, "senselab.audio.data_structures.audio.Audio.model_config": {"fullname": "senselab.audio.data_structures.audio.Audio.model_config", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;arbitrary_types_allowed&#x27;: True}"}, "senselab.audio.data_structures.audio.Audio.waveform": {"fullname": "senselab.audio.data_structures.audio.Audio.waveform", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.waveform", "kind": "variable", "doc": "<p>Returns the audio waveform as a torch.Tensor.</p>\n\n<p>If the waveform has not been loaded yet, it is loaded lazily from the file.</p>\n", "annotation": ": torch.Tensor"}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"fullname": "senselab.audio.data_structures.audio.Audio.sampling_rate", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.sampling_rate", "kind": "variable", "doc": "<p>Returns the sampling rate of the audio.</p>\n\n<p>If the sampling rate is not set and a file is available, it is inferred from the file metadata.</p>\n", "annotation": ": int"}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"fullname": "senselab.audio.data_structures.audio.Audio.convert_to_tensor", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.convert_to_tensor", "kind": "function", "doc": "<p>Converts input audio data to a torch.Tensor with shape (num_channels, num_samples).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v:</strong>  Audio data in the form of a list, NumPy array, or torch.Tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A torch.Tensor representation of the audio data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.filepath": {"fullname": "senselab.audio.data_structures.audio.Audio.filepath", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.filepath", "kind": "function", "doc": "<p>Returns the file path of the audio if available.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.generate_id": {"fullname": "senselab.audio.data_structures.audio.Audio.generate_id", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.generate_id", "kind": "function", "doc": "<p>Generates a unique identifier for the Audio.</p>\n\n<p>The identifier is computed as an MD5-based UUID derived from the waveform and sampling rate.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string representing the generated unique identifier.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.window_generator": {"fullname": "senselab.audio.data_structures.audio.Audio.window_generator", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.window_generator", "kind": "function", "doc": "<p>Creates a sliding window generator for the audio waveform.</p>\n\n<p>Each yielded Audio instance corresponds to a window of the waveform.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>window_size:</strong>  Number of samples in each window.</li>\n<li><strong>step_size:</strong>  Number of samples to advance for each window.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Audio: A new Audio instance representing the current window.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">window_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">step_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"fullname": "senselab.audio.data_structures.audio.Audio.save_to_file", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.save_to_file", "kind": "function", "doc": "<p>Saves the Audio object to a file using torchaudio.save.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_path:</strong>  Destination file path.</li>\n<li><strong>format:</strong>  Audio format (e.g. \"wav\", \"ogg\", \"flac\"). Inferred from the file extension if None.</li>\n<li><strong>encoding:</strong>  Encoding to use (e.g. \"PCM_S\", \"PCM_U\"). Effective for formats like wav and flac.</li>\n<li><strong>bits_per_sample:</strong>  Bit depth (e.g. 8, 16, 24, 32, 64).</li>\n<li><strong>buffer_size:</strong>  Buffer size in bytes for processing.</li>\n<li><strong>backend:</strong>  I/O backend to use (e.g. \"ffmpeg\", \"sox\", \"soundfile\").</li>\n<li><strong>compression:</strong>  Compression level for supported formats (e.g. mp3, flac, ogg).</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ModuleNotFoundError:</strong>  If torchaudio is not available.</li>\n<li><strong>ValueError:</strong>  If the waveform dimensions or sampling rate are invalid.</li>\n<li><strong>RuntimeError:</strong>  If saving fails.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bits_per_sample</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">buffer_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4096</span>,</span><span class=\"param\">\t<span class=\"n\">backend</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">compression</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.from_stream": {"fullname": "senselab.audio.data_structures.audio.Audio.from_stream", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.from_stream", "kind": "function", "doc": "<p>Yield Audio objects from a live audio stream in fixed-duration chunks.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>stream_source:</strong>  A file path, stream, or bytes-like object.</li>\n<li><strong>chunk_duration_in_sec:</strong>  Duration (in seconds) of each audio chunk.</li>\n<li><strong>metadata:</strong>  Additional metadata for each chunk.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Audio objects for each chunk read from the stream.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">stream_source</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_duration_in_sec</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"fullname": "senselab.audio.data_structures.audio.Audio.model_post_init", "modulename": "senselab.audio.data_structures.audio", "qualname": "Audio.model_post_init", "kind": "function", "doc": "<p>This function is meant to behave like a BaseModel method to initialise private attributes.</p>\n\n<p>It takes context as an argument since that's what pydantic-core passes when calling it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>self:</strong>  The BaseModel instance.</li>\n<li><strong>context:</strong>  The context.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.batch_audios": {"fullname": "senselab.audio.data_structures.audio.batch_audios", "modulename": "senselab.audio.data_structures.audio", "qualname": "batch_audios", "kind": "function", "doc": "<p>Batches a list of Audio objects into a single Tensor while preserving individual metadata.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audio objects. They should all have the same number of channels.\nIt is advised that they also share the same sampling rate when required by processing.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A tuple containing:\n      - A Tensor of shape (batch_size, num_channels, num_samples),\n      - The sampling rate (as an integer if uniform, or a list otherwise),\n      - A list of each audio's metadata.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>RuntimeError:</strong>  If the Audio objects do not share the same number of channels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio.unbatch_audios": {"fullname": "senselab.audio.data_structures.audio.unbatch_audios", "modulename": "senselab.audio.data_structures.audio", "qualname": "unbatch_audios", "kind": "function", "doc": "<p>Unbatches a Tensor of audio data back into a list of Audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batched_audio:</strong>  Tensor of shape (batch_size, num_channels, num_samples).</li>\n<li><strong>sampling_rates:</strong>  A single sampling rate (if uniform) or a list of sampling rates.</li>\n<li><strong>metadatas:</strong>  A list of metadata dictionaries for each audio.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of Audio objects reconstituted from the batched data.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the batched_audio shape is invalid or if the number of items mismatches.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">batched_audio</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">sampling_rates</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">metadatas</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result": {"fullname": "senselab.audio.data_structures.audio_classification_result", "modulename": "senselab.audio.data_structures.audio_classification_result", "kind": "module", "doc": "<p>This module contains the definition of the AudioClassificationResult class.</p>\n"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult", "kind": "class", "doc": "<p>A class to represent a classification result.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>labels (List[str]):</strong>  Labels that the classification model is predicting over.</li>\n<li><strong>scores (List[float]):</strong>  The score for each label the classification model outputs.</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.labels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.scores", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[float]"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.validate_labels_and_scores", "kind": "function", "doc": "<p>Validates that the labels and scores are the same length and sort them.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio_classification_result</span><span class=\"o\">.</span><span class=\"n\">AudioClassificationResult</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.get_labels", "kind": "function", "doc": "<p>Get the labels that the model was classifying over.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str]: The full list of labels the model was classifying over,\n    are in order of highest to lowest classification score.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.get_scores", "kind": "function", "doc": "<p>Get the labels that the model was classifying over.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[float]: The full list of scores the model output for each label,\n    in order of highest to lowest classification score.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.get_label_score_pairs", "kind": "function", "doc": "<p>Get the labels and their scores.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Tuple[str,float]]: Pairs of labels and their associated scores from\n    the classification model, from highest to lowest score.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top_label", "kind": "function", "doc": "<p>Gets the top label based on the highest score.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top_score", "kind": "function", "doc": "<p>Gets the top score, based on highest value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top", "kind": "function", "doc": "<p>Gets the top label/score pairing, based on highest score value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top_k_labels", "kind": "function", "doc": "<p>Gets the top k label(s) based on the highest score.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top_k_score", "kind": "function", "doc": "<p>Gets the top k score(s), based on highest value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.top_k", "kind": "function", "doc": "<p>Gets the top k label/score pairing(s), based on highest score value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.from_hf_classification_pipeline", "kind": "function", "doc": "<p>Creates an AudioClassificationResult instance from HuggingFace's pipeline output.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>results (List[Dict]):</strong>  List of dictionaries of the form {\"score\": score, \"label\": label}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>AudioClassificationResult: An instance of AudioClassificationResult.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li>ValueError if results dictionaries are not of the form described.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio_classification_result</span><span class=\"o\">.</span><span class=\"n\">AudioClassificationResult</span>:</span></span>", "funcdef": "def"}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"fullname": "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config", "modulename": "senselab.audio.data_structures.audio_classification_result", "qualname": "AudioClassificationResult.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.audio.tasks": {"fullname": "senselab.audio.tasks", "modulename": "senselab.audio.tasks", "kind": "module", "doc": "<p>Tasks for audio processing.</p>\n"}, "senselab.audio.tasks.classification": {"fullname": "senselab.audio.tasks.classification", "modulename": "senselab.audio.tasks.classification", "kind": "module", "doc": "<h1 id=\"audio-classification\">Audio Classification</h1>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Audio Classification refers to the broad category of tasks of processing audio inputs and assigning a label over a set of possible classes. The technology has a wide range applications, including identifying speaker intent, language classification, and even animal species by their sounds.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>A variety of models are supported by <code>senselab</code> for audio classification tasks. They can be explored on the <a href=\"https://huggingface.co/models?library=transformers&pipeline_tag=audio-classification&sort=downloads\">Hugging Face Hub</a>. Each model varies in performance, size, license, language support, and more. Like with many models and tasks, performance may also vary depending on who the speaker is in the processed audio clips (there may be differences in terms of age, dialects, disfluencies). It is recommended to review the model card for each model before use. Also, always refer to the most recent literature for an informed decision. Unlike other tasks, the exact classification task will be based off of the dataset and class labels used to train the model, such that even two models using the same dataset might classify the audios into different categories (e.g. the LibriSpeech dataset could be used to classify age and/or gender based on the audio clips).</p>\n\n<h6 id=\"some-popular-models-for-different-classifications-include\">Some popular models for different classifications include:</h6>\n\n<blockquote>\n  <ul>\n  <li><a href=\"https://huggingface.co/audeering/wav2vec2-large-robust-24-ft-age-gender\">Age</a></li>\n  <li><a href=\"https://huggingface.co/alefiury/wav2vec2-large-xlsr-53-gender-recognition-librispeech\">Gender</a></li>\n  <li><a href=\"https://huggingface.co/agercas/distilhubert-finetuned-gtzan/blob/main/config.json\">Music Genre</a></li>\n  <li><a href=\"https://huggingface.co/bookbot/wav2vec2-adult-child-cls\">Adult vs. Child Speech</a></li>\n  <li><a href=\"https://huggingface.co/ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition\">Emotion Recognition</a></li>\n  </ul>\n</blockquote>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>The primary evaluation metric for audio classification is accuracy. This can be unweighted (the number of correct labels over the total number of labels) or weighted (where each class is weighted accordingly to how much of the whole dataset the class label represents).</p>\n\n<p>Other important metrics include:</p>\n\n<ul>\n<li><strong>Area Under the Curve (AUC)</strong></li>\n<li><strong>Precision</strong></li>\n<li><strong>Recall</strong></li>\n<li><strong>F1-Score</strong></li>\n</ul>\n\n<p>More information about the different metrics related to classification can be found <a href=\"https://developers.google.com/machine-learning/crash-course/classification/accuracy-precision-recall\">here</a> as well as a common function for understanding the results of a classification can be found in <a href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.metrics.classification_report.html\">scikit-learn</a>.</p>\n\n<h3 id=\"datasets\">Datasets</h3>\n\n<p>The following table lists the datasets included in the <a href=\"https://arxiv.org/abs/2210.13352\">English Speech Benchmark (ESB)</a>, which are generally used for evaluating ASR models in English:</p>\n\n<table>\n<thead>\n<tr>\n  <th>Dataset</th>\n  <th>Domain</th>\n  <th>Amount of Data (h)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>AudioSet</td>\n  <td>Audio Events/Ontology</td>\n  <td>5.8 thousand</td>\n</tr>\n<tr>\n  <td>ICBHI Respiratory Sound Database</td>\n  <td>Medical/Respiratory</td>\n  <td>5.5</td>\n</tr>\n<tr>\n  <td>ESC-50</td>\n  <td>Environmental Audio</td>\n  <td>2.77</td>\n</tr>\n<tr>\n  <td>MSP Podcast</td>\n  <td>Speech Emotion Recognition</td>\n  <td>238</td>\n</tr>\n</tbody>\n</table>\n\n<p>Note that this list of datasets is not exhaustive. If you are interested in benchmarking models in different languages or under specific conditions, consult the relevant literature.</p>\n"}, "senselab.audio.tasks.classification.api": {"fullname": "senselab.audio.tasks.classification.api", "modulename": "senselab.audio.tasks.classification.api", "kind": "module", "doc": "<p>This module represents the API for the speech classification task within the senselab package.</p>\n\n<p>Currently, it supports only Hugging Face models, with plans to include more in the future.\nUsers can specify the audio clips to classify, the classification model, the preferred device,\nand the model-specific parameters, and senselab handles the rest.</p>\n"}, "senselab.audio.tasks.classification.api.classify_audios": {"fullname": "senselab.audio.tasks.classification.api.classify_audios", "modulename": "senselab.audio.tasks.classification.api", "qualname": "classify_audios", "kind": "function", "doc": "<p>Classify all audios using the given model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be classified.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for classification.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to pass to the classification function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[AudioClassificationResult]: The list of classification results.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Include more models (e.g., speechbrain, nvidia)</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio_classification_result</span><span class=\"o\">.</span><span class=\"n\">AudioClassificationResult</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.classification.huggingface": {"fullname": "senselab.audio.tasks.classification.huggingface", "modulename": "senselab.audio.tasks.classification.huggingface", "kind": "module", "doc": "<p>This module provides a factory for managing Hugging Face audio classification pipelines.</p>\n\n<p>To ensure correct functionality, call <code>classify_audios_with_transformers</code> serially or,\nif you need to process multiple audios in parallel, pass the entire list of audios to the\nfunction at once, rather than calling the function with one audio at a time.</p>\n"}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"fullname": "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier", "modulename": "senselab.audio.tasks.classification.huggingface", "qualname": "HuggingFaceAudioClassifier", "kind": "class", "doc": "<p>A factory for managing Hugging Face audio classification pipelines.</p>\n"}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"fullname": "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers", "modulename": "senselab.audio.tasks.classification.huggingface", "qualname": "HuggingFaceAudioClassifier.classify_audios_with_transformers", "kind": "function", "doc": "<p>Transcribes all audio samples in the dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be classified.</li>\n<li><strong>model (HFModel):</strong>  The Hugging Face model used for classification.\nThere is no default model since this task covers a wide range of models.</li>\n<li><strong>top_k (Optional[int]):</strong>  the number of top labels for the model to return.\nIf no top_k, the model returns all of the labels in the configuration file.</li>\n<li><strong>function_to_apply (str):</strong>  The function to apply to the model's outputs (default is softmax).</li>\n<li><strong>batch_size (int):</strong>  The batch size for processing (default is 16).</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[AudioClassificationResult]: The list of classification results,\n      where each result contains the classified label and their score.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">HFModel</span>,</span><span class=\"param\">\t<span class=\"n\">top_k</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">function_to_apply</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;softmax&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sigmoid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;none&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;softmax&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio_classification_result</span><span class=\"o\">.</span><span class=\"n\">AudioClassificationResult</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition", "kind": "module", "doc": "<h1 id=\"speech-emotion-recognition\">Speech Emotion Recognition</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/speech_emotion_recognition.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Speech Emotion Recognition (SER) is the process of recognizing emotion from audio clips, typically of speech. This technology has a wide range of applications, from call center monitoring to possible therapeutic interventions.</p>\n\n<p>SER is typically split between two subcategories: discrete emotion classification and dimensional emotion attribute recognition/approximation. The former is the more common activity and aligns well with the general task of audio classification: given a set of labels, can we accurately attribute one or more of the labels to an audio. For these, most datasets will use <a href=\"https://www.paulekman.com/universal-emotions/\">Ekman's Big 6 emotions</a> (and neutrality) or some subset of them: happiness, anger, fear, sadness, disgust, and surprise. The latter subtask in SER tries to break emotionality into different continuous attributes (typically dominance, arousal, and valence) which can be estimated from audio clips and for which then different ranges of values combine to create what we consider to be a single emotional label.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>A variety of models are supported by <code>senselab</code> for SER tasks. They can be explored on the <a href=\"https://huggingface.co/models?pipeline_tag=audio-classification&library=transformers&sort=downloadss\">Hugging Face Hub</a> and using search terms like \"SER\" or \"emotion\". Each model varies in performance, size, license, language support, and more. Performance may also vary depending on who is the speaker in the processed audio clips (there may be differences in terms of age, dialects, disfluencies). It is recommended to review the model card for each model before use. Also, always refer to the most recent literature for an informed decision.</p>\n\n<p>Most major models for SER currently focus on taking large, pre-trained models and then fine-tuning those towards specific tasks. Below we list 3 of these models with some examples that others have fine-tuned for the SER task.</p>\n\n<ul>\n<li><strong><a href=\"https://arxiv.org/abs/2110.13900\">WavLM</a></strong>\nDeveloped by Microsoft researchers in 2022 and still remains one of the top self-supervised audio models on the <a href=\"https://superbbenchmark.github.io/#/\">SUPERB benchmark</a>.\n<ul>\n<li><a href=\"https://huggingface.co/3loi/SER-Odyssey-Baseline-WavLM-Categorical\">3loi/SER-Odyssey-Baseline-WavLM-Categorical</a>: Categorical WavLM model trained on MSP-Podcast</li>\n<li><a href=\"https://huggingface.co/3loi/SER-Odyssey-Baseline-WavLM-Multi-Attributes\">3loi/SER-Odyssey-Baseline-WavLM-Multi-Attributes</a>: Dimensional WavLM model trained on MSP-Podcast</li>\n</ul></li>\n<li><strong><a href=\"https://arxiv.org/abs/2006.11477\">wav2vec2</a></strong>\nA predecessor to WavLM, wav2vec2 was developed as a framework for creating self-supervised speech representations. While older than WavLM, it still performs quite well on multiple benchmarks.\n<ul>\n<li><a href=\"https://huggingface.co/ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition\">ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition</a>: the XLSR refers to Cross-lingual Representation Learning, a more modern Wav2Vec2 model that performs especially well across languages</li>\n<li><a href=\"https://huggingface.co/audeering/wav2vec2-large-robust-12-ft-emotion-msp-dim\">audeering/wav2vec2-large-robust-12-ft-emotion-msp-dim</a>: Wav2Vec2 dimensional recognition model trained on MSP-Podcast</li>\n</ul></li>\n<li><strong>(HuBERT)[https://arxiv.org/abs/2106.07447]</strong>\nHidden-Unit BERT is a self-supervised speech representation learning approach that takes a BERT-like preidction loss approach.\n<ul>\n<li><a href=\"https://huggingface.co/superb/hubert-large-superb-er\">superb/hubert-large-superb-er</a>: The official SUPERB model submission for emotion recognition.</li>\n</ul></li>\n</ul>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>The primary evaluation metric for audio classification, including SER, is accuracy. This can be unweighted (the number of correct labels over the total number of labels) or weighted (where each class is weighted accordingly to how much of the whole dataset the class label represents).</p>\n\n<p>Other important metrics include:</p>\n\n<ul>\n<li><strong>Area Under the Curve (AUC)</strong></li>\n<li><strong>Precision</strong></li>\n<li><strong>Recall</strong></li>\n<li><strong>F1-Score</strong></li>\n</ul>\n\n<p>More information about the different metrics related to classification can be found <a href=\"https://developers.google.com/machine-learning/crash-course/classification/accuracy-precision-recall\">here</a> as well as a common function for understanding the results of a classification can be found in <a href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.metrics.classification_report.html\">scikit-learn</a>. For dimensional SER, mean-squared error is a typical metric since models are trying to minimize the distance between their predicted value and a ground-truth human evaluation for each dimension.</p>\n\n<h3 id=\"datasets\">Datasets</h3>\n\n<p>The following table lists the datasets used for training and testing the performance of SER models. Datasets come from a variety of languages, some even are meant to test multi-lingual model capabilities, as well as they vary widely in terms of the actors that were included, the actors' proficientry, the total number of emotional labels used, and more. Of notable importance is the \"truthfulness\" of the emotions and the setup procedure. Many papers continuously find that performance on SER tasks shows a sharp dropoff when switching between corpora and domains. One possible explanation for this is that most datasets are not \"true\" expressions of emotions, but rather come from acted scenarios where the actors (possibly professional and/or amateur) will simulate or induce the requested emotion. A drawback of this procedure is that it is believed that this causes over-emphasis on certain characteristics for different emotions that deep learning models will pickup on and use that don't occur in more naturalistic settings, causing a performance drop in real-world scenarios. This remains an open and debated problem within the literature.</p>\n\n<table>\n<thead>\n<tr>\n  <th>Dataset</th>\n  <th>Language</th>\n  <th>Actors' demographics</th>\n  <th>Actors' proficiency</th>\n  <th># of Emotions</th>\n  <th>Truthfulness of emotions</th>\n  <th>Setup</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>ASED</td>\n  <td>Amharic</td>\n  <td>40M, 25F</td>\n  <td>Professional, semi-professional, amateur</td>\n  <td>4 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled Setting</td>\n</tr>\n<tr>\n  <td>Belfast Database</td>\n  <td>English</td>\n  <td>100 speakers</td>\n  <td>Amateur</td>\n  <td>24</td>\n  <td>Induced</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>CASIA</td>\n  <td>Mandarin</td>\n  <td>4M, 4F</td>\n  <td>Professional</td>\n  <td>5 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>CHEAVD</td>\n  <td>Mandarin</td>\n  <td>125M, 113F</td>\n  <td>Professional &amp; amateur</td>\n  <td>26</td>\n  <td>Simulated and naturalistic</td>\n  <td>Controlled and uncontrolled setting</td>\n</tr>\n<tr>\n  <td>DEMoS</td>\n  <td>Italian</td>\n  <td>45M, 23F</td>\n  <td>Amateur</td>\n  <td>7 + neutrality</td>\n  <td>Induced</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>DES</td>\n  <td>Danish</td>\n  <td>2M, 2F</td>\n  <td>Semi--professional</td>\n  <td>4 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>EMODB</td>\n  <td>German</td>\n  <td>5M, 5F</td>\n  <td>Professional</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>Emovo</td>\n  <td>Italian</td>\n  <td>3M, 3F</td>\n  <td>Professional</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>Emozionalmente</td>\n  <td>Italian</td>\n  <td>131M, 299F</td>\n  <td>Professional &amp; amateur</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Uncontrolled setting</td>\n</tr>\n<tr>\n  <td>eNTERFACE</td>\n  <td>English</td>\n  <td>34M, 8F</td>\n  <td>Amateur</td>\n  <td>6</td>\n  <td>Induced</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>EmoMatchSpanishDB</td>\n  <td>Spanish</td>\n  <td>30M, 20F</td>\n  <td>Amateur</td>\n  <td>6 + neutrality</td>\n  <td>Induced</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>\u20acmotion</td>\n  <td>English, French, German, Italian</td>\n  <td>39M</td>\n  <td>Professional and amateur</td>\n  <td>6 + neutrality</td>\n  <td>Simulated &amp; induced</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>IEMOCAP</td>\n  <td>English</td>\n  <td>5M, 5F</td>\n  <td>Professional</td>\n  <td>3 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>INTERFACE</td>\n  <td>English, French, Slovenian, Spanish</td>\n  <td>2M, 1F (English), 1M, 1F (others)</td>\n  <td>Professional</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>MESD</td>\n  <td>Spanish</td>\n  <td>4M, 4D (adults), 3M, 5F (children)</td>\n  <td>Amateur</td>\n  <td>5 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>MSP-Podcast</td>\n  <td>English</td>\n  <td>&gt; 1400 speakers</td>\n  <td>Professional and amateur</td>\n  <td>7 + neutrality + other</td>\n  <td>Naturalistic</td>\n  <td>Controlled and uncontrolled setting</td>\n</tr>\n<tr>\n  <td>RAVDESS</td>\n  <td>English</td>\n  <td>12M, 12F</td>\n  <td>Professional</td>\n  <td>7 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>RUSLANA</td>\n  <td>Russian</td>\n  <td>12M, 49F</td>\n  <td>Amateur</td>\n  <td>5 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>SAVEE</td>\n  <td>English</td>\n  <td>4M</td>\n  <td>Amateur</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n<tr>\n  <td>SUBESCO</td>\n  <td>Bangla</td>\n  <td>10M, 10F</td>\n  <td>Professional</td>\n  <td>6 + neutrality</td>\n  <td>Simulated</td>\n  <td>Controlled setting</td>\n</tr>\n</tbody>\n</table>\n\n<p>Note that this list of datasets is not exhaustive. If you are interested in benchmarking models in different languages or under specific conditions, consult the relevant literature.</p>\n\n<h3 id=\"benchmark\">Benchmark</h3>\n\n<p>One of the leading benchmarks for SER comes from the creators of the <a href=\"https://superbbenchmark.github.io/#/\">SUPERB challenge</a>, which benchmarks different self-supervised models and how well they perform on downstream tasks (one of which being emotion recognition). <a href=\"https://emosuperb.github.io/index.html\">EMO-SUPERB</a> tests models on different available datasets and benchmarks them as an average of their overall performance. Rather than just using one or two similar datasets, this benchmark includes 9 datasets that span some of the different combinations of attributes that were described in the previous table. These datasets help test whether models might one day generalize to novel contexts and out-of-distribution scenarios.</p>\n"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "kind": "module", "doc": "<p>This module represents the API for the running speech emotion recognition within the senselab package.</p>\n\n<p>Currently, it supports only Hugging Face models, with plans to include more in the future.\nUsers can specify the audio clips to classify, the classification model, the preferred device,\nand the model-specific parameters, and senselab handles the rest.</p>\n"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "SERType", "kind": "class", "doc": "<p>SER types for determining model output behaviors.</p>\n", "bases": "enum.Enum"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "SERType.DISCRETE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SERType.DISCRETE: &#x27;discrete&#x27;&gt;"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "SERType.CONTINUOUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SERType.CONTINUOUS: &#x27;continuous&#x27;&gt;"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "SERType.VALENCE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SERType.VALENCE: &#x27;valence&#x27;&gt;"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "SERType.NOT_RECOGNIZED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SERType.NOT_RECOGNIZED: &#x27;not recognized&#x27;&gt;"}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"fullname": "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech", "modulename": "senselab.audio.tasks.classification.speech_emotion_recognition.api", "qualname": "classify_emotions_from_speech", "kind": "function", "doc": "<p>Classify all audios using the given speech emotion recognition model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be classified.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for classification, should be trained for recognizing emotions.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to pass to the classification function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[AudioClassificationResult]: The list of speech emotion recognition results.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Include more models (e.g., speechbrain, nvidia)</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio_classification_result</span><span class=\"o\">.</span><span class=\"n\">AudioClassificationResult</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.data_augmentation": {"fullname": "senselab.audio.tasks.data_augmentation", "modulename": "senselab.audio.tasks.data_augmentation", "kind": "module", "doc": "<h1 id=\"audio-data-augmentation\">Audio data augmentation</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/audio_data_augmentation.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Data augmentation involves creating synthetic audio samples by adding some perturbations to the original data. This technique helps mimic real-world variations, making the audio data more robust and versatile for different contexts, whether for creative, practical, or analytical purposes. Importantly, in the machine learning space, these perturbations must maintain the same label as the original training sample.</p>\n\n<h3 id=\"common-techniques\">Common Techniques</h3>\n\n<p>Here are some commonly used audio data augmentation techniques:</p>\n\n<ul>\n<li><strong>Noise Injection</strong>: Adds background noise to simulate real-world environments, such as crowds, traffic, or machinery.</li>\n<li><strong>Pitch Shifting</strong>: Changes the pitch by altering the sound frequency without affecting its speed, often used to modify the tonal quality or mood.</li>\n<li><strong>Time Stretching</strong>: Speeds up or slows down the audio without changing its pitch, useful for adjusting the timing of audio to meet specific requirements.</li>\n<li><strong>Volume Adjustment</strong>: Increases or decreases loudness to simulate different recording conditions or adjust audio levels.</li>\n<li><strong>Reverb</strong>: Applies echo or reverberation effects to simulate different acoustic environments, adding depth and space to the audio.</li>\n</ul>\n\n<h3 id=\"libraries-audiomentations-and-torch-audiomentations\">Libraries: <code>audiomentations</code> and <code>torch-audiomentations</code></h3>\n\n<ul>\n<li><p><a href=\"https://github.com/iver56/audiomentations\">audiomentations</a>: A CPU-based Python library offering a wide variety of audio augmentation transforms. It's inspired by albumentations and optimized for deep learning tasks, such as speech processing and noise-robustness testing. It supports both mono and multichannel audio, with an easy-to-use interface.</p></li>\n<li><p><a href=\"https://github.com/asteroid-team/torch-audiomentations\">torch-audiomentations</a>: A GPU-accelerated augmentation library for PyTorch, allowing for efficient real-time augmentation. This is ideal for speeding up model training and reducing data loading times. It supports a subset of the techniques from audiomentations but is optimized for high-speed processing.\nCompared to <code>audiomentations</code>, <code>torch-audiomentations</code> offers a more limited set of augmentation types.</p></li>\n</ul>\n\n<p>In <code>senselab</code>, when these libraries run on a CPU, they utilize concurrent futures through <code>Pydra</code> for optimization.</p>\n\n<p>For more information on CPU vs GPU audio data augmentation, including the pros and cons, see <a href=\"https://iver56.github.io/audiomentations/guides/cpu_vs_gpu/\">this guide</a>.</p>\n"}, "senselab.audio.tasks.data_augmentation.api": {"fullname": "senselab.audio.tasks.data_augmentation.api", "modulename": "senselab.audio.tasks.data_augmentation.api", "kind": "module", "doc": "<p>This module provides the API for data augmentation tasks.</p>\n"}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"fullname": "senselab.audio.tasks.data_augmentation.api.augment_audios", "modulename": "senselab.audio.tasks.data_augmentation.api", "qualname": "augment_audios", "kind": "function", "doc": "<p>Augments all provided audios.</p>\n\n<p>Uses either torch-audiomentations or audiomentations, calling the appropriate method based on\nthe type of Compose. If runs on CPU, pydra is used for optimization using concurrent futures.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audios whose data will be augmented with the given augmentations.</li>\n<li><strong>augmentation:</strong>  A composition of augmentations (torch-audiomentations or audiomentations).</li>\n<li><strong>device:</strong>  The device to use for augmenting (relevant for torch-audiomentations).\nDefaults is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of augmented audios.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">augmentation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch_audiomentations</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">composition</span><span class=\"o\">.</span><span class=\"n\">Compose</span><span class=\"p\">,</span> <span class=\"n\">audiomentations</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">composition</span><span class=\"o\">.</span><span class=\"n\">Compose</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.data_augmentation.audiomentations": {"fullname": "senselab.audio.tasks.data_augmentation.audiomentations", "modulename": "senselab.audio.tasks.data_augmentation.audiomentations", "kind": "module", "doc": "<p>This module implements some utilities for audio data augmentation with audiomentations.</p>\n"}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"fullname": "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations", "modulename": "senselab.audio.tasks.data_augmentation.audiomentations", "qualname": "augment_audios_with_audiomentations", "kind": "function", "doc": "<p>Augments all provided audios with audiomentations library.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audios whose data will be augmented with the given augmentations.</li>\n<li><strong>augmentation:</strong>  A Composition of augmentations to run on each audio (uses audiomentations).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of audios that have passed through the provided augmentation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">augmentation</span><span class=\"p\">:</span> <span class=\"n\">audiomentations</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">composition</span><span class=\"o\">.</span><span class=\"n\">Compose</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"fullname": "senselab.audio.tasks.data_augmentation.torch_audiomentations", "modulename": "senselab.audio.tasks.data_augmentation.torch_audiomentations", "kind": "module", "doc": "<p>This module implements some utilities for audio data augmentation with torch_audiomentations.</p>\n"}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"fullname": "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations", "modulename": "senselab.audio.tasks.data_augmentation.torch_audiomentations", "qualname": "augment_audios_with_torch_audiomentations", "kind": "function", "doc": "<p>Augments all provided audios with a given augmentation, either individually or all batched together.</p>\n\n<p>Augment all audios with a user defined augmentation that can be a composition of multiple augmentations.\nThis augmentation is either performed on each audio individually (using pydra for optimization)\nor all of the audios provided are batched together and run at once.\nIt uses torch_audiomentations. If batching, all audios must have the same sampling rate.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audios whose data will be augmented with the given augmentations</li>\n<li><strong>augmentation:</strong>  A Composition of augmentations to run on each audio (uses torch-audiomentations), should have its\noutput_type set to \"dict\"</li>\n<li><strong>device:</strong>  The device to use for augmenting. If the chosen device\nis CUDA then the audios are all batched together, so for optimal performance, batching should\nbe done by passing a batch_size worth of audios ar a time.\nDefault is None, which will select the device automatically.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of audios that has passed the all of input audios through the provided augmentation. This does\n      not necessarily mean that the augmentation has been run on every audio. For more information,\n      see the torch-audiomentations documentation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">augmentation</span><span class=\"p\">:</span> <span class=\"n\">torch_audiomentations</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">composition</span><span class=\"o\">.</span><span class=\"n\">Compose</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction": {"fullname": "senselab.audio.tasks.features_extraction", "modulename": "senselab.audio.tasks.features_extraction", "kind": "module", "doc": "<h1 id=\"features-extraction\">Features extraction</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/features_extraction.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>This module provides the API for extracting voice and speech features from audio recordings using the <code>senselab</code> package. Features span multiple speech subsystems/clincal constructs\u2014such as fluency, respiration, phonation, articulation, and spectral characteristics\u2014and are derived using trusted libraries including <code>Praat-Parselmouth</code>, <code>OpenSMILE</code>, <code>Torchaudio</code>, and <code>Torchaudio-SQUIM</code>.</p>\n\n<p>The following table summarizes the currently supported features, categorized by speech subsystem or clinical construct, and includes a description, units, implementation reference, and implementation status.</p>\n\n<table>\n<thead>\n<tr>\n  <th><strong>Speech Subsystem/ Clinical construct</strong></th>\n  <th><strong>Feature</strong></th>\n  <th><strong>Description</strong></th>\n  <th><strong>Unit</strong></th>\n  <th><strong>Implementation</strong></th>\n  <th><strong>Implemented</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Fluency</td>\n  <td>Duration</td>\n  <td>Total length of the audio recording</td>\n  <td>sec</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_audio_duration\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Phonation Time</td>\n  <td>Length of all phonated sounds within the audio</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Phonation Ratio</td>\n  <td>Phonation time divided by duration</td>\n  <td>--</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_speech_rate\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Mean Phrase Duration</td>\n  <td>Average duration of a phrase (continuous speech between pauses)</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Coefficient of Variance Phrase Duration</td>\n  <td>Normalized variability of phrase durations</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Number of Spoken Units</td>\n  <td>Number of spoken units (phonemes, syllables, or words) identified in the audio</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Mean Unit Duration</td>\n  <td>Phonation Time divided by the number of spoken units</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Speaking Rate</td>\n  <td>Number of spoken units divided by duration</td>\n  <td>unit sec\u207b\u00b9</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_speech_rate\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Articulation Rate</td>\n  <td>Number of spoken units divided by phonation time</td>\n  <td>unit sec\u207b\u00b9</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_speech_rate\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Mean Length of Run</td>\n  <td>Average number of units produced in runs between silences</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Number Pauses</td>\n  <td>Number of filled/silent pauses in a recording</td>\n  <td>unit</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Pause Rate</td>\n  <td>Number of pauses divided by duration</td>\n  <td>unit\u207b\u00b9</td>\n  <td>Praat Parselmouth ( <a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_speech_rate\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Pause Ratio</td>\n  <td>Total pause time divided by audio recording duration</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Mean Pause Duration</td>\n  <td>Average duration of pauses (filled/silent)</td>\n  <td>sec</td>\n  <td>Praat Parselmouth ( <a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_speech_rate\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Coefficient of Variance Pause Duration</td>\n  <td>Normalized variability in pause durations</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Mean Phone Length</td>\n  <td>Average duration of phones</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Phoneme-Dependent Duration</td>\n  <td>Linear combination of average phone durations</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Voice Onset Time (VOT)</td>\n  <td>Time between release of a stop consonant and the onset of vocal fold vibration</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Maximum Phonation Time</td>\n  <td>Maximum duration of a continuous phonation (usually a vowel)</td>\n  <td>sec</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Fluency</td>\n  <td>Pairwise Variability Index</td>\n  <td>Temporal variability between successive speech unit intervals</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Intensity</td>\n  <td>Sum of the squares of the signal amplitude (approximates loudness)</td>\n  <td>dB</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_intensity_descriptors\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Intensity Range</td>\n  <td>Range of loudness values in a speech signal</td>\n  <td>--</td>\n  <td>Praat Parselmouth ( <a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_intensity_descriptors\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Voice Range Profile (VRP)</td>\n  <td>Minimum and maximum intensity across a set of frequencies</td>\n  <td>dBHz\u207b\u00b9</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Number of Breath Events</td>\n  <td>Count of inhalations in a recording</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Speech Respiration Rate</td>\n  <td>Respiratory rate during speech</td>\n  <td>unit\u207b\u00b9</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Speech Tidal Volume</td>\n  <td>Amount of air inhaled during a typical breath for speech</td>\n  <td>mL</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Pause Intervals per Respiration</td>\n  <td>Measure of breathing periodicity</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Relative Loudness of Respiration</td>\n  <td>Ratio of respiration loudness relative to speech intensity</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Respiration</td>\n  <td>Respiratory Exchange Latency</td>\n  <td>Time interval between expiration and the subsequent inspiration</td>\n  <td>s</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Fundamental Frequency (F0)</td>\n  <td>Rate of vocal-fold vibration (perceived as pitch)</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_pitch_descriptors\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Pitch Sigma</td>\n  <td>Standard deviation of F0, expressed in semitones</td>\n  <td>Semitones</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Jitter (Absolute)</td>\n  <td>Average absolute difference between consecutive F0 periods</td>\n  <td>sec</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_jitter\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Jitter (Relative)</td>\n  <td>Absolute jitter divided by the average F0 period</td>\n  <td>%</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_jitter\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Shimmer (local)</td>\n  <td>Average absolute amplitude difference between consecutive F0 periods (relative measure)</td>\n  <td>%</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_shimmer\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Shimmer (dB)</td>\n  <td>Difference in amplitude between consecutive F0 periods, expressed in dB</td>\n  <td>dB</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_shimmer\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Harmonic to Noise Ratio</td>\n  <td>Ratio of harmonic energy to noise energy in voiced segments</td>\n  <td>dB</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_harmonicity_descriptors\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Percentage of Unvoiced Frames</td>\n  <td>Fraction of pitch frames detected as unvoiced</td>\n  <td>%</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Number of Voice Breaks</td>\n  <td>Count of interruptions in the fundamental period during sustained phonation</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Degree of Voice Breaks</td>\n  <td>Total duration of voice breaks relative to total signal duration</td>\n  <td>%</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Hammarberg Index</td>\n  <td>Difference between dominant frequencies in two spectral ranges (0\u20132000 Hz and 2000\u20135000 Hz)</td>\n  <td>Hz</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Spectral Slope</td>\n  <td>Slope of the long-term average spectrum</td>\n  <td>dB/octave</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_slope_tilt\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Spectral Tilt</td>\n  <td>Tilt of the regression line through the long-term average spectrum</td>\n  <td>--</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_slope_tilt\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Cepstral Peak Prominence</td>\n  <td>Integrative measure of temporal aperiodicity and spectral variation</td>\n  <td>dB</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_cpp_descriptors\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>H1\u2013H2</td>\n  <td>Difference between the levels of the first two harmonics</td>\n  <td>dB</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>H1<em>-H2</em></td>\n  <td>Difference between the first two harmonics after removing formant influence</td>\n  <td>dB</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Harmonic Richness Factor</td>\n  <td>Amplitude relationship between the fundamental and higher harmonics</td>\n  <td>dB</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Parabolic Spectral Parameter</td>\n  <td>Quantifies the spectral decay of the voice source</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Open Quotient</td>\n  <td>Ratio of the open phase of the glottal pulse to the fundamental period</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Closing Quotient</td>\n  <td>Ratio of the glottal closing phase to the fundamental period</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Speed Quotient</td>\n  <td>Ratio between the durations of glottal opening and closing phases</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Phonation</td>\n  <td>Normalized Amplitude Quotient</td>\n  <td>Ratio between the amplitude of the airflow and the peak flow derivative, normalized by period length</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Formant Frequencies</td>\n  <td>Center frequencies of vocal tract resonance peaks</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#measure_f1f2_formants_bandwidths\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Formant Bandwidths</td>\n  <td>Width of the spectral peak (3 dB down from the resonance peak)</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#measure_f1f2_formants_bandwidths\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Formant Slopes</td>\n  <td>Rate of change in formant frequencies over time</td>\n  <td>Hz/ms</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Vocal Tract Coordination</td>\n  <td>Cross-correlation between formant trajectories at set time delays</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Vowel Space Area</td>\n  <td>Area of the quadrilateral defined by the four corner vowels in the F1\u2013F2 space</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Formant Centralization Ratio (FCR)</td>\n  <td>Ratio combining F1 and F2 values of corner vowels (/a/, /u/, /i/) as defined in the literature</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Vowel Articulation Index (VAI)</td>\n  <td>Reciprocal of the Formant Centralization Ratio</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Goodness of Pronunciation</td>\n  <td>Posterior probabilities from an acoustic model reflecting pronunciation quality</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Wideband Perceptual Estimation of Speech Quality (PESQ)</td>\n  <td>Objective measure of speech quality based on perceptual modeling</td>\n  <td>--</td>\n  <td>Torchaudio-SQUIM (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio_squim.html#extract_objective_quality_features_from_audios\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Short-Time Objective Intelligibility (STOI)</td>\n  <td>Predicts speech intelligibility by comparing short-time temporal envelopes of reference and degraded signals</td>\n  <td>--</td>\n  <td>Torchaudio-SQUIM (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio_squim.html#extract_objective_quality_features_from_audios\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Scale-Invariant Signal-to-Distortion Ratio (SI-SDR)</td>\n  <td>Signal fidelity measure that is invariant to signal scale</td>\n  <td>dB</td>\n  <td>Torchaudio-SQUIM (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio_squim.html#extract_objective_quality_features_from_audios\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Articulation</td>\n  <td>Mean Opinion Score (MOS)</td>\n  <td>Subjective estimate of audio quality rated by a neural network model trained on human ratings</td>\n  <td>--</td>\n  <td>Torchaudio-SQUIM (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio_squim.html#extract_subjective_quality_features_from_audios\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Spectral Gravity</td>\n  <td>Spectral centroid (center of gravity) of the signal</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_spectral_moments\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Spectral Deviation</td>\n  <td>Spread of spectral energy around the centroid (second moment)</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_spectral_moments\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Spectral Skewness</td>\n  <td>Asymmetry of the spectral energy distribution (third moment)</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_spectral_moments\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Spectral Kurtosis</td>\n  <td>Flatness (peakedness) of the spectral distribution (fourth moment)</td>\n  <td>Hz</td>\n  <td>Praat Parselmouth (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/praat_parselmouth.html#extract_spectral_moments\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Mel Frequency Cepstral Coefficients</td>\n  <td>Multivariate spectral representation based on the Mel frequency scale</td>\n  <td>--</td>\n  <td>Torchaudio (<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_mfcc_from_audios\">docs</a>)</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Linear Predictive Cepstral Coefficients</td>\n  <td>Cepstral coefficients derived through Linear Predictive Coding</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td>Spectral</td>\n  <td>Perceptual Linear Prediction</td>\n  <td>Spectral representation based on the Bark scale with equal-loudness pre-emphasis</td>\n  <td>--</td>\n  <td>N/A</td>\n  <td>No</td>\n</tr>\n</tbody>\n</table>\n\n<p>Beyond the descriptors listed below, users can extract additional acoustic representations such as:</p>\n\n<ul>\n<li><a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/opensmile.html#extract_opensmile_features_from_audios\">OpenSMILE features</a></li>\n<li><a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_spectrogram_from_audios\">Spectrograms</a></li>\n<li><a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_mel_spectrogram_from_audios\">Mel spectrograms</a></li>\n<li><a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_mel_filter_bank_from_audios\">Mel filterbanks</a>\n(<a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_mel_filter_bank_from_spectrograms\">from spectrograms</a>)</li>\n<li><a href=\"https://sensein.group/senselab/senselab/audio/tasks/features_extraction/torchaudio.html#extract_pitch_from_audios\">Pitch values</a></li>\n</ul>\n\n<p><strong>Note:</strong> This section is actively under development. Coming updates will address usability, efficiency, clarity, robustness, and overall effectiveness. We welcome any feedback\u2014feel free to reach out via email at <a href=\"mailto:fabiocat@mit.edu\">fabiocat@mit.edu</a> or open an issue on <a href=\"https://github.com/sensein/senselab/issues\">GitHub</a>.</p>\n"}, "senselab.audio.tasks.features_extraction.api": {"fullname": "senselab.audio.tasks.features_extraction.api", "modulename": "senselab.audio.tasks.features_extraction.api", "kind": "module", "doc": "<p>This module provides functions to describe audio files by extracting features.</p>\n\n<p>The extracted descriptors represent dimensions within a multi-dimensional space,\nallowing for a detailed analysis of each file's characteristics.\nThese dimensions can be updated or refined in the future as part of ongoing development efforts.\nThis module is currently a work in progress.</p>\n"}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.api.extract_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.api", "qualname": "extract_features_from_audios", "kind": "function", "doc": "<p>Extract features from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to extract features from.</li>\n<li><strong>opensmile (Union[Dict[str, str], bool]):</strong>  Parameters for OpenSMILE feature extraction.\nIf False, OpenSMILE features will not be extracted. If True, uses default OpenSMILE parameters.\nIf a dictionary, should contain \"feature_set\" and \"feature_level\" keys.</li>\n<li><strong>parselmouth (Union[Dict[str, str], bool]):</strong>  Parameters for Praat Parselmouth feature extraction.\nIf False, Praat Parselmouth features will not be extracted.\nIf True, uses default Praat Parselmouth parameters.\nIf a dictionary, should contain \"time_step\", \"window_length\", \"pitch_unit\", \"cache_dir\",\n\"speech_rate\", \"intensity_descriptors\", \"harmonicity_descriptors\", \"formants\", \"spectral_moments\", \"pitch\",\n\"slope_tilt\", \"cpp_descriptors\", \"duration\", \"jitter\", \"shimmer\" keys.</li>\n<li><strong>torchaudio (Union[Dict[str, str], bool]):</strong>  Parameters for torchaudio feature extraction.\nIf False, torchaudio features will not be extracted. If True, uses default torchaudio parameters.\nIf a dictionary, should contain \"freq_low\", \"freq_high\", \"n_fft\", \"n_mels\", \"n_mfcc\",\n\"win_length\" and \"hop_length\" keys.</li>\n<li><strong>torchaudio_squim (bool):</strong>  Parameters for torchaudio_squim feature extraction.\nIf False, torchaudio_squim features will not be extracted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: The list of feature dictionaries for each audio.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">extract_features_from_audios</span><span class=\"p\">(</span><span class=\"n\">audios</span><span class=\"p\">)</span>\n<span class=\"go\">[{&#39;opensmile&#39;: {&#39;F0semitoneFrom27.5Hz_sma3nz_amean&#39;: 25.710796356201172,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_stddevNorm&#39;: 0.1605353206396103,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_percentile20.0&#39;: 21.095951080322266,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_percentile50.0&#39;: 25.9762020111084,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_percentile80.0&#39;: 29.512413024902344,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_pctlrange0-2&#39;: 8.416461944580078,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_meanRisingSlope&#39;: 82.34796905517578,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_stddevRisingSlope&#39;: 99.20043182373047,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_meanFallingSlope&#39;: 22.002275466918945,</span>\n<span class=\"go\">&#39;F0semitoneFrom27.5Hz_sma3nz_stddevFallingSlope&#39;: 9.043970108032227,</span>\n<span class=\"go\">&#39;loudness_sma3_amean&#39;: 0.86087566614151,</span>\n<span class=\"go\">&#39;loudness_sma3_stddevNorm&#39;: 0.43875235319137573,</span>\n<span class=\"go\">&#39;loudness_sma3_percentile20.0&#39;: 0.5877408981323242,</span>\n<span class=\"go\">&#39;loudness_sma3_percentile50.0&#39;: 0.8352401852607727,</span>\n<span class=\"go\">&#39;loudness_sma3_percentile80.0&#39;: 1.1747918128967285,</span>\n<span class=\"go\">&#39;loudness_sma3_pctlrange0-2&#39;: 0.5870509147644043,</span>\n<span class=\"go\">&#39;loudness_sma3_meanRisingSlope&#39;: 10.285204887390137,</span>\n<span class=\"go\">&#39;loudness_sma3_stddevRisingSlope&#39;: 7.544795513153076,</span>\n<span class=\"go\">&#39;loudness_sma3_meanFallingSlope&#39;: 7.612527370452881,</span>\n<span class=\"go\">&#39;loudness_sma3_stddevFallingSlope&#39;: 4.15903902053833,</span>\n<span class=\"go\">&#39;spectralFlux_sma3_amean&#39;: 0.3213598430156708,</span>\n<span class=\"go\">&#39;spectralFlux_sma3_stddevNorm&#39;: 0.6921582818031311,</span>\n<span class=\"go\">&#39;mfcc1_sma3_amean&#39;: 10.274803161621094,</span>\n<span class=\"go\">&#39;mfcc1_sma3_stddevNorm&#39;: 1.1581648588180542,</span>\n<span class=\"go\">&#39;mfcc2_sma3_amean&#39;: 4.262020111083984,</span>\n<span class=\"go\">&#39;mfcc2_sma3_stddevNorm&#39;: 2.052302837371826,</span>\n<span class=\"go\">&#39;mfcc3_sma3_amean&#39;: 7.624598026275635,</span>\n<span class=\"go\">&#39;mfcc3_sma3_stddevNorm&#39;: 1.4570358991622925,</span>\n<span class=\"go\">&#39;mfcc4_sma3_amean&#39;: 3.6676177978515625,</span>\n<span class=\"go\">&#39;mfcc4_sma3_stddevNorm&#39;: 2.6902272701263428,</span>\n<span class=\"go\">&#39;jitterLocal_sma3nz_amean&#39;: 0.019597552716732025,</span>\n<span class=\"go\">&#39;jitterLocal_sma3nz_stddevNorm&#39;: 0.9063860177993774,</span>\n<span class=\"go\">&#39;shimmerLocaldB_sma3nz_amean&#39;: 1.264746069908142,</span>\n<span class=\"go\">&#39;shimmerLocaldB_sma3nz_stddevNorm&#39;: 0.4629262685775757,</span>\n<span class=\"go\">&#39;HNRdBACF_sma3nz_amean&#39;: 3.6400067806243896,</span>\n<span class=\"go\">&#39;HNRdBACF_sma3nz_stddevNorm&#39;: 0.5911334753036499,</span>\n<span class=\"go\">&#39;logRelF0-H1-H2_sma3nz_amean&#39;: 1.215877652168274,</span>\n<span class=\"go\">&#39;logRelF0-H1-H2_sma3nz_stddevNorm&#39;: 3.883843183517456,</span>\n<span class=\"go\">&#39;logRelF0-H1-A3_sma3nz_amean&#39;: 18.830764770507812,</span>\n<span class=\"go\">&#39;logRelF0-H1-A3_sma3nz_stddevNorm&#39;: 0.30870768427848816,</span>\n<span class=\"go\">&#39;F1frequency_sma3nz_amean&#39;: 665.1713256835938,</span>\n<span class=\"go\">&#39;F1frequency_sma3nz_stddevNorm&#39;: 0.41958823800086975,</span>\n<span class=\"go\">&#39;F1bandwidth_sma3nz_amean&#39;: 1300.2757568359375,</span>\n<span class=\"go\">&#39;F1bandwidth_sma3nz_stddevNorm&#39;: 0.16334553062915802,</span>\n<span class=\"go\">&#39;F1amplitudeLogRelF0_sma3nz_amean&#39;: -132.1533660888672,</span>\n<span class=\"go\">&#39;F1amplitudeLogRelF0_sma3nz_stddevNorm&#39;: -0.6691396832466125,</span>\n<span class=\"go\">&#39;F2frequency_sma3nz_amean&#39;: 1657.013916015625,</span>\n<span class=\"go\">&#39;F2frequency_sma3nz_stddevNorm&#39;: 0.17019854485988617,</span>\n<span class=\"go\">&#39;F2bandwidth_sma3nz_amean&#39;: 1105.7457275390625,</span>\n<span class=\"go\">&#39;F2bandwidth_sma3nz_stddevNorm&#39;: 0.24520403146743774,</span>\n<span class=\"go\">&#39;F2amplitudeLogRelF0_sma3nz_amean&#39;: -132.76707458496094,</span>\n<span class=\"go\">&#39;F2amplitudeLogRelF0_sma3nz_stddevNorm&#39;: -0.6468541026115417,</span>\n<span class=\"go\">&#39;F3frequency_sma3nz_amean&#39;: 2601.6630859375,</span>\n<span class=\"go\">&#39;F3frequency_sma3nz_stddevNorm&#39;: 0.11457356810569763,</span>\n<span class=\"go\">&#39;F3bandwidth_sma3nz_amean&#39;: 1091.15087890625,</span>\n<span class=\"go\">&#39;F3bandwidth_sma3nz_stddevNorm&#39;: 0.3787318468093872,</span>\n<span class=\"go\">&#39;F3amplitudeLogRelF0_sma3nz_amean&#39;: -134.52105712890625,</span>\n<span class=\"go\">&#39;F3amplitudeLogRelF0_sma3nz_stddevNorm&#39;: -0.620308518409729,</span>\n<span class=\"go\">&#39;alphaRatioV_sma3nz_amean&#39;: -8.626543045043945,</span>\n<span class=\"go\">&#39;alphaRatioV_sma3nz_stddevNorm&#39;: -0.4953792095184326,</span>\n<span class=\"go\">&#39;hammarbergIndexV_sma3nz_amean&#39;: 16.796842575073242,</span>\n<span class=\"go\">&#39;hammarbergIndexV_sma3nz_stddevNorm&#39;: 0.3567312955856323,</span>\n<span class=\"go\">&#39;slopeV0-500_sma3nz_amean&#39;: 0.021949246525764465,</span>\n<span class=\"go\">&#39;slopeV0-500_sma3nz_stddevNorm&#39;: 1.0097224712371826,</span>\n<span class=\"go\">&#39;slopeV500-1500_sma3nz_amean&#39;: -0.008139753714203835,</span>\n<span class=\"go\">&#39;slopeV500-1500_sma3nz_stddevNorm&#39;: -1.6243411302566528,</span>\n<span class=\"go\">&#39;spectralFluxV_sma3nz_amean&#39;: 0.4831695556640625,</span>\n<span class=\"go\">&#39;spectralFluxV_sma3nz_stddevNorm&#39;: 0.48576226830482483,</span>\n<span class=\"go\">&#39;mfcc1V_sma3nz_amean&#39;: 20.25444793701172,</span>\n<span class=\"go\">&#39;mfcc1V_sma3nz_stddevNorm&#39;: 0.44413772225379944,</span>\n<span class=\"go\">&#39;mfcc2V_sma3nz_amean&#39;: 3.619405746459961,</span>\n<span class=\"go\">&#39;mfcc2V_sma3nz_stddevNorm&#39;: 2.1765975952148438,</span>\n<span class=\"go\">&#39;mfcc3V_sma3nz_amean&#39;: 7.736487865447998,</span>\n<span class=\"go\">&#39;mfcc3V_sma3nz_stddevNorm&#39;: 1.8630998134613037,</span>\n<span class=\"go\">&#39;mfcc4V_sma3nz_amean&#39;: 4.60503625869751,</span>\n<span class=\"go\">&#39;mfcc4V_sma3nz_stddevNorm&#39;: 2.864668846130371,</span>\n<span class=\"go\">&#39;alphaRatioUV_sma3nz_amean&#39;: -2.5990121364593506,</span>\n<span class=\"go\">&#39;hammarbergIndexUV_sma3nz_amean&#39;: 8.862899780273438,</span>\n<span class=\"go\">&#39;slopeUV0-500_sma3nz_amean&#39;: 0.002166695659980178,</span>\n<span class=\"go\">&#39;slopeUV500-1500_sma3nz_amean&#39;: 0.006735736038535833,</span>\n<span class=\"go\">&#39;spectralFluxUV_sma3nz_amean&#39;: 0.24703539907932281,</span>\n<span class=\"go\">&#39;loudnessPeaksPerSec&#39;: 3.8834950923919678,</span>\n<span class=\"go\">&#39;VoicedSegmentsPerSec&#39;: 2.745098114013672,</span>\n<span class=\"go\">&#39;MeanVoicedSegmentLengthSec&#39;: 0.12214285880327225,</span>\n<span class=\"go\">&#39;StddevVoicedSegmentLengthSec&#39;: 0.09025190770626068,</span>\n<span class=\"go\">&#39;MeanUnvoicedSegmentLength&#39;: 0.20666664838790894,</span>\n<span class=\"go\">&#39;StddevUnvoicedSegmentLength&#39;: 0.17666037380695343,</span>\n<span class=\"go\">&#39;equivalentSoundLevel_dBp&#39;: -24.297256469726562},</span>\n<span class=\"go\">&#39;torchaudio&#39;: {&#39;pitch&#39;: tensor([484.8485, 484.8485, 470.5882, 372.0930, 340.4255, 320.0000, 296.2963,</span>\n<span class=\"go\">        140.3509, 135.5932, 126.9841, 124.0310, 124.0310, 113.4752, 110.3448,</span>\n<span class=\"go\">        110.3448, 108.8435, 105.9603, 108.8435, 110.3448, 113.4752, 113.4752,</span>\n<span class=\"go\">        124.0310, 113.4752, 113.4752, 108.8435, 105.9603, 105.9603, 105.9603,</span>\n<span class=\"go\">        106.6667, 105.9603, 105.9603, 104.5752, 104.5752, 104.5752, 104.5752,</span>\n<span class=\"go\">        101.2658, 101.2658, 100.6289, 100.6289, 100.0000, 100.0000,  98.1595,</span>\n<span class=\"go\">            98.1595,  98.1595,  95.8084,  95.8084,  95.8084,  95.2381,  95.2381,</span>\n<span class=\"go\">            94.6746,  91.9540,  91.9540,  91.9540,  91.9540,  91.9540,  91.4286,</span>\n<span class=\"go\">            91.4286,  91.4286,  91.4286,  91.4286,  91.4286,  91.4286,  90.9091,</span>\n<span class=\"go\">            90.9091,  90.9091,  91.4286,  91.4286,  91.4286,  91.4286,  91.4286,</span>\n<span class=\"go\">            91.4286,  91.4286,  91.4286,  91.4286,  91.4286,  91.4286,  91.4286,</span>\n<span class=\"go\">            91.4286,  91.9540,  91.9540,  93.0233,  93.5673,  93.5673,  94.1176,</span>\n<span class=\"go\">            94.6746,  94.6746,  94.6746,  95.8084,  96.3855,  96.9697, 100.0000,</span>\n<span class=\"go\">        100.0000, 100.0000, 100.0000, 100.0000, 100.0000, 103.8961, 104.5752,</span>\n<span class=\"go\">        104.5752, 106.6667, 106.6667, 106.6667, 111.1111, 116.7883, 116.7883,</span>\n<span class=\"go\">        116.7883, 118.5185, 121.2121, 121.2121, 121.2121, 121.2121, 121.2121,</span>\n<span class=\"go\">        121.2121, 121.2121, 121.2121, 121.2121, 121.2121, 121.2121, 122.1374,</span>\n<span class=\"go\">        123.0769, 123.0769, 125.9843, 125.9843, 125.9843, 123.0769, 123.0769,</span>\n<span class=\"go\">        122.1374, 122.1374, 121.2121, 121.2121, 121.2121, 120.3008, 117.6471,</span>\n<span class=\"go\">        117.6471, 117.6471, 108.8435, 108.1081, 106.6667, 105.2632, 105.2632,</span>\n<span class=\"go\">        105.2632, 105.2632, 105.2632, 105.2632, 105.2632, 105.2632, 105.2632,</span>\n<span class=\"go\">        108.8435, 105.2632, 105.2632, 105.2632, 105.2632, 105.2632, 105.2632,</span>\n<span class=\"go\">        105.2632, 119.4030, 119.4030, 120.3008, 120.3008, 121.2121, 121.2121,</span>\n<span class=\"go\">        121.2121, 121.2121, 121.2121, 121.2121, 121.2121, 121.2121, 122.1374,</span>\n<span class=\"go\">        122.1374, 122.1374, 122.1374, 123.0769, 123.0769, 123.0769, 123.0769,</span>\n<span class=\"go\">        123.0769, 123.0769, 120.3008, 120.3008, 120.3008, 119.4030, 113.4752,</span>\n<span class=\"go\">        106.6667, 103.2258, 103.2258,  96.9697,  96.9697,  96.9697,  96.9697,</span>\n<span class=\"go\">            96.9697,  96.9697,  96.9697,  96.9697,  96.9697,  96.9697,  96.9697,</span>\n<span class=\"go\">            96.9697,  96.9697,  96.9697,  96.9697,  96.9697,  96.9697,  96.9697,</span>\n<span class=\"go\">            96.9697,  96.9697,  96.9697,  96.9697,  96.9697,  97.5610,  97.5610,</span>\n<span class=\"go\">            97.5610,  97.5610,  97.5610,  98.1595, 100.0000, 100.6289, 100.6289,</span>\n<span class=\"go\">        100.6289, 100.6289, 101.2658, 101.2658, 101.2658, 101.2658, 101.2658,</span>\n<span class=\"go\">        101.2658, 101.2658, 101.2658, 101.2658, 101.2658, 101.2658,  97.5610,</span>\n<span class=\"go\">            90.9091,  89.8876,  88.8889,  88.8889,  88.3978,  87.4317,  86.0215,</span>\n<span class=\"go\">            86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,</span>\n<span class=\"go\">            86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,</span>\n<span class=\"go\">            86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,  86.0215,</span>\n<span class=\"go\">            86.0215,  86.0215,  86.0215,  86.0215,  86.4865,  86.4865,  86.4865,</span>\n<span class=\"go\">            86.4865,  86.4865,  87.4317,  87.9121,  87.9121,  87.9121,  89.8876,</span>\n<span class=\"go\">            90.9091,  90.9091,  90.9091,  90.9091,  90.9091,  91.4286,  91.4286,</span>\n<span class=\"go\">            91.4286,  92.4855,  92.4855,  93.0233,  93.0233,  93.0233,  93.5673,</span>\n<span class=\"go\">            93.5673,  95.2381,  95.2381, 100.0000, 101.9108, 112.6761, 112.6761,</span>\n<span class=\"go\">        112.6761, 122.1374, 122.1374, 122.1374, 130.0813, 126.9841, 126.9841,</span>\n<span class=\"go\">        130.0813, 130.0813, 130.0813, 130.0813, 137.9310, 130.0813, 130.0813,</span>\n<span class=\"go\">        130.0813, 126.9841, 125.9843, 126.9841, 125.9843, 125.9843, 125.9843,</span>\n<span class=\"go\">        125.9843, 125.9843, 126.9841, 126.9841, 130.0813, 130.0813, 126.9841,</span>\n<span class=\"go\">        130.0813, 130.0813, 132.2314, 130.0813, 130.0813, 132.2314, 134.4538,</span>\n<span class=\"go\">        134.4538, 135.5932, 135.5932, 137.9310, 135.5932, 135.5932, 135.5932,</span>\n<span class=\"go\">        135.5932, 137.9310, 137.9310, 140.3509, 141.5929, 141.5929, 141.5929,</span>\n<span class=\"go\">        144.1441, 144.1441, 149.5327, 149.5327, 149.5327, 141.5929, 141.5929,</span>\n<span class=\"go\">        141.5929, 149.5327, 149.5327, 153.8462, 160.0000, 160.0000, 160.0000,</span>\n<span class=\"go\">        160.0000, 160.0000, 163.2653, 164.9485, 164.9485, 164.9485, 164.9485,</span>\n<span class=\"go\">        164.9485, 164.9485, 164.9485, 164.9485, 164.9485, 164.9485, 164.9485,</span>\n<span class=\"go\">        164.9485, 164.9485, 164.9485, 164.9485, 156.8627, 155.3398, 155.3398,</span>\n<span class=\"go\">        155.3398, 153.8462, 153.8462, 152.3810, 152.3810, 149.5327, 148.1481,</span>\n<span class=\"go\">        148.1481, 148.1481, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890,</span>\n<span class=\"go\">        148.1481, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890,</span>\n<span class=\"go\">        146.7890, 146.7890, 145.4545, 145.4545, 152.3810, 153.8462, 153.8462,</span>\n<span class=\"go\">        153.8462, 153.8462, 153.8462, 153.8462, 153.8462, 153.8462, 153.8462,</span>\n<span class=\"go\">        153.8462, 153.8462, 153.8462, 153.8462, 153.8462, 153.8462, 153.8462,</span>\n<span class=\"go\">        153.8462, 153.8462, 153.8462, 153.8462, 152.3810, 152.3810, 152.3810,</span>\n<span class=\"go\">        152.3810, 149.5327, 148.1481, 148.1481, 148.1481, 148.1481, 148.1481,</span>\n<span class=\"go\">        148.1481, 146.7890, 148.1481, 148.1481, 145.4545, 145.4545, 145.4545,</span>\n<span class=\"go\">        145.4545, 145.4545, 144.1441, 144.1441, 144.1441, 142.8571, 142.8571,</span>\n<span class=\"go\">        142.8571, 142.8571, 142.8571, 142.8571, 142.8571, 144.1441, 144.1441,</span>\n<span class=\"go\">        145.4545, 145.4545, 145.4545, 145.4545, 146.7890, 146.7890, 146.7890,</span>\n<span class=\"go\">        146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890,</span>\n<span class=\"go\">        146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 145.4545,</span>\n<span class=\"go\">        145.4545, 145.4545, 145.4545, 145.4545, 145.4545, 145.4545, 145.4545,</span>\n<span class=\"go\">        146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890, 146.7890,</span>\n<span class=\"go\">        400.0000, 400.0000, 484.8485, 484.8485, 484.8485, 484.8485, 484.8485,</span>\n<span class=\"go\">        484.8485, 484.8485, 484.8485, 484.8485, 484.8485]),</span>\n<span class=\"go\">&#39;mel_filter_bank&#39;: tensor([[4.4167e-04, 1.0165e-02, 1.3079e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [3.0977e-04, 1.5698e-02, 1.5785e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [8.2318e-05, 1.4367e-02, 2.8095e-01,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        ...,</span>\n<span class=\"go\">        [3.6322e-05, 9.7330e-03, 5.4812e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [2.2802e-05, 1.2481e-02, 5.8374e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [5.3029e-05, 3.1305e-02, 7.9842e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00]]),</span>\n<span class=\"go\">&#39;mfcc&#39;: tensor([[-6.2570e+02, -4.7505e+02, -3.1078e+02,  ..., -6.3893e+02,</span>\n<span class=\"go\">            -6.3893e+02, -6.3893e+02],</span>\n<span class=\"go\">        [ 1.3593e+01,  1.9928e+01,  2.6022e+01,  ...,  3.9824e-05,</span>\n<span class=\"go\">            3.9824e-05,  3.9824e-05],</span>\n<span class=\"go\">        [ 7.3933e+00, -2.1680e+01, -1.4259e+01,  ..., -1.3440e-05,</span>\n<span class=\"go\">            -1.3440e-05, -1.3440e-05],</span>\n<span class=\"go\">        ...,</span>\n<span class=\"go\">        [ 1.8122e+00, -3.1072e+00, -3.7336e+00,  ...,  7.0669e-05,</span>\n<span class=\"go\">            7.0669e-05,  7.0669e-05],</span>\n<span class=\"go\">        [-2.7518e-01, -9.4738e+00, -2.3157e+00,  ..., -1.7963e-04,</span>\n<span class=\"go\">            -1.7963e-04, -1.7963e-04],</span>\n<span class=\"go\">        [ 2.3144e-01, -6.4129e+00, -8.4420e+00,  ..., -1.5891e-04,</span>\n<span class=\"go\">            -1.5891e-04, -1.5891e-04]]),</span>\n<span class=\"go\">&#39;mel_spectrogram&#39;: tensor([[4.4167e-04, 1.0165e-02, 1.3079e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [3.0977e-04, 1.5698e-02, 1.5785e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [8.2318e-05, 1.4367e-02, 2.8095e-01,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        ...,</span>\n<span class=\"go\">        [3.6322e-05, 9.7330e-03, 5.4812e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [2.2802e-05, 1.2481e-02, 5.8374e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [5.3029e-05, 3.1305e-02, 7.9842e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00]]),</span>\n<span class=\"go\">&#39;spectrogram&#39;: tensor([[3.5553e-06, 5.9962e-03, 2.7176e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [5.0707e-04, 1.1670e-02, 1.5016e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [3.1901e-04, 1.8529e-02, 1.8078e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        ...,</span>\n<span class=\"go\">        [1.0302e-05, 3.5917e-03, 2.7169e-03,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [9.6637e-08, 1.3364e-03, 1.8495e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00],</span>\n<span class=\"go\">        [1.4414e-05, 1.0598e-04, 2.8004e-02,  ..., 0.0000e+00, 0.0000e+00,</span>\n<span class=\"go\">            0.0000e+00]])},</span>\n<span class=\"go\">&#39;parselmouth&#39;: ({&#39;duration&#39;: 5.1613125,</span>\n<span class=\"go\">    &#39;speaking_rate&#39;: 3.874983349680919,</span>\n<span class=\"go\">    &#39;articulation_rate&#39;: 3.874983349680919,</span>\n<span class=\"go\">    &#39;phonation_ratio&#39;: 1.0,</span>\n<span class=\"go\">    &#39;pause_rate&#39;: 0.0,</span>\n<span class=\"go\">    &#39;mean_pause_duration&#39;: 0.0,</span>\n<span class=\"go\">    &#39;mean_f0_hertz&#39;: 118.59917806814313,</span>\n<span class=\"go\">    &#39;std_f0_hertz&#39;: 30.232960797931817,</span>\n<span class=\"go\">    &#39;mean_intensity_db&#39;: 69.76277128148347,</span>\n<span class=\"go\">    &#39;std_intensity_db&#39;: 58.54414165935646,</span>\n<span class=\"go\">    &#39;range_ratio_intensity_db&#39;: -0.25736445047981316,</span>\n<span class=\"go\">    &#39;pitch_floor&#39;: 60.0,</span>\n<span class=\"go\">    &#39;pitch_ceiling&#39;: 250.0,</span>\n<span class=\"go\">    &#39;mean_hnr_db&#39;: 3.3285614070654375,</span>\n<span class=\"go\">    &#39;std_hnr_db&#39;: 3.36490968797237,</span>\n<span class=\"go\">    &#39;spectral_slope&#39;: -13.982306776816046,</span>\n<span class=\"go\">    &#39;spectral_tilt&#39;: -0.004414961849917737,</span>\n<span class=\"go\">    &#39;cepstral_peak_prominence_mean&#39;: 7.0388038514346825,</span>\n<span class=\"go\">    &#39;cepstral_peak_prominence_std&#39;: 1.5672438573255245,</span>\n<span class=\"go\">    &#39;mean_f1_loc&#39;: 613.4664268420964,</span>\n<span class=\"go\">    &#39;std_f1_loc&#39;: 303.98235579059883,</span>\n<span class=\"go\">    &#39;mean_b1_loc&#39;: 401.96960219300837,</span>\n<span class=\"go\">    &#39;std_b1_loc&#39;: 400.9001719378358,</span>\n<span class=\"go\">    &#39;mean_f2_loc&#39;: 1701.7755281579418,</span>\n<span class=\"go\">    &#39;std_f2_loc&#39;: 325.4405394017738,</span>\n<span class=\"go\">    &#39;mean_b2_loc&#39;: 434.542188503193,</span>\n<span class=\"go\">    &#39;std_b2_loc&#39;: 380.8914612651878,</span>\n<span class=\"go\">    &#39;spectral_gravity&#39;: 579.587511962247,</span>\n<span class=\"go\">    &#39;spectral_std_dev&#39;: 651.3025011919739,</span>\n<span class=\"go\">    &#39;spectral_skewness&#39;: 3.5879707548251045,</span>\n<span class=\"go\">    &#39;spectral_kurtosis&#39;: 19.991495997865282,</span>\n<span class=\"go\">    &#39;local_jitter&#39;: 0.02553484151620524,</span>\n<span class=\"go\">    &#39;localabsolute_jitter&#39;: 0.00021392842618599855,</span>\n<span class=\"go\">    &#39;rap_jitter&#39;: 0.012174051087556429,</span>\n<span class=\"go\">    &#39;ppq5_jitter&#39;: 0.01597797849248675,</span>\n<span class=\"go\">    &#39;ddp_jitter&#39;: 0.03652215326266929,</span>\n<span class=\"go\">    &#39;local_shimmer&#39;: 0.1530474665829716,</span>\n<span class=\"go\">    &#39;localDB_shimmer&#39;: 1.3511061323188314,</span>\n<span class=\"go\">    &#39;apq3_shimmer&#39;: 0.0702984931637734,</span>\n<span class=\"go\">    &#39;apq5_shimmer&#39;: 0.09680154282272849,</span>\n<span class=\"go\">    &#39;apq11_shimmer&#39;: 0.19065409516266155,</span>\n<span class=\"go\">    &#39;dda_shimmer&#39;: 0.2108954794913202},),</span>\n<span class=\"go\">&#39;torchaudio_squim&#39;: {&#39;stoi&#39;: 0.9247563481330872,</span>\n<span class=\"go\">&#39;pesq&#39;: 1.3702949285507202,</span>\n<span class=\"go\">&#39;si_sdr&#39;: 11.71167278289795}}]</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">opensmile</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">parselmouth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">torchaudio</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">torchaudio_squim</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.opensmile": {"fullname": "senselab.audio.tasks.features_extraction.opensmile", "modulename": "senselab.audio.tasks.features_extraction.opensmile", "kind": "module", "doc": "<p>This module contains functions for extracting openSMILE features.</p>\n\n<p>It includes a factory class for managing openSMILE feature extractors, ensuring\neach extractor is created only once per feature set and feature level. The main\nfunction, <code>extract_opensmile_features_from_audios</code>, applies feature extraction\nacross a list of audio samples using openSMILE, managed as a Pydra workflow\nfor parallel processing. This approach supports efficient and scalable feature\nextraction across multiple audio files.</p>\n"}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"fullname": "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory", "modulename": "senselab.audio.tasks.features_extraction.opensmile", "qualname": "OpenSmileFeatureExtractorFactory", "kind": "class", "doc": "<p>A factory for managing openSMILE feature extractors.</p>\n\n<p>This class creates and caches openSMILE feature extractors, allowing for\nefficient reuse. It ensures only one instance of each feature extractor\nexists per unique combination of <code>feature_set</code> and <code>feature_level</code>.</p>\n"}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"fullname": "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor", "modulename": "senselab.audio.tasks.features_extraction.opensmile", "qualname": "OpenSmileFeatureExtractorFactory.get_opensmile_extractor", "kind": "function", "doc": "<p>Get or create an openSMILE feature extractor.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>feature_set (str):</strong>  The openSMILE feature set.</li>\n<li><strong>feature_level (str):</strong>  The openSMILE feature level.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>opensmile.Smile: The openSMILE feature extractor.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">feature_set</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">feature_level</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">opensmile</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">smile</span><span class=\"o\">.</span><span class=\"n\">Smile</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.opensmile", "qualname": "extract_opensmile_features_from_audios", "kind": "function", "doc": "<p>Extract openSMILE features from a list of audio files using Pydra workflow.</p>\n\n<p>This function sets up a Pydra workflow for parallel processing of openSMILE\nfeature extraction on a list of audio samples. Each sample's features are\nextracted and formatted as dictionaries.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to extract features from.</li>\n<li><strong>feature_set (str):</strong>  The openSMILE feature set (default is \"eGeMAPSv02\").</li>\n<li><strong>feature_level (str):</strong>  The openSMILE feature level (default is \"Functionals\").</li>\n<li><strong>plugin (str):</strong>  The Pydra plugin to use (default is \"serial\").</li>\n<li><strong>plugin_args (Optional[Dict[str, Any]]):</strong>  Additional arguments for the Pydra plugin.</li>\n<li><strong>cache_dir (Optional[str | os.PathLike]):</strong>  The path to the Pydra cache directory.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: A list of dictionaries, each containing extracted features.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">feature_set</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;eGeMAPSv02&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">feature_level</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Functionals&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "kind": "module", "doc": "<p>This module contains functions that extract features from audio files using the PRAAT library.</p>\n\n<p>The initial implementation of this features extraction was started by Nicholas Cummins\nfrom King's College London and has since been further developed and maintained\nby the senselab community.</p>\n"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "get_sound", "kind": "function", "doc": "<p>Get a sound object from a given audio file or Audio object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audio (Union[Path, Audio]):</strong>  A path to an audio file or an Audio object.</li>\n<li><strong>sampling_rate (int, optional):</strong>  The sampling rate of the audio. Defaults to 16000.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>parselmouth.Sound: A Parselmouth Sound object.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>FileNotFoundError:</strong>  If the file is not found at the given path.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audio</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">sampling_rate</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16000</span></span><span class=\"return-annotation\">) -> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_speech_rate", "kind": "function", "doc": "<p>Extract speech timing and pausing features from a given sound object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, float]: A dictionary containing the following features:</p>\n\n<pre><code>- speaking_rate (float): Number of syllables divided by duration.\n- articulation_rate (float): Number of syllables divided by phonation time.\n- phonation_ratio (float): Phonation time divided by duration.\n- pause_rate (float): Number of pauses divided by duration.\n- mean_pause_dur (float): Total time pausing divided by the number of identified pauses.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_speech_rate</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"s1\">&#39;speaking_rate&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5.3</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;articulation_rate&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4.7</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;phonation_ratio&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;pause_rate&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.1</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;mean_pause_dur&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span>\n<span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"useful-sources-for-this-code\">Useful sources for this code:</h6>\n\n<blockquote>\n  <ul>\n  <li><a href=\"https://sites.google.com/view/uhm-o-meter/scripts/syllablenuclei_v3?pli=1\">https://sites.google.com/view/uhm-o-meter/scripts/syllablenuclei_v3?pli=1</a></li>\n  <li><a href=\"https://drive.google.com/file/d/1o3mNdN5FKTiYQC9GHB1XoZ8JJIGZk_AK/view\">https://drive.google.com/file/d/1o3mNdN5FKTiYQC9GHB1XoZ8JJIGZk_AK/view</a></li>\n  <li>(2009 paper) <a href=\"https://doi.org/10.3758/BRM.41.2.385\">https://doi.org/10.3758/BRM.41.2.385</a></li>\n  <li>(2021 paper) <a href=\"https://doi.org/10.1080/0969594X.2021.1951162\">https://doi.org/10.1080/0969594X.2021.1951162</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_pitch_values", "kind": "function", "doc": "<p>Estimate Pitch Range.</p>\n\n<p>Calculates the mean pitch using a wide range and uses this to shorten the range for future pitch extraction\nalgorithms.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- pitch_floor (float): The lowest pitch value to use in future pitch extraction algorithms.\n- pitch_ceiling (float): The highest pitch value to use in future pitch extraction algorithms.\n</code></pre>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>Values are taken from: <a href=\"https://doi.org/10.3758/BRM.41.2.318\">Standardization of pitch-range settings in voice acoustic analysis</a></p>\n  \n  <p>The problem observed with doing a really broad pitch search was the occasional error if F1 was low.\n  So crude outlier detection is used to help with this.</p>\n  \n  <p>Important: These values are used within other functions, they are not outputs of the full code.</p>\n  \n  <p>Different pitch extraction methods in Praat:</p>\n  \n  <ul>\n  <li>Cross-correlation (Praat default) vs auto-correlation pitch extraction:\n  both are used in different functions below.</li>\n  <li>Cross-correlation is better than auto-correlation at finding period-level variation,\n  such as jitter and shimmer, whereas auto-correlation is better at finding intended intonation contours.</li>\n  <li><a href=\"https://groups.io/g/Praat-Users-List/topic/pitch_detection_ac_vs_cc/78829266?p=,,,20,0,0,0::recentpostdate/sticky,,,20,2,20,78829266,previd=1612369050729515119,nextid=1605568402827788039&previd=1612369050729515119&nextid=1605568402827788039\">Discussion on this on a Praat Forum</a></li>\n  </ul>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pitch_values</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;pitch_floor&#39;</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pitch_ceiling&#39;</span><span class=\"p\">:</span> <span class=\"mi\">250</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_pitch_descriptors", "kind": "function", "doc": "<p>Extract Pitch Features.</p>\n\n<p>Function to extract key pitch features from a given sound object.\nThis function uses the pitch_ac method as autocorrelation is better at finding intended intonation contours.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>ceiling (float):</strong>  Maximum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new pitch value, typically set to 5 ms.\nDefaults to 0.005.</li>\n<li><strong>unit (str, optional):</strong>  The unit in which the pitch is returned. Defaults to \"Hertz\".\nCould be \"semitones\".</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- mean_f0_{unit} (float): Mean pitch in {unit}.\n- stdev_f0_{unit} (float): Standard deviation in {unit}.\n</code></pre>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Uses pitch_ac as autocorrelation is better at finding intended intonation contours.</li>\n  <li>stdev_f0_semitone is used in DOI: 10.1080/02699200400008353, which used this as a marker for dysphonia.</li>\n  </ul>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_pitch_descriptors</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hertz&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;mean_f0_hertz&#39;</span><span class=\"p\">:</span> <span class=\"mf\">220.5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;stdev_f0_hertz&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.5</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.005</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Hertz&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_intensity_descriptors", "kind": "function", "doc": "<p>Extract Intensity Features.</p>\n\n<p>Function to extract key intensity information from a given sound object.\nThis function is based on default Praat code adapted to work with Parselmouth.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new intensity value, typically set to 5 ms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- mean_db (float): Mean intensity in dB.\n- std_db (float): Standard deviation in dB.\n- range_db_ratio (float): Intensity range, expressed as a ratio in dB.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_intensity_descriptors</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;mean_db&#39;</span><span class=\"p\">:</span> <span class=\"mf\">70.5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;std_db&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;range_db_ratio&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.5</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Hyperparameters: <a href=\"https://www.fon.hum.uva.nl/praat/manual/Sound__To_Intensity___.html\">https://www.fon.hum.uva.nl/praat/manual/Sound__To_Intensity___.html</a></li>\n  <li>For notes on extracting mean settings: <a href=\"https://www.fon.hum.uva.nl/praat/manual/Intro_6_2__Configuring_the_intensity_contour.html\">https://www.fon.hum.uva.nl/praat/manual/Intro_6_2__Configuring_the_intensity_contour.html</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_harmonicity_descriptors", "kind": "function", "doc": "<p>Voice Quality - HNR.</p>\n\n<p>Function to calculate the Harmonic to Noise Ratio (HNR) in dB from a given sound object.\nThis function uses the CC method as recommended by Praat.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new pitch value, typically set to 5 ms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following key:</p>\n\n<pre><code>- hnr_db_mean (float): Mean Harmonic to Noise Ratio in dB.\n- hnr_db_std_dev (float): Harmonic to Noise Ratio standard deviation in dB.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_harmonicity_descriptors</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;hnr_db_mean&#39;</span><span class=\"p\">:</span> <span class=\"mf\">15.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hnr_db_std_dev&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Praat recommends using the CC method: <a href=\"https://www.fon.hum.uva.nl/praat/manual/Sound__To_Harmonicity__cc____.html\">https://www.fon.hum.uva.nl/praat/manual/Sound__To_Harmonicity__cc____.html</a></li>\n  <li>Default settings can be found at: <a href=\"https://www.fon.hum.uva.nl/praat/manual/Sound__To_Harmonicity__ac____.html\">https://www.fon.hum.uva.nl/praat/manual/Sound__To_Harmonicity__ac____.html</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_slope_tilt", "kind": "function", "doc": "<p>Voice Quality - Spectral Slope/Tilt.</p>\n\n<p>Function to extract spectral slope and tilt from a given sound object. This function is based on default\nPraat code adapted to work with Parselmouth.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>ceiling (float):</strong>  Maximum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- spectral_slope (float): Mean spectral slope.\n- spectral_tilt (float): Mean spectral tilt.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_slope_tilt</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;spectral_slope&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;spectral_tilt&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">2.5</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Spectral Slope: Ratio of energy in a spectra between 10-1000Hz over 1000-4000Hz.</li>\n  <li>Spectral Tilt: Linear slope of energy distribution between 100-5000Hz.</li>\n  <li>Using pitch-corrected LTAS to remove the effect of F0 and harmonics on the slope calculation:\n  <a href=\"https://www.fon.hum.uva.nl/paul/papers/BoersmaKovacic2006.pdf\">https://www.fon.hum.uva.nl/paul/papers/BoersmaKovacic2006.pdf</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_cpp_descriptors", "kind": "function", "doc": "<p>Extract Cepstral Peak Prominence (CPP).</p>\n\n<p>Function to calculate the Cepstral Peak Prominence (CPP) from a given sound object.\nThis function is adapted from default Praat code to work with Parselmouth.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>ceiling (float):</strong>  Maximum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new pitch value, typically set to 5 ms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following key:</p>\n\n<pre><code>- mean_cpp (float): Mean Cepstral Peak Prominence.\n- std_dev_cpp (float): Standard deviation in Cepstral Peak Prominence.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_CPP</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;mean_cpp&#39;</span><span class=\"p\">:</span> <span class=\"mf\">20.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;std_dev_cpp&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Cepstral Peak Prominence: The height (i.e., \u201cprominence\u201d) of that peak relative to a regression line\n  through the overall cepstrum.</li>\n  <li>Adapted from: <a href=\"https://osf.io/ctwgr\">https://osf.io/ctwgr</a> and <a href=\"http://phonetics.linguistics.ucla.edu/facilities/acoustic/voiced_extract_auto.txt\">http://phonetics.linguistics.ucla.edu/facilities/acoustic/voiced_extract_auto.txt</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "measure_f1f2_formants_bandwidths", "kind": "function", "doc": "<p>Extract Formant Frequency Features.</p>\n\n<p>Function to extract formant frequency features from a given sound object. This function is adapted from default\nPraat code to work with Parselmouth.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>ceiling (float):</strong>  Maximum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new pitch value, typically set to 5 ms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- f1_mean (float): Mean F1 location.\n- f1_std (float): Standard deviation of F1 location.\n- b1_mean (float): Mean F1 bandwidth.\n- b1_std (float): Standard deviation of F1 bandwidth.\n- f2_mean (float): Mean F2 location.\n- f2_std (float): Standard deviation of F2 location.\n- b2_mean (float): Mean F2 bandwidth.\n- b2_std (float): Standard deviation of F2 bandwidth.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">measureFormants</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;f1_mean&#39;</span><span class=\"p\">:</span> <span class=\"mf\">500.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;f1_std&#39;</span><span class=\"p\">:</span> <span class=\"mf\">50.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b1_mean&#39;</span><span class=\"p\">:</span> <span class=\"mf\">80.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b1_std&#39;</span><span class=\"p\">:</span> <span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;f2_mean&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1500.0</span><span class=\"p\">,</span>\n<span class=\"s1\">&#39;f2_std&#39;</span><span class=\"p\">:</span> <span class=\"mf\">100.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b2_mean&#39;</span><span class=\"p\">:</span> <span class=\"mf\">120.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b2_std&#39;</span><span class=\"p\">:</span> <span class=\"mf\">20.0</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Formants are the resonances of the vocal tract, determined by tongue placement and vocal tract shape.</li>\n  <li>Mean F1 typically varies between 300 to 750 Hz, while mean F2 typically varies between 900 to 2300 Hz.</li>\n  <li>Formant bandwidth is measured by taking the width of the band forming 3 dB down from the formant peak.</li>\n  <li>Formant extraction occurs per pitch period (pulses), meaning that the analysis identifies the points in the\n  sound where the vocal folds come together, helping to align the formant measurements precisely with the\n  pitch periods.</li>\n  <li>Adapted from code at this <a href=\"https://osf.io/6dwr3/\">link</a>.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_spectral_moments", "kind": "function", "doc": "<p>Extract Spectral Moments.</p>\n\n<p>Function to extract spectral moments from a given sound object. This function is adapted from default\nPraat code to work with Parselmouth.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object or a file path or an Audio object.</li>\n<li><strong>floor (float):</strong>  Minimum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>ceiling (float):</strong>  Maximum expected pitch value, set using value found in <code>pitch_values</code> function.</li>\n<li><strong>window_size (float):</strong>  Time frame over which the spectra is calculated, typically set to 25 ms.</li>\n<li><strong>frame_shift (float):</strong>  Time rate at which to extract a new pitch value, typically set to 5 ms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the following keys:</p>\n\n<pre><code>- spectral_gravity (float): Mean spectral gravity.\n- spectral_std_dev (float): Mean spectral standard deviation.\n- spectral_skewness (float): Mean spectral skewness.\n- spectral_kurtosis (float): Mean spectral kurtosis.\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">(</span><span class=\"s2\">&quot;path_to_audio.wav&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_spectral_moments</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">0.025</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;spectral_gravity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5000.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;spectral_std_dev&#39;</span><span class=\"p\">:</span> <span class=\"mf\">150.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;spectral_skewness&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;spectral_kurtosis&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3.0</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <ul>\n  <li>Spectral Gravity: Measure for how high the frequencies in a spectrum are on average over the entire frequency\n  domain weighted by the power spectrum.</li>\n  <li>Spectral Standard Deviation: Measure for how much the frequencies in a spectrum can deviate from the centre\n  of gravity.</li>\n  <li>Spectral Skewness: Measure for how much the shape of the spectrum below the centre of gravity is different\n  from the shape above the mean frequency.</li>\n  <li>Spectral Kurtosis: Measure for how much the shape of the spectrum around the centre of gravity is different\n  from a Gaussian shape.</li>\n  <li>Details: <a href=\"https://www.fon.hum.uva.nl/praat/manual/Spectrum__Get_central_moment___.html\">https://www.fon.hum.uva.nl/praat/manual/Spectrum__Get_central_moment___.html</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">window_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">frame_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_audio_duration", "kind": "function", "doc": "<p>Get the duration of a given audio file or Audio object.</p>\n\n<p>This function calculates the total duration of an audio file or audio object\nby creating a Parselmouth <code>Sound</code> object and then calling a Praat method\nto retrieve the duration of the audio in seconds.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object,</li>\n<li>a file path (Path), or an <code>Audio</code> object containing the audio waveform and</li>\n<li>its corresponding sampling rate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, float]: A dictionary containing:\n      - \"duration\" (float): The total duration of the audio in seconds.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>FileNotFoundError:</strong>  If a provided file path does not exist.</li>\n</ul>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snd</span> <span class=\"o\">=</span> <span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">sampling_rate</span><span class=\"o\">=</span><span class=\"mi\">16000</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extract_audio_duration</span><span class=\"p\">(</span><span class=\"n\">snd</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;duration&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5.23</span><span class=\"p\">}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_jitter", "kind": "function", "doc": "<p>Returns the jitter descriptors for the given sound or audio file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object, a file path (Path),</li>\n<li>or an <code>Audio</code> object containing the audio waveform and its corresponding sampling rate.</li>\n<li><strong>floor (float):</strong>  Minimum fundamental frequency (F0) in Hz.</li>\n<li><strong>ceiling (float):</strong>  Maximum fundamental frequency (F0) in Hz.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, float]: A dictionary containing various jitter measurements.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_shimmer", "kind": "function", "doc": "<p>Returns the shimmer descriptors for the given sound or audio file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>snd (Union[parselmouth.Sound, Path, Audio]):</strong>  A Parselmouth Sound object, a file path (Path),</li>\n<li>or an <code>Audio</code> object containing the audio waveform and its corresponding sampling rate.</li>\n<li><strong>floor (float):</strong>  Minimum fundamental frequency (F0) in Hz.</li>\n<li><strong>ceiling (float):</strong>  Maximum fundamental frequency (F0) in Hz.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, float]: A dictionary containing various shimmer measurements.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">snd</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">parselmouth</span><span class=\"o\">.</span><span class=\"n\">Sound</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">floor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.praat_parselmouth", "qualname": "extract_praat_parselmouth_features_from_audios", "kind": "function", "doc": "<p>Extract features from a list of Audio objects and return a JSON-like dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (list):</strong>  List of Audio objects to extract features from.</li>\n<li><strong>pitch_unit (str):</strong>  Unit for pitch measurements. Defaults to \"Hertz\".</li>\n<li><strong>time_step (float):</strong>  Time rate at which to extract features. Defaults to 0.005.</li>\n<li><strong>window_length (float):</strong>  Window length in seconds for spectral features. Defaults to 0.025.</li>\n<li><strong>cache_dir (Optional[str]):</strong>  Directory to use for caching by pydra. Defaults to None.</li>\n<li><strong>speech_rate (bool):</strong>  Whether to extract speech rate. Defaults to True.</li>\n<li><strong>intensity_descriptors (bool):</strong>  Whether to extract intensity descriptors. Defaults to True.</li>\n<li><strong>harmonicity_descriptors (bool):</strong>  Whether to extract harmonic descriptors. Defaults to True.</li>\n<li><strong>formants (bool):</strong>  Whether to extract formants. Defaults to True.</li>\n<li><strong>spectral_moments (bool):</strong>  Whether to extract spectral moments. Defaults to True.</li>\n<li><strong>pitch (bool):</strong>  Whether to extract pitch. Defaults to True.</li>\n<li><strong>slope_tilt (bool):</strong>  Whether to extract slope and tilt. Defaults to True.</li>\n<li><strong>cpp_descriptors (bool):</strong>  Whether to extract CPP descriptors. Defaults to True.</li>\n<li><strong>duration (bool):</strong>  Whether to extract duration. Defaults to True.</li>\n<li><strong>jitter (bool):</strong>  Whether to extract jitter. Defaults to True.</li>\n<li><strong>shimmer (bool):</strong>  Whether to extract shimmer. Defaults to True.</li>\n<li><strong>plugin (str):</strong>  Plugin to use for feature extraction. Defaults to \"serial\".</li>\n<li><strong>plugin_args (Optional[Dict[str, Any]]):</strong>  Arguments for the pydra plugin. Defaults to {}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A JSON-like dictionary with extracted features structured under \"praat_parselmouth\".</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">time_step</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.005</span>,</span><span class=\"param\">\t<span class=\"n\">window_length</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.025</span>,</span><span class=\"param\">\t<span class=\"n\">pitch_unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Hertz&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">speech_rate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">intensity_descriptors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">harmonicity_descriptors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">formants</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">spectral_moments</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">pitch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">slope_tilt</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">cpp_descriptors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">jitter</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">shimmer</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "kind": "module", "doc": "<p>This module provides the implementation of torchaudio utilities for audio features extraction.</p>\n"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_spectrogram_from_audios", "kind": "function", "doc": "<p>Extract spectrograms from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>n_fft (int):</strong>  Size of FFT, creates n_fft // 2 + 1 bins. Default is 1024.</li>\n<li><strong>win_length (int):</strong>  Window size. Default is None, using n_fft.</li>\n<li><strong>hop_length (int):</strong>  Length of hop between STFT windows. Default is None, using win_length // 2.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing spectrograms.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">n_fft</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>,</span><span class=\"param\">\t<span class=\"n\">win_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hop_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_mel_spectrogram_from_audios", "kind": "function", "doc": "<p>Extract mel spectrograms from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>n_fft (int):</strong>  Size of FFT, creates n_fft // 2 + 1 bins. Default is 1024.</li>\n<li><strong>win_length (int):</strong>  Window size. Default is None, using n_fft.</li>\n<li><strong>hop_length (int):</strong>  Length of hop between STFT windows. Default is None, using win_length // 2.</li>\n<li><strong>n_mels (int):</strong>  Number of mel filter banks. Default is 128.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing mel spectrograms.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">n_fft</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>,</span><span class=\"param\">\t<span class=\"n\">win_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hop_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_mels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_mfcc_from_audios", "kind": "function", "doc": "<p>Extract MFCCs from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>n_mfcc (int):</strong>  Number of MFCCs to return. Default is 40.</li>\n<li><strong>n_ftt (int):</strong>  Size of FFT, creates n_ftt // 2 + 1 bins. Default is 400.</li>\n<li><strong>win_length (int):</strong>  Window size. Default is None, using n_ftt.</li>\n<li><strong>hop_length (int):</strong>  Length of hop between STFT windows. Default is None, using win_length // 2.</li>\n<li><strong>n_mels (int):</strong>  Number of mel filter banks. Default is 128.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing MFCCs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">n_mfcc</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">n_ftt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">400</span>,</span><span class=\"param\">\t<span class=\"n\">win_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hop_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_mels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_mel_filter_bank_from_audios", "kind": "function", "doc": "<p>Extract mel filter bank from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>n_mels (int):</strong>  Number of mel filter banks. Default is 128.</li>\n<li><strong>n_fft (int):</strong>  Size of FFT, creates n_fft // 2 + 1 bins. Default is 1024.</li>\n<li><strong>win_length (int):</strong>  Window size. Default is None, using n_fft.</li>\n<li><strong>hop_length (int):</strong>  Length of hop between STFT windows. Default is None, using win_length // 2.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing mel filter banks.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">n_mels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">n_fft</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>,</span><span class=\"param\">\t<span class=\"n\">win_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hop_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_mel_filter_bank_from_spectrograms", "kind": "function", "doc": "<p>Extract mel filter bank from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>spectrograms (List[torch.Tensor]):</strong>  List of spectrograms.</li>\n<li><strong>sampling_rate (int):</strong>  Sampling rate of the audio.</li>\n<li><strong>n_mels (int):</strong>  Number of mel filter banks. Default is 128.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing mel filter banks.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">spectrograms</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">sampling_rate</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">n_mels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_pitch_from_audios", "kind": "function", "doc": "<p>Extract pitch from a list of audio objects.</p>\n\n<p>Pitch is detected using the detect_pitch_frequency function from torchaudio.\nIt is implemented using normalized cross-correlation function and median smoothing.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>freq_low (int):</strong>  Lowest frequency that can be detected (Hz). Should be bigger than 0.\n(Default is 80).</li>\n<li><strong>freq_high (int):</strong>  Highest frequency that can be detected (Hz).\n(Default is 500).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, torch.Tensor]]: List of Dict objects containing pitches.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">freq_low</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">80</span>,</span><span class=\"param\">\t<span class=\"n\">freq_high</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">500</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio", "qualname": "extract_torchaudio_features_from_audios", "kind": "function", "doc": "<p>Extract torchaudio features from a list of audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to extract features from.</li>\n<li><strong>freq_low (int):</strong>  Lowest frequency that can be detected (Hz). Should be bigger than 0.\n(Default is 80).</li>\n<li><strong>freq_high (int):</strong>  Highest frequency that can be detected (Hz).\n(Default is 500).</li>\n<li><strong>n_fft (int):</strong>  Size of FFT, creates n_fft // 2 + 1 bins. Default is 1024.</li>\n<li><strong>n_mels (int):</strong>  Number of mel filter banks. Default is 128.</li>\n<li><strong>n_mfcc (int):</strong>  Number of MFCCs. Default is 40.</li>\n<li><strong>win_length (int):</strong>  Window size. Default is None, using n_fft.</li>\n<li><strong>hop_length (int):</strong>  Length of hop between STFT windows. Default is None, using win_length // 2.</li>\n<li><strong>plugin (str):</strong>  The plugin to use. Default is \"serial\".</li>\n<li><strong>plugin_args (Optional[Dict[str, Any]]):</strong>  The arguments to pass to the plugin. Default is {}.</li>\n<li><strong>cache_dir (Optional[str | os.PathLike]):</strong>  The directory to cache the results. Default is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: The list of feature dictionaries for each audio.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">freq_low</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">80</span>,</span><span class=\"param\">\t<span class=\"n\">freq_high</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>,</span><span class=\"param\">\t<span class=\"n\">n_fft</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>,</span><span class=\"param\">\t<span class=\"n\">n_mels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">n_mfcc</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">win_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hop_length</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio_squim", "modulename": "senselab.audio.tasks.features_extraction.torchaudio_squim", "kind": "module", "doc": "<p>This module provides the implementation of torchaudio squim utilities for audio features extraction.</p>\n"}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio_squim", "qualname": "extract_objective_quality_features_from_audios", "kind": "function", "doc": "<p>Extracts objective audio features from a list of Audio objects.</p>\n\n<p>Features include:</p>\n\n<ul>\n<li>Wideband Perceptual Estimation of Speech Quality (PESQ)</li>\n<li>Short-Time Objective Intelligibility (STOI)</li>\n<li>Scale-Invariant Signal-to-Distortion Ratio (SI-SDR)</li>\n</ul>\n\n<p>Currently, Torchaudio-Squim model only supports mono audio at 16000 Hz sampling rate.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: List of dictionaries, each containing extracted features for an audio input.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"fullname": "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios", "modulename": "senselab.audio.tasks.features_extraction.torchaudio_squim", "qualname": "extract_subjective_quality_features_from_audios", "kind": "function", "doc": "<p>Extracts subjective audio features from a list of Audio objects.</p>\n\n<p>Currently, Torchaudio-Squim model only supports mono audio at 16000 Hz sampling rate.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>non_matching_references (List[Audio]):</strong>  Reference Audio objects for the subjective model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: List of dictionaries, each containing extracted features for an audio input.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">non_matching_references</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.forced_alignment": {"fullname": "senselab.audio.tasks.forced_alignment", "modulename": "senselab.audio.tasks.forced_alignment", "kind": "module", "doc": "<p>This module provides the API for forced alignment.</p>\n"}, "senselab.audio.tasks.forced_alignment.constants": {"fullname": "senselab.audio.tasks.forced_alignment.constants", "modulename": "senselab.audio.tasks.forced_alignment.constants", "kind": "module", "doc": "<p>Provides constants for align functionality.</p>\n"}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"fullname": "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "SAMPLE_RATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "16000"}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"fullname": "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "MINIMUM_SEGMENT_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "400"}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"fullname": "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "PUNKT_ABBREVIATIONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;dr&#x27;, &#x27;vs&#x27;, &#x27;mr&#x27;, &#x27;mrs&#x27;, &#x27;prof&#x27;]"}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"fullname": "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "LANGUAGES_WITHOUT_SPACES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;ja&#x27;, &#x27;zh&#x27;]"}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"fullname": "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "DEFAULT_ALIGN_MODELS_TORCH", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;fr&#x27;: TorchAudioModel(path_or_uri=&#x27;VOXPOPULI_ASR_BASE_10K_FR&#x27;, revision=&#x27;main&#x27;), &#x27;de&#x27;: TorchAudioModel(path_or_uri=&#x27;VOXPOPULI_ASR_BASE_10K_DE&#x27;, revision=&#x27;main&#x27;), &#x27;es&#x27;: TorchAudioModel(path_or_uri=&#x27;VOXPOPULI_ASR_BASE_10K_ES&#x27;, revision=&#x27;main&#x27;), &#x27;it&#x27;: TorchAudioModel(path_or_uri=&#x27;VOXPOPULI_ASR_BASE_10K_IT&#x27;, revision=&#x27;main&#x27;)}"}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"fullname": "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF", "modulename": "senselab.audio.tasks.forced_alignment.constants", "qualname": "DEFAULT_ALIGN_MODELS_HF", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;en&#x27;: HFModel(path_or_uri=&#x27;facebook/wav2vec2-base-960h&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ja&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-japanese&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;zh&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-chinese-zh-cn&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;nl&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-dutch&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;uk&#x27;: HFModel(path_or_uri=&#x27;Yehor/wav2vec2-xls-r-300m-uk-with-small-lm&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;pt&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-portuguese&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ar&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-arabic&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;cs&#x27;: HFModel(path_or_uri=&#x27;comodoro/wav2vec2-xls-r-300m-cs-250&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ru&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-russian&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;pl&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-polish&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;hu&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-hungarian&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;fi&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-finnish&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;fa&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-persian&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;el&#x27;: HFModel(path_or_uri=&#x27;jonatasgrosman/wav2vec2-large-xlsr-53-greek&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;tr&#x27;: HFModel(path_or_uri=&#x27;mpoyraz/wav2vec2-xls-r-300m-cv7-turkish&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;da&#x27;: HFModel(path_or_uri=&#x27;saattrupdan/wav2vec2-xls-r-300m-ftspeech&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;he&#x27;: HFModel(path_or_uri=&#x27;imvladikon/wav2vec2-xls-r-300m-hebrew&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;vi&#x27;: HFModel(path_or_uri=&#x27;nguyenvulebinh/wav2vec2-base-vi&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ko&#x27;: HFModel(path_or_uri=&#x27;kresnik/wav2vec2-large-xlsr-korean&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ur&#x27;: HFModel(path_or_uri=&#x27;kingabzpro/wav2vec2-large-xls-r-300m-Urdu&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;te&#x27;: HFModel(path_or_uri=&#x27;anuragshas/wav2vec2-large-xlsr-53-telugu&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;hi&#x27;: HFModel(path_or_uri=&#x27;theainerd/Wav2Vec2-large-xlsr-hindi&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ca&#x27;: HFModel(path_or_uri=&#x27;softcatala/wav2vec2-large-xlsr-catala&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;ml&#x27;: HFModel(path_or_uri=&#x27;gvs/wav2vec2-large-xlsr-malayalam&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;no&#x27;: HFModel(path_or_uri=&#x27;NbAiLab/nb-wav2vec2-1b-bokmaal&#x27;, revision=&#x27;main&#x27;, info=None), &#x27;nn&#x27;: HFModel(path_or_uri=&#x27;NbAiLab/nb-wav2vec2-300m-nynorsk&#x27;, revision=&#x27;main&#x27;, info=None)}"}, "senselab.audio.tasks.forced_alignment.data_structures": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "kind": "module", "doc": "<p>Provides data structures for align functionality.</p>\n"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleWordSegment", "kind": "class", "doc": "<p>A single word of a speech.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleWordSegment.word", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleWordSegment.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleWordSegment.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleWordSegment.score", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleCharSegment", "kind": "class", "doc": "<p>A single char of a speech.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleCharSegment.char", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleCharSegment.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleCharSegment.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleCharSegment.score", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment", "kind": "class", "doc": "<p>A single segment (up to multiple sentences) of a speech.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.clean_char", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[str]]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.clean_cdx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[int]]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.clean_wdx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[int]]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleSegment.sentence_spans", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[Tuple[int, int]]]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment", "kind": "class", "doc": "<p>A single segment (up to multiple sentences) of a speech with word alignment.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment.words", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment]"}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "SingleAlignedSegment.chars", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment]]"}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "TranscriptionResult", "kind": "class", "doc": "<p>A list of segments and word segments of a speech.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "TranscriptionResult.segments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.audio.tasks.forced_alignment.data_structures.SingleSegment]"}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "TranscriptionResult.language", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "AlignedTranscriptionResult", "kind": "class", "doc": "<p>A list of segments and word segments of a speech.</p>\n", "bases": "typing.TypedDict"}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "AlignedTranscriptionResult.segments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment]"}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "AlignedTranscriptionResult.word_segments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment]"}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Point", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Point", "kind": "class", "doc": "<p>Represents a point in the alignment path.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>token_index (int):</strong>  The index of the token in the transcript.</li>\n<li><strong>time_index (int):</strong>  The index of the time frame in the audio.</li>\n<li><strong>score (float):</strong>  The alignment score for this point.</li>\n</ul>\n"}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Point.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">time_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Point.token_index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Point.time_index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Point.score", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Point.score", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment", "kind": "class", "doc": "<p>Represents a segment of aligned text.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>label (str):</strong>  The text label of the segment.</li>\n<li><strong>start (int):</strong>  The start time index of the segment.</li>\n<li><strong>end (int):</strong>  The end time index of the segment.</li>\n<li><strong>score (float):</strong>  The alignment score for the segment.</li>\n</ul>\n"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.label", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.label", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.start", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.end", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.score", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.score", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"fullname": "senselab.audio.tasks.forced_alignment.data_structures.Segment.length", "modulename": "senselab.audio.tasks.forced_alignment.data_structures", "qualname": "Segment.length", "kind": "variable", "doc": "<p>Calculates the length of the segment.</p>\n", "annotation": ": int"}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"fullname": "senselab.audio.tasks.forced_alignment.forced_alignment", "modulename": "senselab.audio.tasks.forced_alignment.forced_alignment", "kind": "module", "doc": "<p>Align function based on WhisperX implementation.</p>\n"}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"fullname": "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions", "modulename": "senselab.audio.tasks.forced_alignment.forced_alignment", "qualname": "align_transcriptions", "kind": "function", "doc": "<p>Aligns transcriptions with the given audio using a wav2vec2.0 model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios_and_transcriptions_and_language (List[tuple[Audio, ScriptLine, Language]):</strong>  A list of tuples audios, corresponding transcriptions, and optionally a language.\nThe default language is English.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[List[ScriptLine]]: A list of lists, where each inner list contains the aligned script lines for each audio.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios_and_transcriptions_and_language</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.input_output": {"fullname": "senselab.audio.tasks.input_output", "modulename": "senselab.audio.tasks.input_output", "kind": "module", "doc": "<p>This module provides some utilities for audio input and output.</p>\n"}, "senselab.audio.tasks.input_output.utils": {"fullname": "senselab.audio.tasks.input_output.utils", "modulename": "senselab.audio.tasks.input_output.utils", "kind": "module", "doc": "<p>This module provides utilities for reading and saving (multiple) audio files using Pydra.</p>\n"}, "senselab.audio.tasks.input_output.utils.read_audios": {"fullname": "senselab.audio.tasks.input_output.utils.read_audios", "modulename": "senselab.audio.tasks.input_output.utils", "qualname": "read_audios", "kind": "function", "doc": "<p>Read and process a list of audio files using Pydra workflow.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_paths (List[str]):</strong>  List of paths to audio files.</li>\n<li><strong>cache_dir (str, optional):</strong>  Directory for caching intermediate results. Defaults to None.</li>\n<li><strong>plugin (str, optional):</strong>  Pydra plugin to use for workflow submission. Defaults to \"serial\".</li>\n<li><strong>plugin_args (dict, optional):</strong>  Additional arguments for the Pydra plugin. Defaults to {}.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: A list of Audio objects containing the waveform and sample rate for each processed file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.input_output.utils.save_audios": {"fullname": "senselab.audio.tasks.input_output.utils.save_audios", "modulename": "senselab.audio.tasks.input_output.utils", "qualname": "save_audios", "kind": "function", "doc": "<p>Save a list of Audio objects to specified files using Pydra workflow.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audio_tuples (Sequence[Tuple[Audio, Union[str, os.PathLike]]):</strong>  Sequence of tuples where each tuple contains\nan Audio object, its output path (str or os.PathLike).</li>\n<li><strong>save_params (dict, optional):</strong>  Additional parameters for saving audio files.\nDefaults to {}</li>\n<li><strong>cache_dir (str, optional):</strong>  Directory for caching intermediate results.\nDefaults to None.</li>\n<li><strong>plugin (str, optional):</strong>  Pydra plugin to use for workflow submission.\nDefaults to \"serial\".</li>\n<li><strong>plugin_args (dict, optional):</strong>  Additional arguments for the Pydra plugin.\nDefaults to {}.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>RuntimeError:</strong>  If any output directory in the provided paths does not exist or is not writable.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audio_tuples</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">save_params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.plotting": {"fullname": "senselab.audio.tasks.plotting", "modulename": "senselab.audio.tasks.plotting", "kind": "module", "doc": "<p>This module contains functions for plotting audio-related data.</p>\n"}, "senselab.audio.tasks.plotting.plotting": {"fullname": "senselab.audio.tasks.plotting.plotting", "modulename": "senselab.audio.tasks.plotting.plotting", "kind": "module", "doc": "<p>This module contains functions for plotting audio-related data.</p>\n"}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"fullname": "senselab.audio.tasks.plotting.plotting.plot_waveform", "modulename": "senselab.audio.tasks.plotting.plotting", "qualname": "plot_waveform", "kind": "function", "doc": "<p>Plots the waveform of an Audio object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audio (AudioData):</strong>  An instance of Audio containing waveform data and sampling rate.</li>\n<li><strong>title (str):</strong>  Title of the plot.</li>\n<li><strong>fast (bool):</strong>  If True, plots a downsampled version for a faster but less detailed view.</li>\n</ul>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add option to save the plot</li>\n  <li>Add option to choose the size of the Figure</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audio</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Waveform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fast</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"fullname": "senselab.audio.tasks.plotting.plotting.plot_specgram", "modulename": "senselab.audio.tasks.plotting.plotting", "qualname": "plot_specgram", "kind": "function", "doc": "<p>Plots the spectrogram of an Audio object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audio:</strong>  (AudioData): An instance of Audio containing waveform data and sampling rate.</li>\n<li><strong>mel_scale (bool):</strong>  Whether to plot a mel spectrogram or a regular spectrogram.</li>\n<li><strong>title (str):</strong>  Title of the spectrogram plot.</li>\n<li><strong>**spect_kwargs:</strong>  Additional keyword arguments to pass to the spectrogram function.</li>\n</ul>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add option to save the plot</li>\n  <li>Add option to choose the size of the Figure</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audio</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span>,</span><span class=\"param\">\t<span class=\"n\">mel_scale</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Spectrogram&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">spect_kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.plotting.plotting.play_audio": {"fullname": "senselab.audio.tasks.plotting.plotting.play_audio", "modulename": "senselab.audio.tasks.plotting.plotting", "qualname": "play_audio", "kind": "function", "doc": "<p>Plays an audio file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audio (AudioData):</strong>  An instance of Audio containing waveform data and sampling rate.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the number of channels is more than 2.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">audio</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing": {"fullname": "senselab.audio.tasks.preprocessing", "modulename": "senselab.audio.tasks.preprocessing", "kind": "module", "doc": "<p>This module provides the API for the senselab audio preprocessing.</p>\n"}, "senselab.audio.tasks.preprocessing.preprocessing": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "kind": "module", "doc": "<p>This module implements some utilities for the preprocessing task.</p>\n"}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.resample_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "resample_audios", "kind": "function", "doc": "<p>Resamples a list of audio signals to a given sampling rate.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of audio objects to resample.</li>\n<li><strong>resample_rate (int):</strong>  Target sampling rate.</li>\n<li><strong>lowcut (float, optional):</strong>  Low cut frequency for IIR filter.</li>\n<li><strong>order (int, optional):</strong>  Order of the IIR filter. Defaults to 4.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: Resampled audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">resample_rate</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">lowcut</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "downmix_audios_to_mono", "kind": "function", "doc": "<p>Downmixes a list of Audio objects to mono by averaging all channels.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects with a tensor representing the audio waveform.\nShape: (num_channels, num_samples).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of audio objects with a mono waveform averaged from all channels. Shape: (num_samples).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "select_channel_from_audios", "kind": "function", "doc": "<p>Selects a specific channel from a list of Audio objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects with a tensor representing the audio waveform.\nShape: (num_channels, num_samples).</li>\n<li><strong>channel_index (int):</strong>  The index of the channel to select.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of audio objects with the selected channel. Shape: (1, num_samples).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">channel_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "chunk_audios", "kind": "function", "doc": "<p>Chunks the input audios based on the start and end timestamp.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  List of tuples containing an Audio object and a tuple with start and end (in seconds) for chunking.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Audios that have been chunked based on the provided timestamps</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <p>Do we really need both chunk_audios and extract_segments?</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.extract_segments", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "extract_segments", "kind": "function", "doc": "<p>Extracts segments from an audio file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  List of tuples containing an Audio object and a list of tuples with start\nand end (in seconds) for chunking.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of lists of Audios that have been chunked based on the provided timestamps.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.pad_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "pad_audios", "kind": "function", "doc": "<p>Pads the audio segment to the desired length.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  The list of audio objects to be padded.</li>\n<li><strong>desired_samples:</strong>  The desired length (in samples) for the padded audio.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A new Audio object with the waveform padded to the desired length.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">desired_samples</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "evenly_segment_audios", "kind": "function", "doc": "<p>Segments multiple audio files into evenly sized segments with optional padding for the last segment.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  The list of Audio objects to be segmented.</li>\n<li><strong>segment_length:</strong>  The desired length of each segment in seconds.</li>\n<li><strong>pad_last_segment:</strong>  Whether to pad the last segment to the full segment length (default is False).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Audio objects that have been segmented.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">segment_length</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">pad_last_segment</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"fullname": "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios", "modulename": "senselab.audio.tasks.preprocessing.preprocessing", "qualname": "concatenate_audios", "kind": "function", "doc": "<p>Concatenates all audios in the list, ensuring they have the same sampling rate and shape.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audio objects to concatenate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A single Audio object that is the concatenation of all input audios.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the audios do not all have the same sampling rate or shape.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_diarization": {"fullname": "senselab.audio.tasks.speaker_diarization", "modulename": "senselab.audio.tasks.speaker_diarization", "kind": "module", "doc": "<h1 id=\"speaker-diarization\">Speaker diarization</h1>\n\n<p><a href=\"https://github.com/sensein/senselab/blob/main/tutorials/audio/speaker_diarization.ipynb\"><img src=\"https://img.shields.io/badge/Tutorial-Click%20Here-blue?style=for-the-badge\" alt=\"Tutorial\" /></a></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Speaker diarization is the process of segmenting audio recordings by speaker labels, aiming to answer the question: <strong>\"Who spoke when?\"</strong></p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>In <code>senselab</code>, we integrate <a href=\"https://github.com/pyannote/pyannote-audio\">pyannote.audio</a> models for speaker diarization. These models can be explored on the <a href=\"https://huggingface.co/pyannote\">Hugging Face Hub</a>. We may integrate additional approaches for speaker diarization into the package in the future.</p>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>The <strong>Diarization Error Rate (DER)</strong> is the standard metric for evaluating and comparing speaker diarization systems. It is defined as:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>DER= (false alarm + missed detection + confusion) / total\n</code></pre>\n</div>\n\n<p>where</p>\n\n<ul>\n<li><code>false alarm</code> is the duration of non-speech incorrectly classified as speech, missed detection</li>\n<li><code>missed detection</code> is the duration of speech incorrectly classified as non-speech, confusion</li>\n<li><code>confusion</code> is the duration of speaker confusion, and total</li>\n<li><code>total</code> is the sum over all speakers of their reference speech duration.</li>\n</ul>\n\n<p><strong>Note:</strong> DER takes overlapping speech into account. This can lead to increased missed detection rates if the speaker diarization system does not include an overlapping speech detection module.</p>\n\n<h3 id=\"benchmark\">Benchmark</h3>\n\n<p>You can find a benchmark of the latest pyannote.audio model's performance on various time-stamped speech datasets <a href=\"https://github.com/pyannote/pyannote-audio?tab=readme-ov-file#benchmark\">here</a>.</p>\n"}, "senselab.audio.tasks.speaker_diarization.api": {"fullname": "senselab.audio.tasks.speaker_diarization.api", "modulename": "senselab.audio.tasks.speaker_diarization.api", "kind": "module", "doc": "<p>This module implements some utilities for the speaker diarization task.</p>\n"}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"fullname": "senselab.audio.tasks.speaker_diarization.api.diarize_audios", "modulename": "senselab.audio.tasks.speaker_diarization.api", "qualname": "diarize_audios", "kind": "function", "doc": "<p>Diarizes all audios using the given model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be diarized.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for diarization.\nIf None, the default model \"pyannote/speaker-diarization-3.1\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>num_speakers (Optional[int]):</strong>  The number of speakers (default is None).</li>\n<li><strong>min_speakers (Optional[int]):</strong>  The minimum number of speakers (default is None).</li>\n<li><strong>max_speakers (Optional[int]):</strong>  The maximum number of speakers (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[List[ScriptLine]]: The list of script lines with speaker labels.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">PyannoteAudioModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_diarization.pyannote": {"fullname": "senselab.audio.tasks.speaker_diarization.pyannote", "modulename": "senselab.audio.tasks.speaker_diarization.pyannote", "kind": "module", "doc": "<p>This module implements the Pyannote Diarization task.</p>\n"}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"fullname": "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization", "modulename": "senselab.audio.tasks.speaker_diarization.pyannote", "qualname": "PyannoteDiarization", "kind": "class", "doc": "<p>A factory for managing Pyannote Diarization pipelines.</p>\n"}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"fullname": "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote", "modulename": "senselab.audio.tasks.speaker_diarization.pyannote", "qualname": "diarize_audios_with_pyannote", "kind": "function", "doc": "<p>Diarizes a list of audio files using the Pyannote speaker diarization model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of audio files.</li>\n<li><strong>model (PyannoteAudioModel):</strong>  The model to use for diarization.\nIf None, the default model \"pyannote/speaker-diarization-3.1\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to use for diarization.</li>\n<li><strong>num_speakers (Optional[int]):</strong>  Number of speakers, when known.</li>\n<li><strong>min_speakers (Optional[int]):</strong>  Minimum number of speakers. Has no effect when <code>num_speakers</code> is provided.</li>\n<li><strong>max_speakers (Optional[int]):</strong>  Maximum number of speakers. Has no effect when <code>num_speakers</code> is provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[ScriptLine]: A list of ScriptLine objects containing the diarization results.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">PyannoteAudioModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_speakers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_diarization_evaluation": {"fullname": "senselab.audio.tasks.speaker_diarization_evaluation", "modulename": "senselab.audio.tasks.speaker_diarization_evaluation", "kind": "module", "doc": "<p>Top level file exposing speaker diarization utility functions.</p>\n"}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"fullname": "senselab.audio.tasks.speaker_diarization_evaluation.utils", "modulename": "senselab.audio.tasks.speaker_diarization_evaluation.utils", "kind": "module", "doc": "<p>Defines utility functions for evaluating speaker diarization results.</p>\n"}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"fullname": "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate", "modulename": "senselab.audio.tasks.speaker_diarization_evaluation.utils", "qualname": "calculate_diarization_error_rate", "kind": "function", "doc": "<p>Computes the diarization error rate (DER).</p>\n\n<p>Diarizztion error rate is the ratio of the sum of the false alarms (when speech is detected but none is there),\nmissed detections (when speech is there but not detected), and speaker confusions (when speech is\nattributed to the wrong speaker) to the total ground truth time spoken. For more details see:\n<a href=\"https://docs.kolena.com/metrics/diarization-error-rate/\">https://docs.kolena.com/metrics/diarization-error-rate/</a></p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>hypothesis (List[ScriptLine]):</strong>  the diarization generated as the result from a model</li>\n<li><strong>reference (List[ScriptLine]):</strong>  annotations that serve as the ground truth diarization</li>\n<li><strong>greedy (bool):</strong>  whether to use a greedy speaker mapping vs. one that optimizes for minimizing the confusion</li>\n<li><strong>return_speaker_mapping (bool):</strong>  return the mapping between speakers in the reference and the hypothesis</li>\n<li><strong>detailed (bool):</strong>  whether to include each component that contributed to the overall diarization error rate</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary with at least the diarization error rate, its components if detailed was true, and the\n    speaker mapping if return_speaker_mapping was given.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">greedy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_speaker_mapping</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">detailed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_embeddings": {"fullname": "senselab.audio.tasks.speaker_embeddings", "modulename": "senselab.audio.tasks.speaker_embeddings", "kind": "module", "doc": "<h1 id=\"speech-to-text-evaluation\">Speech to text evaluation</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/extract_speaker_embeddings.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>Speaker embeddings are fixed-dimensional vector representations that capture the unique characteristics of a speaker's\nvoice, allowing for tasks such as speaker identification, verification, and diarization.</p>\n\n<p>Speaker embedding extraction is a crucial task in speaker recognition systems. It involves transforming variable-length\naudio signals into fixed-size vector representations that encapsulate speaker-specific information while being robust\nto variations in speech content, background noise, and recording conditions.</p>\n\n<h2 id=\"model-architecture\">Model Architecture:</h2>\n\n<p>The default model used in this module (speechbrain/spkrec-ecapa-voxceleb) is based on the ECAPA-TDNN architecture,\nwhich has shown strong performance across various speaker recognition tasks.\nOther supported models include ResNet TDNN (speechbrain/spkrec-resnet-voxceleb) and\nxvector (speechbrain/spkrec-xvect-voxceleb).</p>\n\n<p><strong>Note</strong>: Performance can vary significantly depending on the specific dataset, task, and evaluation protocol used.\nAlways refer to the most recent literature for up-to-date benchmarks.</p>\n\n<h2 id=\"learn-more\">Learn more:</h2>\n\n<ul>\n<li><a href=\"https://speechbrain.github.io/\">SpeechBrain</a></li>\n<li><a href=\"https://arxiv.org/abs/2005.07143\">ECAPA-TDNN</a></li>\n<li><a href=\"https://doi.org/10.1016/j.csl.2019.101026\">ResNet TDNN</a></li>\n<li><a href=\"https://doi.org/10.21437/Odyssey.2018-15\">xvector</a></li>\n</ul>\n"}, "senselab.audio.tasks.speaker_embeddings.api": {"fullname": "senselab.audio.tasks.speaker_embeddings.api", "modulename": "senselab.audio.tasks.speaker_embeddings.api", "kind": "module", "doc": "<p>This module implements some utilities to extract speaker embeddings from an audio clip.</p>\n"}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"fullname": "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios", "modulename": "senselab.audio.tasks.speaker_embeddings.api", "qualname": "extract_speaker_embeddings_from_audios", "kind": "function", "doc": "<p>Compute the speaker embedding of audio signals.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects containing the audio signals and their properties.</li>\n<li><strong>model (SpeechBrainModel):</strong>  The model used to compute the embeddings.\nIf None, the default model \"speechbrain/spkrec-ecapa-voxceleb\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of 1d tensors containing the speaker embeddings for each audio file.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>NotImplementedError:</strong>  If the model is not a Hugging Face model.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">audios</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;sample.wav&quot;</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SpeechBrainModel</span><span class=\"p\">(</span><span class=\"n\">path_or_uri</span><span class=\"o\">=</span><span class=\"s2\">&quot;speechbrain/spkrec-ecapa-voxceleb&quot;</span><span class=\"p\">,</span> <span class=\"n\">revision</span><span class=\"o\">=</span><span class=\"s2\">&quot;main&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">embeddings</span> <span class=\"o\">=</span> <span class=\"n\">extract_speaker_embeddings_from_audios</span><span class=\"p\">(</span><span class=\"n\">audios</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">DeviceType</span><span class=\"o\">.</span><span class=\"n\">CUDA</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([192])</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SpeechBrainModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"fullname": "senselab.audio.tasks.speaker_embeddings.speechbrain", "modulename": "senselab.audio.tasks.speaker_embeddings.speechbrain", "kind": "module", "doc": "<p>Provides a factory for extracting speaker embeddings from a list of audios using speechbrain.</p>\n"}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"fullname": "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings", "modulename": "senselab.audio.tasks.speaker_embeddings.speechbrain", "qualname": "SpeechBrainEmbeddings", "kind": "class", "doc": "<p>A factory for extracting speaker embeddings using speechbrain models.</p>\n"}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"fullname": "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios", "modulename": "senselab.audio.tasks.speaker_embeddings.speechbrain", "qualname": "SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios", "kind": "function", "doc": "<p>Compute the speaker embeddings of audio signals.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects containing the audio signals and their properties.</li>\n<li><strong>model (SpeechBrainModel):</strong>  The model used to compute the embeddings.\nIf None, the default model \"speechbrain/spkrec-ecapa-voxceleb\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).\nOnly CPU and CUDA are supported.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of tensors containing the speaker embeddings for each audio file.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Optimizing the computation by working in batches</li>\n  <li>Double-checking the input size of classifier.encode_batch</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SpeechBrainModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speaker_verification": {"fullname": "senselab.audio.tasks.speaker_verification", "modulename": "senselab.audio.tasks.speaker_verification", "kind": "module", "doc": "<p>Verifies whether two audio segments belong to the same speaker.</p>\n"}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"fullname": "senselab.audio.tasks.speaker_verification.speaker_verification", "modulename": "senselab.audio.tasks.speaker_verification.speaker_verification", "kind": "module", "doc": "<p>Audio Processing and Speaker Verification Module.</p>\n\n<p>This module provides functions for resampling audio using an IIR filter and\nverifying if two audio samples or files are from the same speaker using a\nspecified model.</p>\n"}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"fullname": "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE", "modulename": "senselab.audio.tasks.speaker_verification.speaker_verification", "qualname": "TRAINING_SAMPLE_RATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "16000"}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"fullname": "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker", "modulename": "senselab.audio.tasks.speaker_verification.speaker_verification", "qualname": "verify_speaker", "kind": "function", "doc": "<p>Verifies if two audio samples are from the same speaker.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Tuple[Audio, Audio]]):</strong>  A list of tuples, where each tuple contains\ntwo audio samples to be compared.</li>\n<li><strong>model (SpeechBrainModel, optional):</strong>  The model for speaker verification..\nIf None, the default model \"speechbrain/spkrec-ecapa-voxceleb\" is used.</li>\n<li><strong>device (DeviceType, optional):</strong>  The device to run the model on. Defaults to CPU.</li>\n<li><strong>threshold (float, optional):</strong>  The threshold to determine same speaker.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Tuple[float, bool]]: A list of tuples containing the verification score and\n                            the prediction for each pair of audio samples. The\n                            verification score is a float indicating the similarity\n                            between the two samples, and the prediction is a boolean\n                            indicating if the two samples are from the same speaker.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SpeechBrainModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_enhancement": {"fullname": "senselab.audio.tasks.speech_enhancement", "modulename": "senselab.audio.tasks.speech_enhancement", "kind": "module", "doc": "<h1 id=\"speech-enhancement\">Speech enhancement</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/speech_enhancement.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Speech Enhancement is a signal processing task that involves improving the quality of speech signals captured under noisy or degraded conditions. The goal of speech enhancement is to make speech signals clearer, more intelligible, and more pleasant to listen to, which can be used for various applications such as voice recognition, teleconferencing, and hearing aids.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>By now, <code>senselab</code> supports all <code>speechbrain</code> models for speech enhancement. These include:</p>\n\n<ul>\n<li><a href=\"https://huggingface.co/speechbrain/sepformer-wham16k-enhancement\">SepFormer</a> for audio clips sampled at 16KHz</li>\n<li><a href=\"https://huggingface.co/speechbrain/.sepformer-wham-enhancement\">SepFormer</a> for audio clips sampled at 8KHz.\nIn the future, more models will be integrated.</li>\n</ul>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>Objective evaluation involves comparing speech enhanced outputs across different downstream tasks:</p>\n\n<ul>\n<li>Using an automatic speaker verification tool to determine if the original speaker and the enhanced speaker can be distinguished from each other.</li>\n<li>Ensuring the intelligibility of speech content using an automatic speech recognition system to verify that the content remains unchanged.</li>\n<li>Assessing the preservation of the original speech's emotion after speech enhancement.</li>\n<li>...more...</li>\n</ul>\n"}, "senselab.audio.tasks.speech_enhancement.api": {"fullname": "senselab.audio.tasks.speech_enhancement.api", "modulename": "senselab.audio.tasks.speech_enhancement.api", "kind": "module", "doc": "<p>This module provides the API for the senselab speech enhancement task.</p>\n"}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"fullname": "senselab.audio.tasks.speech_enhancement.api.enhance_audios", "modulename": "senselab.audio.tasks.speech_enhancement.api", "qualname": "enhance_audios", "kind": "function", "doc": "<p>Enhances all audios using the given model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be enhanced.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for enhancement.\nIf None, the default model \"speechbrain/sepformer-wham16k-enhancement\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of enhanced audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SpeechBrainModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"fullname": "senselab.audio.tasks.speech_enhancement.speechbrain", "modulename": "senselab.audio.tasks.speech_enhancement.speechbrain", "kind": "module", "doc": "<p>This module provides the Speechbrain interface for speech enhancement.</p>\n"}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"fullname": "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer", "modulename": "senselab.audio.tasks.speech_enhancement.speechbrain", "qualname": "SpeechBrainEnhancer", "kind": "class", "doc": "<p>A factory for managing SpeechBrain enhancement pipelines.</p>\n"}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"fullname": "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS", "modulename": "senselab.audio.tasks.speech_enhancement.speechbrain", "qualname": "SpeechBrainEnhancer.MAX_DURATION_SECONDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "60"}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"fullname": "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH", "modulename": "senselab.audio.tasks.speech_enhancement.speechbrain", "qualname": "SpeechBrainEnhancer.MIN_LENGTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"fullname": "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain", "modulename": "senselab.audio.tasks.speech_enhancement.speechbrain", "qualname": "SpeechBrainEnhancer.enhance_audios_with_speechbrain", "kind": "function", "doc": "<p>Enhances all audio samples using the given speechbrain model.</p>\n\n<p>Audio clips longer than MAX_DURATION_SECONDS (= 60s) will be split into segments,\nand each segment will be enhanced separately and then concatenated.\nThis is because the speechbrain model is not able to handle long clips.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be enhanced.</li>\n<li><strong>model (SpeechBrainModel):</strong>  The SpeechBrain model used for enhancement.\nIf None, the default model \"speechbrain/sepformer-wham16k-enhancement\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>batch_size (int):</strong>  The size of batches to use when processing on a GPU.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of enhanced audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SpeechBrainModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text": {"fullname": "senselab.audio.tasks.speech_to_text", "modulename": "senselab.audio.tasks.speech_to_text", "kind": "module", "doc": "<h1 id=\"speech-to-text\">Speech to text</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/speech_to_text.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Speech-to-Text (STT), also known as Automatic Speech Recognition (ASR), is the process of converting spoken language into written text. This technology has a wide range of applications, including transcription services and voice user interfaces.</p>\n\n<p>Notably, certain models can provide word- or sentence-level timestamps along with the transcribed text, making them ideal for generating subtitles. Additionally, some models are multilingual, and some of them leverage language identification blocks to enhance performance.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>A variety of models are supported by <code>senselab</code> for ASR tasks. They can be explored on the <a href=\"https://huggingface.co/models?library=transformers&pipeline_tag=automatic-speech-recognition&sort=downloads\">Hugging Face Hub</a>. Each model varies in performance, size, license, language support, and more. Performance may also vary depending on who is the speaker in the processed audio clips (there may be differences in terms of age, dialects, disfluencies). It is recommended to review the model card for each model before use. Also, always refer to the most recent literature for an informed decision.</p>\n\n<p>Popular models include:</p>\n\n<ul>\n<li><strong>Whisper</strong>\n<ul>\n<li><a href=\"https://huggingface.co/openai/whisper-tiny\">tiny</a></li>\n<li><a href=\"https://huggingface.co/openai/whisper-small\">small</a></li>\n<li><a href=\"https://huggingface.co/openai/whisper-medium\">medium</a></li>\n<li><a href=\"https://huggingface.co/openai/whisper-large-v3\">large</a></li>\n</ul></li>\n</ul>\n\n<ul>\n<li><p><strong>Massively Multilingual Speech</strong></p>\n\n<ul>\n<li><a href=\"https://huggingface.co/facebook/mms-1b-all\">MMS 1b</a></li>\n</ul></li>\n<li><p><strong>Massively Multilingual and Multimodal Machine Translation</strong></p>\n\n<ul>\n<li><a href=\"https://huggingface.co/facebook/seamless-m4t-unity-small-s2t\">Seamless small</a></li>\n<li><a href=\"https://huggingface.co/facebook/hf-seamless-m4t-medium\">Seamless medium</a></li>\n<li><a href=\"https://huggingface.co/facebook/seamless-m4t-v2-large\">Seamless large</a></li>\n</ul></li>\n</ul>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>The primary evaluation metric for ASR systems is the Word Error Rate (WER). WER is calculated as:</p>\n\n<pre><code>WER = (Substitutions + Insertions + Deletions) / Number of words in the reference\n</code></pre>\n\n<p>where:</p>\n\n<ul>\n<li><strong>Substitutions</strong>: Incorrect words.</li>\n<li><strong>Insertions</strong>: Extra words added.</li>\n<li><strong>Deletions</strong>: Words omitted.</li>\n</ul>\n\n<p>Other important metrics include:</p>\n\n<ul>\n<li><strong>Character Error Rate (CER)</strong></li>\n<li><strong>Match Error Rate (MER)</strong></li>\n<li><strong>Word Information Lost (WIL)</strong></li>\n<li><strong>Word Information Preserved (WIP)</strong></li>\n</ul>\n\n<p>For detailed information on these metrics, refer to the <a href=\"speech_to_text_evaluation\">speech to text evaluation module</a>.</p>\n\n<h3 id=\"datasets-english-speech-benchmark-esb\">Datasets (English Speech Benchmark - ESB)</h3>\n\n<p>The following table lists the datasets included in the <a href=\"https://arxiv.org/abs/2210.13352\">English Speech Benchmark (ESB)</a>, which are generally used for evaluating ASR models in English:</p>\n\n<table>\n<thead>\n<tr>\n  <th>Dataset</th>\n  <th>Domain</th>\n  <th>Speaking Style</th>\n  <th>Train (h)</th>\n  <th>Dev (h)</th>\n  <th>Test (h)</th>\n  <th>Transcriptions</th>\n  <th>License</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>LibriSpeech</td>\n  <td>Audiobook</td>\n  <td>Narrated</td>\n  <td>960</td>\n  <td>11</td>\n  <td>11</td>\n  <td>Normalized</td>\n  <td>CC-BY-4.0</td>\n</tr>\n<tr>\n  <td>Common Voice 9</td>\n  <td>Wikipedia</td>\n  <td>Narrated</td>\n  <td>1409</td>\n  <td>27</td>\n  <td>27</td>\n  <td>Punctuated &amp; Cased</td>\n  <td>CC0-1.0</td>\n</tr>\n<tr>\n  <td>VoxPopuli</td>\n  <td>European Parliament</td>\n  <td>Oratory</td>\n  <td>523</td>\n  <td>5</td>\n  <td>5</td>\n  <td>Punctuated</td>\n  <td>CC0</td>\n</tr>\n<tr>\n  <td>TED-LIUM</td>\n  <td>TED talks</td>\n  <td>Oratory</td>\n  <td>454</td>\n  <td>2</td>\n  <td>3</td>\n  <td>Normalized</td>\n  <td>CC-BY-NC-ND 3.0</td>\n</tr>\n<tr>\n  <td>GigaSpeech</td>\n  <td>Audiobook, podcast, YouTube</td>\n  <td>Narrated, spontaneous</td>\n  <td>2500</td>\n  <td>12</td>\n  <td>40</td>\n  <td>Punctuated</td>\n  <td>Apache-2.0</td>\n</tr>\n<tr>\n  <td>SPGISpeech</td>\n  <td>Financial meetings</td>\n  <td>Oratory, spontaneous</td>\n  <td>4900</td>\n  <td>100</td>\n  <td>100</td>\n  <td>Punctuated &amp; Cased</td>\n  <td>User Agreement</td>\n</tr>\n<tr>\n  <td>Earnings-22</td>\n  <td>Financial meetings</td>\n  <td>Oratory, spontaneous</td>\n  <td>105</td>\n  <td>5</td>\n  <td>5</td>\n  <td>Punctuated &amp; Cased</td>\n  <td>CC-BY-SA-4.0</td>\n</tr>\n<tr>\n  <td>AMI</td>\n  <td>Meetings</td>\n  <td>Spontaneous</td>\n  <td>78</td>\n  <td>9</td>\n  <td>9</td>\n  <td>Punctuated &amp; Cased</td>\n  <td>CC-BY-4.0</td>\n</tr>\n</tbody>\n</table>\n\n<p>For more details on these datasets and how models are evaluated to obtain the ESB score, refer to the ESB paper.\nNote that this list of datasets is not exhaustive. If you are interested in benchmarking models in different languages or under specific conditions, consult the relevant literature.</p>\n\n<h3 id=\"benchmark\">Benchmark</h3>\n\n<p>The <a href=\"https://huggingface.co/spaces/hf-audio/open_asr_leaderboard\">\ud83e\udd17 Open ASR Leaderboard</a> ranks and evaluates speech recognition models available on the Hugging Face Hub. The leaderboard uses the datasets included in the ESB paper to obtain robust evaluation scores for each model. The ESB score is a macro-average of the WER scores across the ESB datasets, providing a comprehensive indication of a model's performance across various domains and conditions.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<ul>\n<li>It is possible to fine-tune foundational speech models on a specific language without requiring large amounts of data. A detailed blog post on how to fine-tune a pre-trained Whisper checkpoint on labeled data for ASR can be found <a href=\"https://huggingface.co/blog/fine-tune-whisper\">here</a>.</li>\n</ul>\n\n<p>Learn more:</p>\n\n<ul>\n<li><a href=\"https://arxiv.org/abs/2212.04356\">Whisper</a></li>\n<li><a href=\"https://arxiv.org/abs/2305.13516\">MMS</a></li>\n<li><a href=\"https://arxiv.org/abs/2308.11596\">Seamless MMS</a></li>\n<li><a href=\"https://arxiv.org/abs/2006.11477\">Wav2vec 2.0</a></li>\n</ul>\n"}, "senselab.audio.tasks.speech_to_text.api": {"fullname": "senselab.audio.tasks.speech_to_text.api", "modulename": "senselab.audio.tasks.speech_to_text.api", "kind": "module", "doc": "<p>This module represents the API for the speech-to-text task within the senselab package.</p>\n\n<p>Currently, it supports only Hugging Face models, with plans to include more in the future.\nUsers can specify the audio clips to transcribe, the ASR model, the language,\nthe preferred device, and the model-specific parameters, and senselab handles the rest.</p>\n"}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"fullname": "senselab.audio.tasks.speech_to_text.api.transcribe_audios", "modulename": "senselab.audio.tasks.speech_to_text.api", "qualname": "transcribe_audios", "kind": "function", "doc": "<p>Transcribes all audios using the given model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be transcribed.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for transcription.</li>\n<li><strong>language (Optional[Language]):</strong>  The language of the audio (default is None).</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to pass to the transcription function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[ScriptLine]: The list of script lines.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Include more models (e.g., speechbrain, nvidia)</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text.huggingface": {"fullname": "senselab.audio.tasks.speech_to_text.huggingface", "modulename": "senselab.audio.tasks.speech_to_text.huggingface", "kind": "module", "doc": "<p>This module provides a factory for managing Hugging Face ASR pipelines.</p>\n\n<p>To ensure correct functionality, call <code>transcribe_audios_with_transformers</code> serially or,\nif you need to process multiple audios in parallel, pass the entire list of audios to the\nfunction at once, rather than calling the function with one audio at a time.</p>\n"}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"fullname": "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR", "modulename": "senselab.audio.tasks.speech_to_text.huggingface", "qualname": "HuggingFaceASR", "kind": "class", "doc": "<p>A factory for managing Hugging Face ASR pipelines.</p>\n"}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"fullname": "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers", "modulename": "senselab.audio.tasks.speech_to_text.huggingface", "qualname": "HuggingFaceASR.transcribe_audios_with_transformers", "kind": "function", "doc": "<p>Transcribes all audio samples in the dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be transcribed.</li>\n<li><strong>model (HFModel):</strong>  The Hugging Face model used for transcription.\nIf None, the default model \"openai/whisper-tiny\" is used.</li>\n<li><strong>language (Optional[Language]):</strong>  The language of the audio (default is None).</li>\n<li><strong>return_timestamps (Optional[str]):</strong>  The level of timestamp details (default is \"word\").</li>\n<li><strong>max_new_tokens (int):</strong>  The maximum number of new tokens (default is 128).</li>\n<li><strong>chunk_length_s (int):</strong>  The length of audio chunks in seconds (default is 30).</li>\n<li><strong>batch_size (int):</strong>  The batch size for processing (default is 1).\nNote: Issues have been observed with long audio recordings and timestamped transcript\nif the batch_size is high - not exactly clear what high means\n(https://github.com/huggingface/transformers/issues/2615#issuecomment-656923205).</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[ScritpLine]: The list of script lines.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">HFModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_timestamps</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;word&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_new_tokens</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_length_s</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text_evaluation": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation", "modulename": "senselab.audio.tasks.speech_to_text_evaluation", "kind": "module", "doc": "<h1 id=\"speech-to-text-evaluation\">Speech to text evaluation</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/speech_to_text.ipynb'\">Tutorial</button></p>\n\n<h1 id=\"overview\">Overview</h1>\n\n<p>Evaluating speech transcripts involves comparing a predicted transcript (hypothesis) generated by an automated speech recognition (ASR) system against a ground truth transcript (reference). This evaluation helps to determine the accuracy and performance of the ASR system. Various metrics can be used for this purpose, each capturing different aspects of the errors in the transcription process.</p>\n\n<h2 id=\"key-metrics\">Key metrics</h2>\n\n<h3 id=\"1-word-error-rate-wer\">1. Word Error Rate (WER)</h3>\n\n<p>Word Error Rate (WER) is the most common metric used to evaluate the accuracy of ASR systems. It measures the number of word-level errors (insertions, deletions, and substitutions) divided by the total number of words in the reference. The lower the value, the better the performance of the ASR system, with an error rate of 0 indicating a perfect score. Notably, this is not a percentage as can go higher than 1.</p>\n\n<p><strong>Formula:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>WER = (S + D + I) / N\n</code></pre>\n</div>\n\n<p>Where:</p>\n\n<ul>\n<li>( S ) = Number of substitutions</li>\n<li>( D ) = Number of deletions</li>\n<li>( I ) = Number of insertions</li>\n<li>( N ) = Total number of words in the reference</li>\n</ul>\n\n<h3 id=\"2-character-error-rate-cer\">2. Character Error Rate (CER)</h3>\n\n<p>Character Error Rate (CER) is similar to WER but operates at the character level rather than the word level. It measures the number of character-level errors divided by the total number of characters in the reference. The lower the value, the better the performance of the ASR system, with an error rate of 0 indicating a perfect score.\nAs for WER, CER is not a percentage as can go higher than 1.</p>\n\n<p><strong>Formula:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>CER = (S + D + I) / N\n</code></pre>\n</div>\n\n<p>Where:</p>\n\n<ul>\n<li>( S ) = Number of substitutions</li>\n<li>( D ) = Number of deletions</li>\n<li>( I ) = Number of insertions</li>\n<li>( N ) = Total number of characters in the reference</li>\n</ul>\n\n<h3 id=\"3-match-error-rate-mer\">3. Match Error Rate (MER)</h3>\n\n<p>Match Error Rate (MER) calculates the proportion of word-level errors relative to the total number of correct matches plus the number of errors. The lower the value, the better the performance of the ASR system, with an error rate of 0 indicating a perfect score.</p>\n\n<p><strong>Formula:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>MER = (S + D + I) / (S + D + I + C)\n</code></pre>\n</div>\n\n<p>Where:</p>\n\n<ul>\n<li>( S ) = Number of substitutions</li>\n<li>( D ) = Number of deletions</li>\n<li>( I ) = Number of insertions</li>\n<li>( C ) = Number of correct words</li>\n</ul>\n\n<h3 id=\"4-word-information-lost-wil\">4. Word Information Lost (WIL)</h3>\n\n<p>Word Information Lost (WIL) is computed as follows:</p>\n\n<p><strong>Formula:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>WIL = 1 - (C / N) + (C / P)\n</code></pre>\n</div>\n\n<p>Where:</p>\n\n<ul>\n<li>( C ) = Number of correct words</li>\n<li>( N ) = Number of words in the reference</li>\n<li>( P ) = Number of words in the prediction</li>\n</ul>\n\n<p>The lower the WIL, the better the performance of the ASR system.</p>\n\n<h3 id=\"5-word-information-preserved-wip\">5. Word Information Preserved (WIP)</h3>\n\n<p>Word Information Preserved (WIP) is computed as follows:\n<strong>Formula:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>WIP = (C / N) * (C / P)\n</code></pre>\n</div>\n\n<p>Where:</p>\n\n<ul>\n<li>( C ) = Number of correct words</li>\n<li>( N ) = Number of words in the reference</li>\n<li>( P ) = Number of words in the prediction</li>\n</ul>\n\n<p>The higher the value, the better the performance of the ASR system, with 1 being a perfect score.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>For a given reference \"hello world\" and hypothesis \"hello duck\":</p>\n\n<ul>\n<li><p><strong>WER (Word Error Rate):</strong></p>\n\n<pre><code>WER = (0 + 1 + 0)/(2) = 0.5\n</code></pre></li>\n<li><p><strong>CER (Character Error Rate):</strong></p>\n\n<pre><code>CER = (0 + 1 + 0)/(11) = 0.0909\n</code></pre></li>\n<li><p><strong>MER (Match Error Rate):</strong></p>\n\n<pre><code>MER = (1)/(2) = 0.5\n</code></pre></li>\n</ul>\n"}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "kind": "module", "doc": "<p>This module implements some utilities for evaluating a transcription.</p>\n"}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "qualname": "calculate_wer", "kind": "function", "doc": "<p>Calculate the Word Error Rate (WER) between the reference and hypothesis.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reference (str):</strong>  The ground truth text.</li>\n<li><strong>hypothesis (str):</strong>  The predicted text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The WER score.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">calculate_wer</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello duck&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">0.5</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "qualname": "calculate_mer", "kind": "function", "doc": "<p>Calculate the Match Error Rate (MER) between the reference and hypothesis.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reference (str):</strong>  The ground truth text.</li>\n<li><strong>hypothesis (str):</strong>  The predicted text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The MER score.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">calculate_mer</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello duck&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">0.5</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "qualname": "calculate_wil", "kind": "function", "doc": "<p>Calculate the Word Information Lost (WIL) between the reference and hypothesis.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reference (str):</strong>  The ground truth text.</li>\n<li><strong>hypothesis (str):</strong>  The predicted text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The WIL score.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">calculate_wil</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello duck&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">0.75</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "qualname": "calculate_wip", "kind": "function", "doc": "<p>Calculate the Word Information Preserved (WIP) between the reference and hypothesis.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reference (str):</strong>  The ground truth text.</li>\n<li><strong>hypothesis (str):</strong>  The predicted text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The WIP score.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">calculate_wip</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello duck&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">0.25</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"fullname": "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer", "modulename": "senselab.audio.tasks.speech_to_text_evaluation.utils", "qualname": "calculate_cer", "kind": "function", "doc": "<p>Calculate the Character Error Rate (CER) between the reference and hypothesis.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reference (str):</strong>  The ground truth text.</li>\n<li><strong>hypothesis (str):</strong>  The predicted text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The CER score.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">calculate_cer</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello duck&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">0.45454545454545453</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hypothesis</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.ssl_embeddings": {"fullname": "senselab.audio.tasks.ssl_embeddings", "modulename": "senselab.audio.tasks.ssl_embeddings", "kind": "module", "doc": "<p>This module provides the API for the senselab extract SSL embeddings task.</p>\n"}, "senselab.audio.tasks.ssl_embeddings.api": {"fullname": "senselab.audio.tasks.ssl_embeddings.api", "modulename": "senselab.audio.tasks.ssl_embeddings.api", "kind": "module", "doc": "<p>This module implements some utilities to extract embeddings from self-supervised models.</p>\n"}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"fullname": "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios", "modulename": "senselab.audio.tasks.ssl_embeddings.api", "qualname": "extract_ssl_embeddings_from_audios", "kind": "function", "doc": "<p>Extract embedding of audio signals from pre-trained SSL models.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects containing the audio signals and their properties.</li>\n<li><strong>model (SenselabModel):</strong>  The model used to extract their embeddings.</li>\n<li><strong>cache_dir (Optional[str, os.PathLike]):</strong>  The path to where the model's weights will be saved.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of 1d tensors containing the ssl embeddings for each audio file.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>NotImplementedError:</strong>  If the model is not a Hugging Face model.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">audios</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;sample.wav&quot;</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">HFModel</span><span class=\"p\">(</span><span class=\"n\">path_or_uri</span><span class=\"o\">=</span><span class=\"s2\">&quot;facebook/wav2vec2-base&quot;</span><span class=\"p\">,</span> <span class=\"n\">revision</span><span class=\"o\">=</span><span class=\"s2\">&quot;main&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">embeddings</span> <span class=\"o\">=</span> <span class=\"n\">extract_ssl_embeddings_from_audios</span><span class=\"p\">(</span><span class=\"n\">audios</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">cache_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;./&quot;</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">DeviceType</span><span class=\"o\">.</span><span class=\"n\">CUDA</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">[13, 209, 768] ([# of Layers, Time Frames, Embedding Size])</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Make the API compatible with other models than Hugging Face.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"fullname": "senselab.audio.tasks.ssl_embeddings.self_supervised_features", "modulename": "senselab.audio.tasks.ssl_embeddings.self_supervised_features", "kind": "module", "doc": "<p>This module contains functions for extracting features from pre-trained self-supervised models.</p>\n"}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"fullname": "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory", "modulename": "senselab.audio.tasks.ssl_embeddings.self_supervised_features", "qualname": "SSLEmbeddingsFactory", "kind": "class", "doc": "<p>A factory for managing self-supervised models.</p>\n"}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"fullname": "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings", "modulename": "senselab.audio.tasks.ssl_embeddings.self_supervised_features", "qualname": "SSLEmbeddingsFactory.extract_ssl_embeddings", "kind": "function", "doc": "<p>Compute the ssl embeddings of audio signals.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  A list of Audio objects containing the audio signals and their properties.</li>\n<li><strong>model (HFModel):</strong>  The model used to compute the embeddings\n(default is \"facebook/wav2vec2-base\").</li>\n<li><strong>cache_dir (Optional[str, os.PathLike]):</strong>  The path to where the model's weights will be saved.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).\nOnly CPU and CUDA are supported.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of tensors containing the ssl embeddings for each audio file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">HFModel</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.text_to_speech": {"fullname": "senselab.audio.tasks.text_to_speech", "modulename": "senselab.audio.tasks.text_to_speech", "kind": "module", "doc": "<h1 id=\"text-to-speech\">Text to Speech</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/text_to_speech.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Text-to-speech (TTS) is the task of creating natural-sounding speech from text. This process can be performed in multiple languages and for multiple speakers.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>A variety of models are supported by <code>senselab</code> for text-to-speech.\nEach model varies in performance, size, license, language support, and more. Performance may also vary depending, among other reasons, on the length of the text or the target speaker (differences in terms of age, dialects, disfluencies). It is recommended to review the model card for each model before use and refer to the most recent literature for an informed decision.</p>\n\n<p>Several text-to-speech models are currently available through <code>\ud83e\udd17 Transformers</code>. These models can be explored on the <a href=\"https://huggingface.co/models?library=transformers&pipeline_tag=text-to-speech&sort=downloads\">Hugging Face Hub</a>.\n<strong>Note</strong>: Some <code>Hugging Face</code> models, despite having the <code>text-to-speech</code> label on their model cards, may not work with the text-to-speech pipeline. These models are not supported in <code>senselab</code>, and identifying them often requires trial and error.</p>\n\n<p>In addition to the models from \ud83e\udd17 Transformers, senselab also supports <code>Mars5-TTS</code> and <code>coqui-tts</code>, which enable text-to-speech generation (sometimes using a specific target voice accompanied by its corresponding transcript). Voice cloning using a target voice refers to the process of creating a synthetic voice that mimics the characteristics of a specific person's voice, known as the target voice. This involves generating speech that sounds like it was spoken by that person, even though it was produced by a machine.</p>\n\n<p>Popular/recommended models include:</p>\n\n<ul>\n<li><strong><a href=\"https://huggingface.co/docs/transformers/model_doc/bark\">Bark</a></strong>\n<ul>\n<li><a href=\"https://huggingface.co/suno/bark-small\">small</a></li>\n<li><a href=\"https://huggingface.co/suno/bark\">standard</a></li>\n</ul></li>\n<li><strong><a href=\"https://huggingface.co/docs/transformers/model_doc/mms\">MMS</a></strong>\n<ul>\n<li><a href=\"https://huggingface.co/facebook/mms-300m\">small</a></li>\n<li><a href=\"https://huggingface.co/facebook/mms-1b-all\">large</a></li>\n</ul></li>\n<li><strong><a href=\"https://huggingface.co/docs/transformers/model_doc/speecht5\">SpeechT5</a></strong>\n<ul>\n<li><a href=\"https://huggingface.co/microsoft/speecht5_tts\">standard</a></li>\n</ul></li>\n<li><strong><a href=\"https://github.com/Camb-ai/MARS5-TTS\">Mars5-TTS</a></strong>\n<ul>\n<li><a href=\"https://huggingface.co/CAMB-AI/MARS5-TTS\">mars5_english</a></li>\n</ul></li>\n<li><strong><a href=\"https://github.com/idiap/coqui-ai-TTS\">Coqui-tts</a></strong>\n<ul>\n<li><a href=\"https://github.com/idiap/coqui-ai-TTS/blob/dev/TTS/.models.json\">models</a></li>\n</ul></li>\n</ul>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>For assessing speech quality and intelligibility, we can use quantitative metrics such as:</p>\n\n<ul>\n<li><strong>Wideband Perceptual Estimation of Speech Quality (PESQ)</strong></li>\n<li><strong>Short-Time Objective Intelligibility (STOI)</strong></li>\n<li><strong>Scale-Invariant Signal-to-Distortion Ratio (SI-SDR)</strong></li>\n</ul>\n\n<p>and qualitative metrics such as:</p>\n\n<ul>\n<li><strong>Mean Opinion Score (MOS)</strong></li>\n</ul>\n\n<p>Another way to automatically assess the <strong>intelligibility</strong> of the synthesis is by transcribing the output audio (trusting the ASR system) and computing the <strong>Word Error Rate (WER)</strong> with the reference text.</p>\n\n<p>Also, if targeting a specific speaker's voice, we can perform <strong>speaker verification</strong> to assess how closely the generated audio matches the target voice.\nIf there are specific <strong>features</strong> in the target voice that we aim to maintain, we can extract these features from the generated audio and verify their presence.</p>\n\n<p><code>senselab</code> can help with all of these evaluations.</p>\n\n<h3 id=\"datasets\">Datasets</h3>\n\n<p>To train and evaluate TTS models, a variety of datasets can be used. Some popular datasets include:</p>\n\n<ul>\n<li><strong><a href=\"https://keithito.com/LJ-Speech-Dataset/\">LJSpeech</a></strong>: A dataset of single-speaker English speech.</li>\n<li><strong><a href=\"https://openslr.org/60/\">LibriTTS</a></strong>: A multi-speaker English dataset derived from the LibriVox project.</li>\n<li><strong><a href=\"https://datashare.ed.ac.uk/handle/10283/2651\">VCTK</a></strong>: A multi-speaker English dataset with various accents.</li>\n<li><strong><a href=\"https://commonvoice.mozilla.org/\">Common Voice</a></strong>: A multi-language dataset collected by Mozilla.</li>\n</ul>\n\n<h3 id=\"benchmark\">Benchmark</h3>\n\n<p>The <a href=\"https://huggingface.co/spaces/TTS-AGI/TTS-Arena\">TTS Arena</a> ranks and evaluates text-to-speech models available based on human perception.\nFor automated benchmarking, we recommend using standard datasets and metrics mentioned above.</p>\n"}, "senselab.audio.tasks.text_to_speech.api": {"fullname": "senselab.audio.tasks.text_to_speech.api", "modulename": "senselab.audio.tasks.text_to_speech.api", "kind": "module", "doc": "<p>This module implements some utilities for the text-to-speech task.</p>\n"}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"fullname": "senselab.audio.tasks.text_to_speech.api.synthesize_texts", "modulename": "senselab.audio.tasks.text_to_speech.api", "qualname": "synthesize_texts", "kind": "function", "doc": "<p>Synthesizes speech from all texts using the given model.</p>\n\n<p>This function synthesizes speech from a list of text strings using the specified text-to-speech (TTS) model.\nIt supports models from HuggingFace, coqui-tts, and <code>Mars5TTS</code>.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>texts (List[str]):</strong>  The list of text strings to be synthesized.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for synthesis.\nIf None, the default model \"suno/bark\" is used.</li>\n<li><strong>language (Optional[Language]):</strong>  The language of the text\n(default is None).</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on\n(default is None).</li>\n<li><strong>targets (Optional[List[Audio | Tuple[Audio, str]]]):</strong>  A list where each element is a target audio or a tuple of target audio and transcript.\nDepending on the model being used, the <code>target</code> input may need to be provided in a specific format:\n<ul>\n<li>Hugging Face models do not require a <code>target</code> input at all.</li>\n<li><code>Mars5TTS</code> requires both <code>Audio</code> and a transcript for all inputs.</li>\n</ul></li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to pass to the synthesis function.\nDepending on the model used (e.g., HFModel), additional arguments\nmay be required. Refer to the model-specific documentation for details.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of synthesized audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.text_to_speech.coqui": {"fullname": "senselab.audio.tasks.text_to_speech.coqui", "modulename": "senselab.audio.tasks.text_to_speech.coqui", "kind": "module", "doc": "<p>Coqui TTS wrapper for senselab.</p>\n"}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"fullname": "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS", "modulename": "senselab.audio.tasks.text_to_speech.coqui", "qualname": "CoquiTTS", "kind": "class", "doc": "<p>Factory for initializing and using Coqui TTS models.</p>\n"}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"fullname": "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui", "modulename": "senselab.audio.tasks.text_to_speech.coqui", "qualname": "CoquiTTS.synthesize_texts_with_coqui", "kind": "function", "doc": "<p>Synthesize text to speech using Coqui TTS.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>texts:</strong>  List of input text strings.</li>\n<li><strong>targets:</strong>  If provided, a list of Audio objects for voice cloning\n(must supply equal-length list).</li>\n<li><strong>language:</strong>  Language of input text.</li>\n<li><strong>model:</strong>  CoquiTTSModel specifying Coqui model ID.\nIf None, the default model \"tts_models/multilingual/multi-dataset/xtts_v2\" is used.</li>\n<li><strong>device:</strong>  DeviceType to run on (CPU or CUDA).</li>\n<li><strong>tts_kwargs:</strong>  Additional kwargs passed to Coqui's <code>tts</code> call.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: Synthesized audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">CoquiTTSModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">tts_kwargs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.text_to_speech.huggingface": {"fullname": "senselab.audio.tasks.text_to_speech.huggingface", "modulename": "senselab.audio.tasks.text_to_speech.huggingface", "kind": "module", "doc": "<p>This module implements some utilities for the text-to-speech task.</p>\n"}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"fullname": "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS", "modulename": "senselab.audio.tasks.text_to_speech.huggingface", "qualname": "HuggingFaceTTS", "kind": "class", "doc": "<p>A factory for managing Hugging Face TTS pipelines.</p>\n"}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"fullname": "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers", "modulename": "senselab.audio.tasks.text_to_speech.huggingface", "qualname": "HuggingFaceTTS.synthesize_texts_with_transformers", "kind": "function", "doc": "<p>Synthesizes speech from all the provided text samples.</p>\n\n<p>Several text-to-speech models are currently available in Transformers,\nsuch as Bark, MMS, VITS and SpeechT5.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>texts (List[str]):</strong>  The list of text strings to be synthesized.</li>\n<li><strong>model (HFModel):</strong>  The Hugging Face model used for synthesis.\nIf None, the default model \"suno/bark\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n<li><strong>forward_params (Optional[Dict[str, Any]]):</strong>  Additional parameters to pass to the forward function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of synthesized audio objects.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add speaker embeddings as they do in here:\n  <a href=\"https://huggingface.co/docs/transformers/tasks/text-to-speech\">https://huggingface.co/docs/transformers/tasks/text-to-speech</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">HFModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">forward_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.text_to_speech.marstts": {"fullname": "senselab.audio.tasks.text_to_speech.marstts", "modulename": "senselab.audio.tasks.text_to_speech.marstts", "kind": "module", "doc": "<p>This module provides the implementation of Mars5-TTS-based text-to-speech pipelines.</p>\n"}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"fullname": "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS", "modulename": "senselab.audio.tasks.text_to_speech.marstts", "qualname": "Mars5TTS", "kind": "class", "doc": "<p>A class for managing Torch-based Mars5TTS models.</p>\n"}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"fullname": "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts", "modulename": "senselab.audio.tasks.text_to_speech.marstts", "qualname": "Mars5TTS.synthesize_texts_with_mars5tts", "kind": "function", "doc": "<p>Synthesizes speech from all the provided text samples and target voices+transcripts using Mars5-TTS.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>texts (List[str]):</strong>  The list of text strings to be synthesized.</li>\n<li><strong>targets (List[Tuple[Audio, str]]):</strong>  The list of tuples containing audio objects and transcripts.</li>\n<li><strong>model (TorchModel):</strong>  The Torch model.\nIf None, the default model \"Camb-ai/mars5-tts\" is used.</li>\n<li><strong>language (Optional[Language]):</strong>  The language of the text (default is None).\nThe only supported language is \"en\" for now.</li>\n<li><strong>device (DeviceType):</strong>  The device to run the model on (default is None). Supported devices are CPU and CUDA.</li>\n<li><strong>deep_clone (bool):</strong>  Whether to deep clone the target audio (default is True).</li>\n<li><strong>rep_penalty_window (int):</strong>  The window size for repetition penalty (default is 100).</li>\n<li><strong>top_k (int):</strong>  The number of top-k candidates to consider (default is 100).</li>\n<li><strong>temperature (float):</strong>  The temperature for sampling (default is 0.7).</li>\n<li><strong>freq_penalty (float):</strong>  The frequency penalty for sampling (default is 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: The list of synthesized audio objects.</p>\n</blockquote>\n\n<h6 id=\"some-tips-for-best-quality\">Some tips for best quality:</h6>\n\n<blockquote>\n  <ul>\n  <li>Make sure reference audio is clean and between 1 second and 12 seconds.</li>\n  <li>Use deep clone and provide an accurate transcript for the reference.\n  Mars5-TTS can potentially accept audio target voices without transcripts. After some testing,\n  we found that the best quality is achieved with deep cloning and providing an accurate transcript.</li>\n  <li>Use proper punctuation -- the model can be guided and made better or worse with proper use of punctuation\n  and capitalization.</li>\n  </ul>\n</blockquote>\n\n<p>The original repo of the model is: <a href=\"https://github.com/Camb-ai/MARS5-TTS\">https://github.com/Camb-ai/MARS5-TTS</a>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">TorchModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">deep_clone</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">rep_penalty_window</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">top_k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">freq_penalty</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.voice_activity_detection": {"fullname": "senselab.audio.tasks.voice_activity_detection", "modulename": "senselab.audio.tasks.voice_activity_detection", "kind": "module", "doc": "<h1 id=\"voice-activity-detection-vad\">Voice Activity Detection (VAD)</h1>\n\n<p><a href=\"https://github.com/sensein/senselab/blob/main/tutorials/audio/voice_activity_detection.ipynb\"><img src=\"https://img.shields.io/badge/Tutorial-Click%20Here-blue?style=for-the-badge\" alt=\"Tutorial\" /></a></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Voice Activity Detection (VAD) is a binary classification task that identifies the presence of human voice in audio. The primary challenge in VAD lies in differentiating between noise and human voice, particularly in environments with significant background noise (e.g., fans, car engines). While VAD performs well in quiet environments where distinguishing between silence and speech is straightforward, the task becomes more difficult when background noise or non-standard speech patterns are present.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>In <code>senselab</code>, we integrate <a href=\"https://github.com/pyannote/pyannote-audio\">pyannote.audio</a> models for VAD. These models can be explored on the <a href=\"https://huggingface.co/pyannote\">Hugging Face Hub</a>. Additional approaches for VAD may be integrated into the package in the future.</p>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>The primary metrics used to evaluate VAD modules are Detection Error Rate (DER) and Detection Cost Function (DCF).</p>\n\n<ul>\n<li><p><strong>Detection Error Rate (DER):</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>  DER = (false alarm + missed detection) / total duration of speech in reference\n</code></pre>\n</div>\n\n<ul>\n<li><strong>False alarm:</strong> duration of non-speech incorrectly classified as speech.</li>\n<li><strong>Missed detection:</strong> duration of speech incorrectly classified as non-speech.</li>\n<li><strong>Total:</strong> Total duration of speech in the reference.</li>\n</ul></li>\n<li><p><strong>Detection Cost Function (DCF):</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>DCF = 0.25 * false alarm rate + 0.75 * miss rate\n</code></pre>\n</div>\n\n<ul>\n<li><strong>False alarm rate:</strong> Proportion of non-speech incorrectly classified as speech.</li>\n<li><strong>Miss rate:</strong> Proportion of speech incorrectly classified as non-speech.</li>\n</ul></li>\n</ul>\n\n<h3 id=\"additional-metrics\">Additional Metrics</h3>\n\n<p>VAD systems may also be evaluated using the following metrics:</p>\n\n<ul>\n<li><strong>Accuracy:</strong> Proportion of the input signal correctly classified.</li>\n<li><strong>Precision:</strong> Proportion of detected speech that is actually speech.</li>\n<li><strong>Recall:</strong> Proportion of speech that is correctly detected.</li>\n</ul>\n\n<p>For more detailed information on these metrics, refer to the <a href=\"https://pyannote.github.io/pyannote-metrics/reference.html\">pyannote.metrics documentation</a>.</p>\n"}, "senselab.audio.tasks.voice_activity_detection.api": {"fullname": "senselab.audio.tasks.voice_activity_detection.api", "modulename": "senselab.audio.tasks.voice_activity_detection.api", "kind": "module", "doc": "<p>This module contains functions for computing Voice Activity Detection (VAD).</p>\n"}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"fullname": "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios", "modulename": "senselab.audio.tasks.voice_activity_detection.api", "qualname": "detect_human_voice_activity_in_audios", "kind": "function", "doc": "<p>Diarizes all audios using the given model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  The list of audio objects to be processed.</li>\n<li><strong>model (Optional[PyannoteAudioModel]):</strong>  The model used for voice activity detection.\nIf None, the default model \"pyannote/speaker-diarization-3.1\" is used.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on (default is None).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[List[ScriptLine]]: The list of script lines with voice label.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">PyannoteAudioModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.voice_cloning": {"fullname": "senselab.audio.tasks.voice_cloning", "modulename": "senselab.audio.tasks.voice_cloning", "kind": "module", "doc": "<h1 id=\"voice-cloning\">Voice cloning</h1>\n\n<p><button class=\"tutorial-button\" onclick=\"window.location.href='https://github.com/sensein/senselab/blob/main/tutorials/audio/voice_cloning.ipynb'\">Tutorial</button></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Any-to-any voice cloning aims to transform a source speech into a target voice using just one or a few examples of the target speaker's voice as references. Traditional voice conversion systems attempt to separate the speaker's identity from the speech content. This allows the replacement of speaker information to convert the voice to a target speaker. However, learning such disentangled representations is complex and poses significant challenges. Also, how speech attributes (e.g., pitch, speed, and style) are preserved or transformed depends on the specific model used.</p>\n\n<h2 id=\"models\">Models</h2>\n\n<p>We have explored several models for voice cloning:</p>\n\n<ul>\n<li><a href=\"https://huggingface.co/microsoft/speecht5_vc\">speechT5</a> (not included in <code>senselab</code> as it did not meet our expectations),</li>\n<li><a href=\"https://github.com/OlaWod/FreeVC\">FREEVC</a> (included in <code>senselab</code>),</li>\n<li><a href=\"https://github.com/bshall/knn-vc\">KNNVC</a> (included in <code>senselab</code>).</li>\n<li><a href=\"https://github.com/myshell-ai/OpenVoice\">OpenVoice</a> (included in <code>senselab</code>),</li>\n<li><a href=\"https://github.com/Berkeley-Speech-Group/Speech-Articulatory-Coding\">SPARC</a> (included in <code>senselab</code>).</li>\n</ul>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<p>Objective evaluation involves comparing voice cloning outputs across different downstream tasks:</p>\n\n<ul>\n<li>Using an automatic speaker verification tool to determine if the original speaker, the target speaker, and the cloned speaker can be distinguished from each other.</li>\n<li>Ensuring the intelligibility of speech content using an automatic speech recognition system to verify that the content remains unchanged.</li>\n<li>Assessing the preservation of the original speech's emotion after voice cloning.</li>\n<li>...more...</li>\n</ul>\n\n<h3 id=\"benchmark\">Benchmark</h3>\n\n<p>Recent efforts to enhance privacy in speech technology include the <a href=\"https://arxiv.org/pdf/2005.01387\">VoicePrivacy initiative</a>, which has been active since 2020, focusing on developing and benchmarking anonymization methods. Despite these efforts, achieving perfect privacy remains a challenge (see <a href=\"https://www.voiceprivacychallenge.org/vp2022/docs/VoicePrivacy_2022_Challenge___Natalia_Tomashenko.pdf\">here</a> for more details).</p>\n"}, "senselab.audio.tasks.voice_cloning.api": {"fullname": "senselab.audio.tasks.voice_cloning.api", "modulename": "senselab.audio.tasks.voice_cloning.api", "kind": "module", "doc": "<p>This module implements some utilities for the voice cloning task.</p>\n"}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"fullname": "senselab.audio.tasks.voice_cloning.api.clone_voices", "modulename": "senselab.audio.tasks.voice_cloning.api", "qualname": "clone_voices", "kind": "function", "doc": "<p>Clones voices from source audios to target audios using the given model.</p>\n\n<p>This function performs pairwise voice cloning, where the voice from each audio sample\nin the <code>source_audios</code> list is transformed into the corresponding audio\nsample in the <code>target_audios</code> list. The resulting list contains audio samples that\npreserve the content of the original source audio but with the voice replaced by the\nvoice from the corresponding target audio. How other audio attributes (e.g., pitch,\nspeed, and style) are preserved or transformed depends on the specific model used.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>source_audios (List[Audio]):</strong>  A list of audio samples whose voices will be \"replaced\"\nby the voices from the corresponding target audio samples. The content\n(e.g., words) will remain the same, but the voice sounds like the target.</li>\n<li><strong>target_audios (List[Audio]):</strong>  A list of audio samples whose voices will be extracted\nand used to replace the voices in the corresponding source audio samples.</li>\n<li><strong>model (CoquiTTSModel, optional):</strong>  The <code>CoquiTTSModel</code> model to use for voice cloning.\nThe <code>CoquiTTSModel</code> is a child class of <code>SenselabModel</code> and specifies the model for cloning.\nAll Coqui TTS models are supported, including \"voice_conversion_models/multilingual/multi-dataset/knnvc\",\n\"voice_conversion_models/multilingual/vctk/freevc24\",\n\"voice_conversion_models/multilingual/multi-dataset/openvoice_v1\",\n\"voice_conversion_models/multilingual/multi-dataset/openvoice_v2\".\nIf None, the default model is SPARC.</li>\n<li><strong>device (Optional[DeviceType], optional):</strong>  The preferred device to run the model on (e.g., CPU or GPU).\nDefaults to None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for model-specific parameters that will\nbe passed directly to the underlying model's voice cloning method.\nFor instance, the default SPARC model accepts a <code>lang</code> parameter to specify the language\n(e.g., <code>lang=Language(\"english\")</code>). If <code>lang</code> is not None, the model will operate in a\nmulti-language mode.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: A list of audio samples with cloned voices from the corresponding source and target audios.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the lengths of <code>source_audios</code> and <code>target_audios</code> do not match.</li>\n<li><strong>NotImplementedError:</strong>  If the specified model is not supported.\nCurrently, only SPARC and Coqui TTS models are supported.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">source_audios</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;source1.wav&quot;</span><span class=\"p\">),</span> <span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;source2.wav&quot;</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target_audios</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;target1.wav&quot;</span><span class=\"p\">),</span> <span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;target2.wav&quot;</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cloned_audios</span> <span class=\"o\">=</span> <span class=\"n\">clone_voices</span><span class=\"p\">(</span><span class=\"n\">source_audios</span><span class=\"p\">,</span> <span class=\"n\">target_audios</span><span class=\"p\">)</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">target_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">CoquiTTSModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.voice_cloning.coqui": {"fullname": "senselab.audio.tasks.voice_cloning.coqui", "modulename": "senselab.audio.tasks.voice_cloning.coqui", "kind": "module", "doc": "<p>This module contains functions for voice cloning using Coqui TTS.</p>\n"}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"fullname": "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner", "modulename": "senselab.audio.tasks.voice_cloning.coqui", "qualname": "CoquiVoiceCloner", "kind": "class", "doc": "<p>A factory for managing voice cloning pipelines using Coqui TTS.</p>\n"}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"fullname": "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices", "modulename": "senselab.audio.tasks.voice_cloning.coqui", "qualname": "CoquiVoiceCloner.clone_voices", "kind": "function", "doc": "<p>Clone voices from source audios to target audios using Coqui TTS.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>source_audios (List[Audio]):</strong>  List of source audio objects.</li>\n<li><strong>target_audios (List[Audio]):</strong>  List of target audio objects.</li>\n<li><strong>model (CoquiTTSModel, optional):</strong>  The Coqui TTS model to use for voice conversion.\nAll Coqui TTS models are supported, including\n\"voice_conversion_models/multilingual/multi-dataset/knnvc\",\n\"voice_conversion_models/multilingual/vctk/freevc24\",\n\"voice_conversion_models/multilingual/multi-dataset/openvoice_v1\",\n\"voice_conversion_models/multilingual/multi-dataset/openvoice_v2\".\nIf None, the default model \"voice_conversion_models/multilingual/multi-dataset/knnvc\" is used.</li>\n<li><strong>device (Optional[DeviceType], optional):</strong>  The device to run the model on.\nDefaults to None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">source_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">target_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">CoquiTTSModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.tasks.voice_cloning.sparc": {"fullname": "senselab.audio.tasks.voice_cloning.sparc", "modulename": "senselab.audio.tasks.voice_cloning.sparc", "kind": "module", "doc": "<p>This module contains functions for voice cloning using SPARC.</p>\n"}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"fullname": "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner", "modulename": "senselab.audio.tasks.voice_cloning.sparc", "qualname": "SparcVoiceCloner", "kind": "class", "doc": "<p>A factory for managing voice cloning pipelines using SPARC.</p>\n"}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"fullname": "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices", "modulename": "senselab.audio.tasks.voice_cloning.sparc", "qualname": "SparcVoiceCloner.clone_voices", "kind": "function", "doc": "<p>Clone voices from source audios to target audios using SPARC.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>source_audios (List[Audio]):</strong>  List of source audio objects.</li>\n<li><strong>target_audios (List[Audio]):</strong>  List of target audio objects.</li>\n<li><strong>lang (Optional[Language], optional):</strong>  Language for the SPARC model.\nDefaults to None, which means multi-language.</li>\n<li><strong>device (Optional[DeviceType], optional):</strong>  The device to run the model on.\nDefaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Audio]: List of cloned audio objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">source_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">target_audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.audio.workflows": {"fullname": "senselab.audio.workflows", "modulename": "senselab.audio.workflows", "kind": "module", "doc": "<p>Workflows and pipelines for audio processing and analysis.</p>\n"}, "senselab.audio.workflows.health_measurements": {"fullname": "senselab.audio.workflows.health_measurements", "modulename": "senselab.audio.workflows.health_measurements", "kind": "module", "doc": "<h1 id=\"measuring-health-using-speech-and-voice-metrics\">Measuring Health Using Speech and Voice Metrics</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>Health measurement through speech and voice analysis is an emerging interdisciplinary field with significant potential in clinical and remote health monitoring. By leveraging advances in machine learning, deep learning, and signal processing, speech and voice data can reveal a range of health indicators, particularly useful for assessing mental and neurological health conditions. These metrics capture both vocal and linguistic features that can reflect emotional, cognitive, and physical states, providing insights that are less invasive than traditional methods.</p>\n\n<p>In section, you can find some workflows and pipelines aiming to extract and refine useful measurements and explore their potential for quick, non-intrusive health assessments and monitoring. Integrating these speech-derived measures with broader health monitoring systems could contribute significantly to early diagnosis, personalized treatment, and ongoing health monitoring across various clinical applications.</p>\n\n<p><strong>This piece of documentation is in progress. STAY TUNED!</strong></p>\n"}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"fullname": "senselab.audio.workflows.health_measurements.extract_health_measurements", "modulename": "senselab.audio.workflows.health_measurements.extract_health_measurements", "kind": "module", "doc": "<p>This script contains a function for extracting health measurements from audio files.</p>\n\n<p>The initial implementation of this features extraction was started by Nicholas Cummins\nfrom King's College London and has since been further developed and maintained\nby the senselab community.</p>\n"}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"fullname": "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements", "modulename": "senselab.audio.workflows.health_measurements.extract_health_measurements", "qualname": "extract_health_measurements", "kind": "function", "doc": "<p>Extract health measurements from audio files.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audios (List[Audio]):</strong>  List of Audio objects.</li>\n<li><strong>plugin (str):</strong>  Plugin to use for feature extraction. Defaults to \"serial\".</li>\n<li><strong>plugin_args (Dict[str, Any]):</strong>  Dictionary of arguments for the feature extraction plugin.</li>\n<li><strong>cache_dir (Optional[str]):</strong>  Directory to use for caching by pydra. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Dict[str, Any]]: List of dictionaries containing speech and voice metrics\n  that may be used for health monitoring.\n      Metrics include:</p>\n\n<pre><code>- speaking_rate\n- articulation_rate\n- phonation_ratio\n- pause_rate\n- mean_pause_duration\n- mean_f0_hertz\n- std_f0_hertz\n- mean_intensity_db\n- std_intensity_db\n- range_ratio_intensity_db\n- mean_hnr_db\n- std_hnr_db\n- spectral_slope\n- spectral_tilt\n- cepstral_peak_prominence_mean\n- cepstral_peak_prominence_std\n- mean_f1_loc\n- std_f1_loc\n- mean_b1_loc\n- std_b1_loc\n- mean_f2_loc\n- std_f2_loc\n- mean_b2_loc\n- std_b2_loc\n- spectral_gravity\n- spectral_std_dev\n- spectral_skewness\n- spectral_kurtosis\n</code></pre>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">audios</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Audio</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s2\">&quot;sample.wav&quot;</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">extract_health_measurements</span><span class=\"p\">(</span><span class=\"n\">audios</span><span class=\"p\">)</span>\n<span class=\"go\">[{&#39;speaking_rate&#39;: 3.874983349680919,</span>\n<span class=\"go\">&#39;articulation_rate&#39;: 3.874983349680919,</span>\n<span class=\"go\">&#39;phonation_ratio&#39;: 1.0,</span>\n<span class=\"go\">&#39;pause_rate&#39;: 0.0,</span>\n<span class=\"go\">&#39;mean_pause_duration&#39;: 0.0,</span>\n<span class=\"go\">&#39;mean_f0_hertz&#39;: 118.59917806814313,</span>\n<span class=\"go\">&#39;std_f0_hertz&#39;: 30.232960797931817,</span>\n<span class=\"go\">&#39;mean_intensity_db&#39;: 69.76277128148347,</span>\n<span class=\"go\">&#39;std_intensity_db&#39;: 58.54414165935646,</span>\n<span class=\"go\">&#39;range_ratio_intensity_db&#39;: -0.25736445047981316,</span>\n<span class=\"go\">&#39;mean_hnr_db&#39;: 3.3285614070654375,</span>\n<span class=\"go\">&#39;std_hnr_db&#39;: 3.36490968797237,</span>\n<span class=\"go\">&#39;spectral_slope&#39;: -13.982306776816046,</span>\n<span class=\"go\">&#39;spectral_tilt&#39;: -0.004414961849917737,</span>\n<span class=\"go\">&#39;cepstral_peak_prominence_mean&#39;: 7.0388038514346825,</span>\n<span class=\"go\">&#39;cepstral_peak_prominence_std&#39;: 1.5672438573255245,</span>\n<span class=\"go\">&#39;mean_f1_loc&#39;: 613.4664268420964,</span>\n<span class=\"go\">&#39;std_f1_loc&#39;: 303.98235579059883,</span>\n<span class=\"go\">&#39;mean_b1_loc&#39;: 401.96960219300837,</span>\n<span class=\"go\">&#39;std_b1_loc&#39;: 400.9001719378358,</span>\n<span class=\"go\">&#39;mean_f2_loc&#39;: 1701.7755281579418,</span>\n<span class=\"go\">&#39;std_f2_loc&#39;: 325.4405394017738,</span>\n<span class=\"go\">&#39;mean_b2_loc&#39;: 434.542188503193,</span>\n<span class=\"go\">&#39;std_b2_loc&#39;: 380.8914612651878,</span>\n<span class=\"go\">&#39;spectral_gravity&#39;: 579.587511962247,</span>\n<span class=\"go\">&#39;spectral_std_dev&#39;: 651.3025011919739,</span>\n<span class=\"go\">&#39;spectral_skewness&#39;: 3.5879707548251045,</span>\n<span class=\"go\">&#39;spectral_kurtosis&#39;: 19.991495997865282}]</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">audios</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">plugin</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;serial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">plugin_args</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">cache_dir</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.text": {"fullname": "senselab.text", "modulename": "senselab.text", "kind": "module", "doc": "<p>This module contains implementations related to text processing.</p>\n"}, "senselab.text.tasks": {"fullname": "senselab.text.tasks", "modulename": "senselab.text.tasks", "kind": "module", "doc": "<p>This module if for processing text.</p>\n"}, "senselab.text.tasks.embeddings_extraction": {"fullname": "senselab.text.tasks.embeddings_extraction", "modulename": "senselab.text.tasks.embeddings_extraction", "kind": "module", "doc": "<p>This module provides the API for the senselab text embeddings extraction.</p>\n"}, "senselab.text.tasks.embeddings_extraction.api": {"fullname": "senselab.text.tasks.embeddings_extraction.api", "modulename": "senselab.text.tasks.embeddings_extraction.api", "kind": "module", "doc": "<p>This module provides a wrapper method for extracting embeddings from text using different models.</p>\n"}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"fullname": "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text", "modulename": "senselab.text.tasks.embeddings_extraction.api", "qualname": "extract_embeddings_from_text", "kind": "function", "doc": "<p>Extracts embeddings from a list of strings using the specified model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pieces_of_text (List[str]):</strong>  A list of strings to extract embeddings from.</li>\n<li><strong>model (SenselabModel):</strong>  The model used for extracting embeddings.</li>\n<li><strong>device (Optional[DeviceType]):</strong>  The device to run the model on. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of embeddings for the input strings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pieces_of_text</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SenselabModel</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.text.tasks.embeddings_extraction.huggingface": {"fullname": "senselab.text.tasks.embeddings_extraction.huggingface", "modulename": "senselab.text.tasks.embeddings_extraction.huggingface", "kind": "module", "doc": "<p>This module contains functions for extracting features from pre-trained self-supervised models.</p>\n"}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"fullname": "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory", "modulename": "senselab.text.tasks.embeddings_extraction.huggingface", "qualname": "HFFactory", "kind": "class", "doc": "<p>A factory for managing self-supervised models from Hugging Face.</p>\n"}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"fullname": "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings", "modulename": "senselab.text.tasks.embeddings_extraction.huggingface", "qualname": "HFFactory.extract_text_embeddings", "kind": "function", "doc": "<p>Extracts embeddings from a list of strings using a Hugging Face model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pieces_of_text (List[str]):</strong>  A list of strings to extract embeddings from.</li>\n<li><strong>model (HFModel, optional):</strong>  A Hugging Face model configuration.\nIf None, the default model \"sentence-transformers/all-MiniLM-L6-v2\" is used.</li>\n<li><strong>device (Optional[DeviceType], optional):</strong>  The device to run the model on.\nDefaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of embeddings for the input strings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">pieces_of_text</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">HFModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"fullname": "senselab.text.tasks.embeddings_extraction.sentence_transformers", "modulename": "senselab.text.tasks.embeddings_extraction.sentence_transformers", "kind": "module", "doc": "<p>This module implements some utilities for using Sentence Transformers for embeddings extraction.</p>\n"}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"fullname": "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory", "modulename": "senselab.text.tasks.embeddings_extraction.sentence_transformers", "qualname": "SentenceTransformerFactory", "kind": "class", "doc": "<p>A factory for managing SentenceTransformer pipelines for text embeddings.</p>\n"}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"fullname": "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings", "modulename": "senselab.text.tasks.embeddings_extraction.sentence_transformers", "qualname": "SentenceTransformerFactory.extract_text_embeddings", "kind": "function", "doc": "<p>Extracts embeddings from a list of strings using a SentenceTransformer model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pieces_of_text (List[str]):</strong>  A list of strings to extract embeddings from.</li>\n<li><strong>model (SentenceTransformersModel, optional):</strong>  A Hugging Face model configuration.\nIf None, the default model \"sentence-transformers/all-MiniLM-L6-v2\" is used.</li>\n<li><strong>device (Optional[DeviceType], optional):</strong>  The device to run the model on.\nDefaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[torch.Tensor]: A list of embeddings for the input strings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">pieces_of_text</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">SentenceTransformersModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">DeviceType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils": {"fullname": "senselab.utils", "modulename": "senselab.utils", "kind": "module", "doc": "<p>This module contains the implementation of utility functions.</p>\n"}, "senselab.utils.config": {"fullname": "senselab.utils.config", "modulename": "senselab.utils.config", "kind": "module", "doc": "<p>This module provides the implementation of config utilities.</p>\n"}, "senselab.utils.config.get_config": {"fullname": "senselab.utils.config.get_config", "modulename": "senselab.utils.config", "qualname": "get_config", "kind": "function", "doc": "<p>Reads and returns the contents of the config file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.constants": {"fullname": "senselab.utils.constants", "modulename": "senselab.utils.constants", "kind": "module", "doc": "<p>Constants used by Senselab.</p>\n"}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"fullname": "senselab.utils.constants.SENSELAB_NAMESPACE", "modulename": "senselab.utils.constants", "qualname": "SENSELAB_NAMESPACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "UUID(&#x27;b5e0e774-e24c-3298-9802-781f66220abf&#x27;)"}, "senselab.utils.data_structures": {"fullname": "senselab.utils.data_structures", "modulename": "senselab.utils.data_structures", "kind": "module", "doc": "<p>This module provides the APIs of the senselab utils data structures.</p>\n"}, "senselab.utils.data_structures.dataset": {"fullname": "senselab.utils.data_structures.dataset", "modulename": "senselab.utils.data_structures.dataset", "kind": "module", "doc": "<p>Data structures relevant for managing datasets.</p>\n"}, "senselab.utils.data_structures.dataset.Participant": {"fullname": "senselab.utils.data_structures.dataset.Participant", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Participant", "kind": "class", "doc": "<p>Data structure for a participant in a dataset.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>id:</strong>  The ID of the participant. If not provided, generated using uuid4</li>\n<li><strong>metadata:</strong>  Dictionary of user specified metadata related to the participant</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.dataset.Participant.id": {"fullname": "senselab.utils.data_structures.dataset.Participant.id", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Participant.id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.utils.data_structures.dataset.Participant.metadata": {"fullname": "senselab.utils.data_structures.dataset.Participant.metadata", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Participant.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, "senselab.utils.data_structures.dataset.Participant.set_id": {"fullname": "senselab.utils.data_structures.dataset.Participant.set_id", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Participant.set_id", "kind": "function", "doc": "<p>Set the unique id of the participant.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.Participant.model_config": {"fullname": "senselab.utils.data_structures.dataset.Participant.model_config", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Participant.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.dataset.Session": {"fullname": "senselab.utils.data_structures.dataset.Session", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Session", "kind": "class", "doc": "<p>Data structure for a session in a dataset.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>id:</strong>  the ID of the session. If not provided, generated using uuid4</li>\n<li><strong>metadata:</strong>  Dictionary of user specified metadata related to the session</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.dataset.Session.id": {"fullname": "senselab.utils.data_structures.dataset.Session.id", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Session.id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.utils.data_structures.dataset.Session.metadata": {"fullname": "senselab.utils.data_structures.dataset.Session.metadata", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Session.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, "senselab.utils.data_structures.dataset.Session.set_id": {"fullname": "senselab.utils.data_structures.dataset.Session.set_id", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Session.set_id", "kind": "function", "doc": "<p>Set the unique id of the session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.Session.model_config": {"fullname": "senselab.utils.data_structures.dataset.Session.model_config", "modulename": "senselab.utils.data_structures.dataset", "qualname": "Session.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.dataset.SenselabDataset": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset", "kind": "class", "doc": "<p>Class for maintaining SenseLab datasets and functionalities.</p>\n\n<p>Maintains collections of Audios, Videos, and metadata for use of the Senselab tools\nand pipelines. Includes the ability to manage Sessions and Participants.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>audios:</strong>  List of Audios that are generated based on list of audio filepaths</li>\n<li><strong>videos:</strong>  List of Videos generated from a list of video filepaths</li>\n<li><strong>metadata:</strong>  Metadata related to the dataset overall but not necessarily the metadata of\nindivudal audios or videos in the dataset</li>\n<li><strong>sessions:</strong>  Mapping of Session IDs to Session instances</li>\n<li><strong>participants:</strong>  Mapping of participant IDs to Participant instances</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.participants", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.participants", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, senselab.utils.data_structures.dataset.Participant]"}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.sessions", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.sessions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, senselab.utils.data_structures.dataset.Session]"}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.audios", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.audios", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.audio.data_structures.audio.Audio]"}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.videos", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.videos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.video.data_structures.video.Video]"}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.metadata", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.generate_audios_from_filepaths", "kind": "function", "doc": "<p>Generate the audios in the dataset from a list of audio filepaths.</p>\n\n<p>Generates the audios in the dataset by taking in a list of audio filepaths\nor a list of Audios</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v:</strong>  Input for audios attribute that we're validating by generating the Audios if filepaths\nare provided or just the list of Audios if pre-generated and passed in</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Audios that instantiates the audios attribute in the dataset</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.generate_videos_from_filepaths", "kind": "function", "doc": "<p>Generate the videos in the dataset from a list of video filepaths.</p>\n\n<p>Generates the videos in the dataset by taking in a list of video filepaths\nor a list of Videos</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v:</strong>  Input for videos attribute that we're validating by generating the Videos if filepaths\nare provided or just the list of Videos if pre-generated and passed in</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Videos that instantiates the videos attribute in the dataset</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">Video</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">Video</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.create_bids_dataset", "kind": "function", "doc": "<p>Create a dataset from a BIDS organized directory.</p>\n\n<p>Creates a new dataset based off of a BIDS directory structure as defined at\n<a href=\"https://sensein.group/biometrics-book/updated_bids.html\">https://sensein.group/biometrics-book/updated_bids.html</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">bids_root_filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">SenselabDataset</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.create_audio_split_for_pydra_task", "kind": "function", "doc": "<p>Splits the audio data for Pydra tasks.</p>\n\n<p>Creates a split of the audio data that can be used for creating individual Pydra tasks using\nthe .split functionality. Splits the data such that the inputs for a Pydra workflow are either\noptimized for the GPU's batch size or a single Audio per CPU thread.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch_size:</strong>  How to batch Audios for a Pydra task; defaults to 1 since CPU won't batch</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Lists of Audio where each List of Audios will be an input to a Pydra task.\n  Each of the sublists are either of size 1 for CPUs or at most batch_size for GPU optimization.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li>ValueError if the batch size is invalid (less than 1)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.audio_merge_from_pydra_task", "kind": "function", "doc": "<p>TODO: Write later.</p>\n\n<p>Logic Pydra:\naudios: List of audios that want to give to task\nsplit: List[List[Audios]] -> task List[Audio]\npydra task(List[Audio]) -> List[Audio]\nmerge(List[List[Audio]]) &lt;- might be a wrapped instead of List of lists\nTODO: Figure out what a merge behavior looks like from Pydra</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">audios_to_merge</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">audio</span><span class=\"o\">.</span><span class=\"n\">Audio</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.add_participant", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.add_participant", "kind": "function", "doc": "<p>Add a participant to the dataset.</p>\n\n<p>Adds a new participant to the dataset if they are not already in it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>participant:</strong>  instance of a Participant that we want to add to the dataset</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the participant ID is already in the dataset, we raise a value error.\nThis means that either the ID is non-unique and/or the participant is already in the dataset.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Participant</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.add_session", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.add_session", "kind": "function", "doc": "<p>Add a session to the dataset.</p>\n\n<p>Adds a new sesszion to the dataset if it is not already in there.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>session:</strong>  instance of a Session that we want to add to the dataset</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the session ID is already in the dataset, we raise a value error.\nThis means that either the ID is non-unique and/or the session is already in the dataset.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Session</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.get_participants", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.get_participants", "kind": "function", "doc": "<p>Get the list of participants in the dataset.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>participants (List[Participant]): all of the instances of participants in the dataset\n  Warning: The instances are returned as is, so changes to the underlying participants in this\n    list will automatically be reflected in the dataset.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Participant</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.get_sessions", "kind": "function", "doc": "<p>Get the list of sessions in the dataset.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>sessions (List[Session]): all of the instances of sessions in the dataset\n  Warning: The instances are returned as is, so changes to the underlying sessions in this\n    list will automatically be reflected in the dataset.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.convert_senselab_dataset_to_hf_datasets", "kind": "function", "doc": "<p>Converts Senselab datasets into HuggingFace datasets.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of HuggingFace datasets that represent the underlying Senselab dataset.\n    Currently only supports creating HuggingFace datasets for the Audio(s) and Video(s) in\n    the SenselabDataset. Videos in HuggingFace are not natively supported, so they are treated\n    as Sequences of images with a frame_rate.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.convert_hf_dataset_to_senselab_dataset", "kind": "function", "doc": "<p>Converts HuggingFace dataset to a Senselab dataset.</p>\n\n<p>Convert HuggingFace dataset(s) to a SenselabDataset where each component of a SenselabDataset\n  (e.g. audios, videos, sessions, participants) are stored under different keys in the provided dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>hf_datasets:</strong>  Dictionary of the different individual components that make up a SenselabDataset. Audios must\nbe organized as HuggingFace Audio(s) which is a dictionary with an array attribute, sampling rate, and\na path. Videos are not natively supported by HuggingFace, so SenselabDataset expects a sequence of\nframes that are each an image, a frame_rate argument, and optionally the associated audio with the\nvideo.</li>\n<li><strong>metadata:</strong>  Dictionary of additional dataset level metadata. Differs from metadata inside each HuggingFace\ndataset that is provided and is unaffected by transder_metadata.</li>\n<li><strong>transfer_metadata:</strong>  Specifies whether to generate metadata from extraneous attributes in the\nHuggingDataset in addition to any specified ina metadata field, otherwise they are ignored.\nDefaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The generated SenselabDataset from the provided fields in the hf_datasets dictionary. Currently does not\n    support converting sessions or participants.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">hf_datasets</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">transfer_metadata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">SenselabDataset</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"fullname": "senselab.utils.data_structures.dataset.SenselabDataset.model_config", "modulename": "senselab.utils.data_structures.dataset", "qualname": "SenselabDataset.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.device": {"fullname": "senselab.utils.data_structures.device", "modulename": "senselab.utils.data_structures.device", "kind": "module", "doc": "<p>Utility functions for utilizing different devices in Senselab.</p>\n"}, "senselab.utils.data_structures.device.DeviceType": {"fullname": "senselab.utils.data_structures.device.DeviceType", "modulename": "senselab.utils.data_structures.device", "qualname": "DeviceType", "kind": "class", "doc": "<p>Device types for PyTorch operations.</p>\n", "bases": "enum.Enum"}, "senselab.utils.data_structures.device.DeviceType.CPU": {"fullname": "senselab.utils.data_structures.device.DeviceType.CPU", "modulename": "senselab.utils.data_structures.device", "qualname": "DeviceType.CPU", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.CPU: &#x27;cpu&#x27;&gt;"}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"fullname": "senselab.utils.data_structures.device.DeviceType.CUDA", "modulename": "senselab.utils.data_structures.device", "qualname": "DeviceType.CUDA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.CUDA: &#x27;cuda&#x27;&gt;"}, "senselab.utils.data_structures.device.DeviceType.MPS": {"fullname": "senselab.utils.data_structures.device.DeviceType.MPS", "modulename": "senselab.utils.data_structures.device", "qualname": "DeviceType.MPS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.MPS: &#x27;mps&#x27;&gt;"}, "senselab.utils.data_structures.device.DTYPE_MAP": {"fullname": "senselab.utils.data_structures.device.DTYPE_MAP", "modulename": "senselab.utils.data_structures.device", "qualname": "DTYPE_MAP", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&lt;DeviceType.CPU: &#x27;cpu&#x27;&gt;: torch.float32, &lt;DeviceType.CUDA: &#x27;cuda&#x27;&gt;: torch.float16, &lt;DeviceType.MPS: &#x27;mps&#x27;&gt;: torch.float32}"}, "senselab.utils.data_structures.file": {"fullname": "senselab.utils.data_structures.file", "modulename": "senselab.utils.data_structures.file", "kind": "module", "doc": "<p>This module provides the implementation of file utilities.</p>\n"}, "senselab.utils.data_structures.file.File": {"fullname": "senselab.utils.data_structures.file.File", "modulename": "senselab.utils.data_structures.file", "qualname": "File", "kind": "class", "doc": "<p>This class represents a file.</p>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.file.File.filepath": {"fullname": "senselab.utils.data_structures.file.File.filepath", "modulename": "senselab.utils.data_structures.file", "qualname": "File.filepath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": typing.Annotated[pathlib.Path, PathType(path_type=&#x27;file&#x27;)]"}, "senselab.utils.data_structures.file.File.type": {"fullname": "senselab.utils.data_structures.file.File.type", "modulename": "senselab.utils.data_structures.file", "qualname": "File.type", "kind": "variable", "doc": "<p>Determine the type of the file based on its extension.</p>\n", "annotation": ": str"}, "senselab.utils.data_structures.file.File.validate_filepath": {"fullname": "senselab.utils.data_structures.file.File.validate_filepath", "modulename": "senselab.utils.data_structures.file", "qualname": "File.validate_filepath", "kind": "function", "doc": "<p>Validate the filepath.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Annotated</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">PathType</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Annotated</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">PathType</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.file.File.model_config": {"fullname": "senselab.utils.data_structures.file.File.model_config", "modulename": "senselab.utils.data_structures.file", "qualname": "File.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.file.from_strings_to_files": {"fullname": "senselab.utils.data_structures.file.from_strings_to_files", "modulename": "senselab.utils.data_structures.file", "qualname": "from_strings_to_files", "kind": "function", "doc": "<p>Create a list of <code>File</code> objects from a list of strings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">list_of_files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.file.get_common_directory": {"fullname": "senselab.utils.data_structures.file.get_common_directory", "modulename": "senselab.utils.data_structures.file", "qualname": "get_common_directory", "kind": "function", "doc": "<p>A function to get the common directory from a list of file paths.</p>\n\n<p>Parameters:</p>\n\n<ul>\n<li>files: a list of file paths</li>\n</ul>\n\n<p>Returns:</p>\n\n<ul>\n<li>the common directory among the file paths</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.language": {"fullname": "senselab.utils.data_structures.language", "modulename": "senselab.utils.data_structures.language", "kind": "module", "doc": "<p>This module provides the implementation of language data structures.</p>\n"}, "senselab.utils.data_structures.language.Language": {"fullname": "senselab.utils.data_structures.language.Language", "modulename": "senselab.utils.data_structures.language", "qualname": "Language", "kind": "class", "doc": "<p>Data structure for a language.</p>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.language.Language.language_code": {"fullname": "senselab.utils.data_structures.language.Language.language_code", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.language_code", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.utils.data_structures.language.Language.validate_language": {"fullname": "senselab.utils.data_structures.language.Language.validate_language", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.validate_language", "kind": "function", "doc": "<p>Validate that the language code is valid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.language.Language.alpha_2": {"fullname": "senselab.utils.data_structures.language.Language.alpha_2", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.alpha_2", "kind": "variable", "doc": "<p>Get the ISO 639-2 code for the language.</p>\n", "annotation": ": str"}, "senselab.utils.data_structures.language.Language.alpha_3": {"fullname": "senselab.utils.data_structures.language.Language.alpha_3", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.alpha_3", "kind": "variable", "doc": "<p>Get the ISO 639-3 code for the language.</p>\n", "annotation": ": str"}, "senselab.utils.data_structures.language.Language.name": {"fullname": "senselab.utils.data_structures.language.Language.name", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.name", "kind": "variable", "doc": "<p>Get the name of the language.</p>\n", "annotation": ": str"}, "senselab.utils.data_structures.language.Language.model_config": {"fullname": "senselab.utils.data_structures.language.Language.model_config", "modulename": "senselab.utils.data_structures.language", "qualname": "Language.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.logging": {"fullname": "senselab.utils.data_structures.logging", "modulename": "senselab.utils.data_structures.logging", "kind": "module", "doc": "<p>This module provides utilities for logging.</p>\n"}, "senselab.utils.data_structures.logging.logger": {"fullname": "senselab.utils.data_structures.logging.logger", "modulename": "senselab.utils.data_structures.logging", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger senselab (DEBUG)&gt;"}, "senselab.utils.data_structures.logging.ch": {"fullname": "senselab.utils.data_structures.logging.ch", "modulename": "senselab.utils.data_structures.logging", "qualname": "ch", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StreamHandler (DEBUG)&gt;"}, "senselab.utils.data_structures.logging.formatter": {"fullname": "senselab.utils.data_structures.logging.formatter", "modulename": "senselab.utils.data_structures.logging", "qualname": "formatter", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;logging.Formatter object&gt;"}, "senselab.utils.data_structures.model": {"fullname": "senselab.utils.data_structures.model", "modulename": "senselab.utils.data_structures.model", "kind": "module", "doc": "<p>This module implements some utilities for the model class.</p>\n"}, "senselab.utils.data_structures.model.SenselabModel": {"fullname": "senselab.utils.data_structures.model.SenselabModel", "modulename": "senselab.utils.data_structures.model", "qualname": "SenselabModel", "kind": "class", "doc": "<p>Base configuration for SenselabModel class.</p>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"fullname": "senselab.utils.data_structures.model.SenselabModel.path_or_uri", "modulename": "senselab.utils.data_structures.model", "qualname": "SenselabModel.path_or_uri", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, pathlib.Path]"}, "senselab.utils.data_structures.model.SenselabModel.revision": {"fullname": "senselab.utils.data_structures.model.SenselabModel.revision", "modulename": "senselab.utils.data_structures.model", "qualname": "SenselabModel.revision", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"fullname": "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri", "modulename": "senselab.utils.data_structures.model", "qualname": "SenselabModel.validate_path_or_uri", "kind": "function", "doc": "<p>Validate the path_or_uri.</p>\n\n<p>This check is only for files and not for remote resources.\nIt does check if the path_or_uri is not empty and if it is an existing file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"fullname": "senselab.utils.data_structures.model.SenselabModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "SenselabModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.HFModel": {"fullname": "senselab.utils.data_structures.model.HFModel", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel", "kind": "class", "doc": "<p>HuggingFace model.</p>\n", "bases": "SenselabModel"}, "senselab.utils.data_structures.model.HFModel.revision": {"fullname": "senselab.utils.data_structures.model.HFModel.revision", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel.revision", "kind": "variable", "doc": "<p></p>\n", "annotation": ": typing.Annotated[str, FieldInfo(annotation=NoneType, required=True, validate_default=True)]"}, "senselab.utils.data_structures.model.HFModel.info": {"fullname": "senselab.utils.data_structures.model.HFModel.info", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel.info", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[huggingface_hub.hf_api.ModelInfo]"}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"fullname": "senselab.utils.data_structures.model.HFModel.validate_hf_model_id", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel.validate_hf_model_id", "kind": "function", "doc": "<p>Validate the path_or_uri.</p>\n\n<p>This check is only for remote resources and not for files.\nIt checks if the specified Hugging Face model ID and revision exist in the remote Hub.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"fullname": "senselab.utils.data_structures.model.HFModel.get_model_info", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel.get_model_info", "kind": "function", "doc": "<p>Gets the model info using the HuggingFace API and saves it as a property.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">huggingface_hub</span><span class=\"o\">.</span><span class=\"n\">hf_api</span><span class=\"o\">.</span><span class=\"n\">ModelInfo</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.HFModel.model_config": {"fullname": "senselab.utils.data_structures.model.HFModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "HFModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.SpeechBrainModel": {"fullname": "senselab.utils.data_structures.model.SpeechBrainModel", "modulename": "senselab.utils.data_structures.model", "qualname": "SpeechBrainModel", "kind": "class", "doc": "<p>SpeechBrain model.</p>\n", "bases": "HFModel"}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"fullname": "senselab.utils.data_structures.model.SpeechBrainModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "SpeechBrainModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"fullname": "senselab.utils.data_structures.model.PyannoteAudioModel", "modulename": "senselab.utils.data_structures.model", "qualname": "PyannoteAudioModel", "kind": "class", "doc": "<p>PyannoteAudioModel model.</p>\n", "bases": "HFModel"}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"fullname": "senselab.utils.data_structures.model.PyannoteAudioModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "PyannoteAudioModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"fullname": "senselab.utils.data_structures.model.SentenceTransformersModel", "modulename": "senselab.utils.data_structures.model", "qualname": "SentenceTransformersModel", "kind": "class", "doc": "<p>SentenceTransformersModel model.</p>\n", "bases": "HFModel"}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"fullname": "senselab.utils.data_structures.model.SentenceTransformersModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "SentenceTransformersModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.CoquiTTSModel": {"fullname": "senselab.utils.data_structures.model.CoquiTTSModel", "modulename": "senselab.utils.data_structures.model", "qualname": "CoquiTTSModel", "kind": "class", "doc": "<p>CoquiTTSModel model.</p>\n", "bases": "SenselabModel"}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"fullname": "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri", "modulename": "senselab.utils.data_structures.model", "qualname": "CoquiTTSModel.validate_path_or_uri", "kind": "function", "doc": "<p>Validate the path_or_uri.</p>\n\n<p>This check is only for remote resources and not for files.\nIt checks if the specified torch model ID and revision exist in the remote Hub.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"fullname": "senselab.utils.data_structures.model.CoquiTTSModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "CoquiTTSModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"fullname": "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init", "modulename": "senselab.utils.data_structures.model", "qualname": "CoquiTTSModel.model_post_init", "kind": "function", "doc": "<p>This function is meant to behave like a BaseModel method to initialise private attributes.</p>\n\n<p>It takes context as an argument since that's what pydantic-core passes when calling it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>self:</strong>  The BaseModel instance.</li>\n<li><strong>context:</strong>  The context.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.TorchModel": {"fullname": "senselab.utils.data_structures.model.TorchModel", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchModel", "kind": "class", "doc": "<p>Generic torch model.</p>\n", "bases": "SenselabModel"}, "senselab.utils.data_structures.model.TorchModel.revision": {"fullname": "senselab.utils.data_structures.model.TorchModel.revision", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchModel.revision", "kind": "variable", "doc": "<p></p>\n", "annotation": ": typing.Annotated[str, FieldInfo(annotation=NoneType, required=True, validate_default=True)]"}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"fullname": "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchModel.validate_torch_model_id", "kind": "function", "doc": "<p>Validate the path_or_uri.</p>\n\n<p>This check is only for remote resources and not for files.\nIt checks if the specified torch model ID and revision exist in the remote Hub.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.TorchModel.model_config": {"fullname": "senselab.utils.data_structures.model.TorchModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.TorchAudioModel": {"fullname": "senselab.utils.data_structures.model.TorchAudioModel", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchAudioModel", "kind": "class", "doc": "<p>TorchAudio model.</p>\n", "bases": "SenselabModel"}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"fullname": "senselab.utils.data_structures.model.TorchAudioModel.revision", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchAudioModel.revision", "kind": "variable", "doc": "<p></p>\n", "annotation": ": typing.Annotated[str, FieldInfo(annotation=NoneType, required=True, validate_default=True)]"}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"fullname": "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchAudioModel.validate_torchaudio_model_id", "kind": "function", "doc": "<p>Validate the path_or_uri for torchaudio models.</p>\n\n<p>This check is only for remote resources and not for files.\nIt checks if the specified torchaudio model ID exists.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"fullname": "senselab.utils.data_structures.model.TorchAudioModel.model_config", "modulename": "senselab.utils.data_structures.model", "qualname": "TorchAudioModel.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"fullname": "senselab.utils.data_structures.model.check_torchaudio_model_exists", "modulename": "senselab.utils.data_structures.model", "qualname": "check_torchaudio_model_exists", "kind": "function", "doc": "<p>Private function to check if a torchaudio model exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.is_torch_model": {"fullname": "senselab.utils.data_structures.model.is_torch_model", "modulename": "senselab.utils.data_structures.model", "qualname": "is_torch_model", "kind": "function", "doc": "<p>Check if a file is a torch model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"fullname": "senselab.utils.data_structures.model.check_hf_repo_exists", "modulename": "senselab.utils.data_structures.model", "qualname": "check_hf_repo_exists", "kind": "function", "doc": "<p>Private function to check if a Hugging Face repository exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">repo_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">revision</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;main&#39;</span>, </span><span class=\"param\"><span class=\"n\">repo_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;model&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.model.check_github_repo_exists": {"fullname": "senselab.utils.data_structures.model.check_github_repo_exists", "modulename": "senselab.utils.data_structures.model", "qualname": "check_github_repo_exists", "kind": "function", "doc": "<p>Private function to check if a GitHub repository exists with caching and authentication.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">repo_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">branch</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;main&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.pydra_helpers": {"fullname": "senselab.utils.data_structures.pydra_helpers", "modulename": "senselab.utils.data_structures.pydra_helpers", "kind": "module", "doc": "<p>Functionality for Pydra.</p>\n"}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"fullname": "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike", "modulename": "senselab.utils.data_structures.pydra_helpers", "qualname": "bytes_repr_arraylike", "kind": "function", "doc": "<p>Register a serializer for Torch tensors that allows Pydra to properly use them.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">cache</span><span class=\"p\">:</span> <span class=\"n\">pydra</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"o\">.</span><span class=\"n\">Cache</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"fullname": "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile", "modulename": "senselab.utils.data_structures.pydra_helpers", "qualname": "bytes_repr_smile", "kind": "function", "doc": "<p>Serializer for opensmile.Smile.</p>\n\n<p>This function registers a custom serializer for instances of <code>opensmile.Smile</code>,\nallowing Pydra's caching system to recognize and hash these objects based on\ntheir configurations. By encoding essential attributes to bytes, we ensure that\nidentical configurations produce the same hash, facilitating efficient workflow caching.</p>\n\n<h6 id=\"key-attributes-serialized\">Key Attributes Serialized:</h6>\n\n<blockquote>\n  <ul>\n  <li><code>feature_set</code>: The OpenSMILE feature set, e.g., <code>eGeMAPSv02</code>.</li>\n  <li><code>feature_level</code>: The feature level, e.g., <code>Functionals</code> or <code>LowLevelDescriptors</code>.</li>\n  <li><code>options</code>: A dictionary containing additional configurations for feature extraction.</li>\n  <li><code>logfile</code>: The log file path, if logging is enabled.</li>\n  <li><code>verbose</code>: Boolean indicating verbosity in logging.</li>\n  <li><code>column_names</code>: Column names of features generated by OpenSMILE, represented as an index.</li>\n  <li><code>feature_names</code>: List of specific feature names extracted by OpenSMILE.</li>\n  <li><code>hop_dur</code>: The hop duration for windowed feature extraction, if applicable.</li>\n  <li><code>name</code>: Name identifier for the OpenSMILE instance.</li>\n  <li><code>num_channels</code>: Number of audio channels expected by the instance.</li>\n  <li><code>num_features</code>: Number of features generated for each frame.</li>\n  <li><code>params</code>: Dictionary of internal configuration parameters such as <code>sampling_rate</code>, <code>channels</code>,\n  <code>mixdown</code>, <code>resample</code>, and other settings impacting feature extraction.</li>\n  <li><code>process_func_applies_sliding_window</code>: Indicates if a sliding window is applied in feature extraction.</li>\n  <li><code>win_dur</code>: Duration of each window frame, if applicable.</li>\n  </ul>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>obj (opensmile.Smile):</strong>  The <code>opensmile.Smile</code> instance to be serialized.</li>\n<li><strong>_cache (Cache):</strong>  The Pydra cache object.</li>\n</ul>\n\n<h6 id=\"usage\">Usage:</h6>\n\n<blockquote>\n  <p>This serializer is automatically used by Pydra to calculate a unique hash for <code>opensmile.Smile</code>\n  objects in workflows, ensuring consistent hashing based on the object's configurations. The\n  serializer helps avoid hash collisions in cases where <code>opensmile.Smile</code> instances have the same\n  internal settings but different object IDs in memory.</p>\n</blockquote>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Iterator[bytes]: Byte-encoded representations of each serialized attribute.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">opensmile</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">smile</span><span class=\"o\">.</span><span class=\"n\">Smile</span>,</span><span class=\"param\">\t<span class=\"n\">_cache</span><span class=\"p\">:</span> <span class=\"n\">pydra</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"o\">.</span><span class=\"n\">Cache</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line": {"fullname": "senselab.utils.data_structures.script_line", "modulename": "senselab.utils.data_structures.script_line", "kind": "module", "doc": "<p>This module contains the definition of the ScriptLine class.</p>\n"}, "senselab.utils.data_structures.script_line.ScriptLine": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine", "kind": "class", "doc": "<p>A class to represent a line in a script.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>text (Optional[str]):</strong>  The full text of the line (if provided).</li>\n<li><strong>speaker (Optional[str]):</strong>  The speaker of the line (if provided).</li>\n<li><strong>chunks (Optional[List['ScriptLine']]):</strong>  A list of script lines (if provided).</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.text", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.speaker", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.speaker", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.start", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.end", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.chunks", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.chunks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[senselab.utils.data_structures.script_line.ScriptLine]]"}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.validate_text_and_speaker", "kind": "function", "doc": "<p>Validate that at least one of text or speaker is provided.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.strings_must_be_stripped", "kind": "function", "doc": "<p>Strip the string of leading and trailing whitespace.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v (str):</strong>  The text or speaker of the script line.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The validated text or speaker of the script line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.timestamps_must_be_positive", "kind": "function", "doc": "<p>Validate that the start and end timestamps are positive.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v (float):</strong>  The timestamp of the script line.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The validated timestamp.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">pydantic_core</span><span class=\"o\">.</span><span class=\"n\">core_schema</span><span class=\"o\">.</span><span class=\"n\">ValidationInfo</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.get_text", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.get_text", "kind": "function", "doc": "<p>Get the full text of the script line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[str, None]: The full text of the script line, or None if not provided.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.get_speaker", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.get_speaker", "kind": "function", "doc": "<p>Get the speaker of the script line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[str]: The speaker of the script line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.get_timestamps", "kind": "function", "doc": "<p>Get the start and end timestamps of the script line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[Optional[float], Optional[float]]: The start and end timestamps of the script line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.get_chunks", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.get_chunks", "kind": "function", "doc": "<p>Get the list of chunks in the script line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[List['ScriptLine']]: The list of chunks.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.from_dict", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.from_dict", "kind": "function", "doc": "<p>Create a ScriptLine instance from a dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>d (Dict[str, Any]):</strong>  The dictionary containing the script line data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ScriptLine: An instance of ScriptLine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span>:</span></span>", "funcdef": "def"}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"fullname": "senselab.utils.data_structures.script_line.ScriptLine.model_config", "modulename": "senselab.utils.data_structures.script_line", "qualname": "ScriptLine.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.utils.data_structures.talk_bank_helpers": {"fullname": "senselab.utils.data_structures.talk_bank_helpers", "modulename": "senselab.utils.data_structures.talk_bank_helpers", "kind": "module", "doc": "<p>Functionality for interfacing with TalkBank data.</p>\n"}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"fullname": "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines", "modulename": "senselab.utils.data_structures.talk_bank_helpers", "qualname": "chats_to_script_lines", "kind": "function", "doc": "<p>Connvert .cha files to script lines.</p>\n\n<p>Converts .cha files to script lines using pylangacq's built-in read_chats functionality.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  The path to a .cha file or a directory to recursively scan and use</li>\n<li><strong>**kwargs (Any):</strong>  key-word arguments to be used with pylangacq's read_chats. For further info,\nplease refer to <a href=\"https://pylangacq.org/api.html#pylangacq.read_chat\">https://pylangacq.org/api.html#pylangacq.read_chat</a></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dictionary mapping filepaths (e.g. individual .cha files) to a list of ScriptLines</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks": {"fullname": "senselab.utils.tasks", "modulename": "senselab.utils.tasks", "kind": "module", "doc": "<p>This module provides the API of the senselab utils data structures.</p>\n"}, "senselab.utils.tasks.batching": {"fullname": "senselab.utils.tasks.batching", "modulename": "senselab.utils.tasks.batching", "kind": "module", "doc": "<p>Provides functionality for batch processing.</p>\n"}, "senselab.utils.tasks.batching.batch_list": {"fullname": "senselab.utils.tasks.batching.batch_list", "modulename": "senselab.utils.tasks.batching", "qualname": "batch_list", "kind": "function", "doc": "<p>Splits a list into a specified number of batches.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>items (List[Any]):</strong>  The list of items to be batched.</li>\n<li><strong>n_batches (int):</strong>  The number of batches to divide the list into.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[List[Any]]: A list of lists, where each sublist is a batch of items.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">n_batches</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.cca_cka": {"fullname": "senselab.utils.tasks.cca_cka", "modulename": "senselab.utils.tasks.cca_cka", "kind": "module", "doc": "<p>This module computes CCA and CKA.</p>\n"}, "senselab.utils.tasks.cca_cka.compute_cca": {"fullname": "senselab.utils.tasks.cca_cka.compute_cca", "modulename": "senselab.utils.tasks.cca_cka", "qualname": "compute_cca", "kind": "function", "doc": "<p>Compute the mean squared CCA correlation (R^2_{CCA}).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>features_x (torch.Tensor):</strong>  A num_examples x num_features matrix of features.</li>\n<li><strong>features_y (torch.Tensor):</strong>  A num_examples x num_features matrix of features.</li>\n<li><strong>standardize (bool):</strong>  Whether to perform z-score standardization on input features.\nDefaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The mean squared CCA correlations between X and Y.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">features_x</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">features_y</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">standardize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"fullname": "senselab.utils.tasks.cca_cka.CKAKernelType", "modulename": "senselab.utils.tasks.cca_cka", "qualname": "CKAKernelType", "kind": "class", "doc": "<p>CKA kernel types.</p>\n", "bases": "enum.Enum"}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"fullname": "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR", "modulename": "senselab.utils.tasks.cca_cka", "qualname": "CKAKernelType.LINEAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CKAKernelType.LINEAR: &#x27;linear&#x27;&gt;"}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"fullname": "senselab.utils.tasks.cca_cka.CKAKernelType.RBF", "modulename": "senselab.utils.tasks.cca_cka", "qualname": "CKAKernelType.RBF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CKAKernelType.RBF: &#x27;rbf&#x27;&gt;"}, "senselab.utils.tasks.cca_cka.compute_cka": {"fullname": "senselab.utils.tasks.cca_cka.compute_cka", "modulename": "senselab.utils.tasks.cca_cka", "qualname": "compute_cka", "kind": "function", "doc": "<p>Compute Centered Kernel Alignment (CKA) with enhanced numerical stability.</p>\n\n<p>Guarantees output \u2208 [0,1] through:</p>\n\n<ol>\n<li>Input standardization (prevents scale dominance)</li>\n<li>Gram matrix regularization (avoids ill-conditioning)</li>\n<li>Epsilon-protected division (prevents NaN/\u221e)</li>\n<li>Value clipping (enforces theoretical bounds)</li>\n</ol>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>features_x (torch.Tensor):</strong>  A num_examples x num_features matrix.</li>\n<li><strong>features_y (torch.Tensor):</strong>  A num_examples x num_features matrix.</li>\n<li><strong>kernel (CKAKernelType):</strong>  Kernel type (LINEAR or RBF).</li>\n<li><strong>threshold (float):</strong>  Fraction of median Euclidean distance to use as RBF kernel bandwidth.\nIgnored for LINEAR kernel.</li>\n<li><strong>reg (float):</strong>  Regularization term added to the Gram matrix diagonal for stability.</li>\n<li><strong>standardize (bool):</strong>  Whether to perform z-score standardization on input features.\nDefaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: CKA similarity \u2208 [0,1] where 1 = identical representations.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If an unsupported kernel type is provided.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">features_x</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">features_y</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">cca_cka</span><span class=\"o\">.</span><span class=\"n\">CKAKernelType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">CKAKernelType</span><span class=\"o\">.</span><span class=\"n\">LINEAR</span><span class=\"p\">:</span> <span class=\"s1\">&#39;linear&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">reg</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">standardize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.cosine_similarity": {"fullname": "senselab.utils.tasks.cosine_similarity", "modulename": "senselab.utils.tasks.cosine_similarity", "kind": "module", "doc": "<p>This module provides the implementation of cosine similarity.</p>\n"}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"fullname": "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity", "modulename": "senselab.utils.tasks.cosine_similarity", "qualname": "compute_cosine_similarity", "kind": "function", "doc": "<p>Compute the cosine similarity between two torch tensors.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>tensor1 (Tensor):</strong>  The first input tensor.</li>\n<li><strong>tensor2 (Tensor):</strong>  The second input tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The cosine similarity between the two input tensors.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the input tensors are not of the same shape.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tensor1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tensor2</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"mf\">6.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">tensor1</span><span class=\"p\">,</span> <span class=\"n\">tensor2</span><span class=\"p\">)</span>\n<span class=\"go\">0.9746318461970762</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tensor1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tensor2</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">tensor1</span><span class=\"p\">,</span> <span class=\"n\">tensor2</span><span class=\"p\">)</span>\n<span class=\"go\">-1.0</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>This function assumes the input tensors are 1-dimensional and have the same shape.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor1</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">tensor2</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.cross_correlation": {"fullname": "senselab.utils.tasks.cross_correlation", "modulename": "senselab.utils.tasks.cross_correlation", "kind": "module", "doc": "<p>This module contains functions for computing the normalized cross-correlation between two signals.</p>\n"}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"fullname": "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation", "modulename": "senselab.utils.tasks.cross_correlation", "qualname": "compute_normalized_cross_correlation", "kind": "function", "doc": "<p>Calculate the normalized cross-correlation between two signals.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>signal1 (torch.Tensor):</strong>  The first input signal as a PyTorch tensor.</li>\n<li><strong>signal2 (torch.Tensor):</strong>  The second input signal as a PyTorch tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: The normalized cross-correlation value between the two input signals.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal2</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normalized_cross_correlation</span><span class=\"p\">(</span><span class=\"n\">signal1</span><span class=\"p\">,</span> <span class=\"n\">signal2</span><span class=\"p\">)</span>\n<span class=\"go\">Tensor([0.30151134, 0.51298918, 0.77459667, 0.9486833 , 0.90453403, 0.70710678, 0.43643578])</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>This function assumes the input signals are one-dimensional\n  and contain sufficient elements for meaningful cross-correlation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">signal1</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">signal2</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.dimensionality_reduction": {"fullname": "senselab.utils.tasks.dimensionality_reduction", "modulename": "senselab.utils.tasks.dimensionality_reduction", "kind": "module", "doc": "<p>This module provides the implementation of dimensionality reduction.</p>\n\n<p>Dimensionality reduction is a crucial preprocessing step in many machine learning and data analysis pipelines.\nIt aims to project a high-dimensional dataset into a lower-dimensional subspace while preserving as much of the\nsignificant structure and information as possible. This process is particularly useful for visualization,\nnoise reduction, and improving computational efficiency in downstream tasks.</p>\n\n<p>This module specifically implements three popular dimensionality reduction techniques: Principal Component Analysis\n(PCA), t-Distributed Stochastic Neighbor Embedding (t-SNE), and Uniform Manifold Approximation and Projection (UMAP).</p>\n\n<h3 id=\"task-overview\">Task Overview</h3>\n\n<ul>\n<li>Input: High-dimensional data (typically represented as a matrix or tensor), i.e. A tensor of shape (100, 10)</li>\n<li>Output: Lower-dimensional representation of the input data, i.e. A tensor of shape (100, 2)</li>\n<li>Goal: Preserve important structures or relationships in the data while reducing its dimensionality</li>\n</ul>\n\n<h3 id=\"evaluation-metrics\">Evaluation Metrics</h3>\n\n<p>The effectiveness of dimensionality reduction techniques can be evaluated using several metrics, including but not\nlimited to:</p>\n\n<ul>\n<li><strong>Reconstruction Error</strong>: Measures the difference between the original data and its reduced representation when\nprojected back to the original space. Commonly used for techniques like PCA.</li>\n<li><strong>Trustworthiness</strong>: Assesses how much the model preserves neighbor relationships between the high-dimensional\nspace and the low-dimensional space.</li>\n<li><strong>Continuity</strong>: Evaluates how well the local structure of the data is preserved in the reduced space.</li>\n</ul>\n\n<h3 id=\"supported-models\">Supported models</h3>\n\n<ul>\n<li><p><strong>Principal Component Analysis (PCA)</strong>: PCA is a widely recognized technique in the field of data science\nand machine learning. It excels in linear dimensionality reduction, making it an invaluable tool for\nsimplifying complex datasets. PCA's primary strength lies in its ability to capture the most significant\nvariance within the data. By identifying the principal components that account for the majority of the variation,\nPCA allows researchers and analysts to reduce the dimensionality of their data while retaining its most important\nfeatures. This makes PCA particularly useful for tasks like data visualization and feature extraction.</p></li>\n<li><p><strong>t-Distributed Stochastic Neighbor Embedding (t-SNE)</strong>: t-SNE is primarily utilized as a visualization technique,\nsetting it apart from more general dimensionality reduction methods. It is able to preserve local structures\nwithin data when projecting it into lower-dimensional spaces, typically two or three dimensions. This property\nmakes t-SNE exceptionally good at creating visually interpretable embeddings that can reveal clusters and patterns\nin complex datasets. However, t-SNE is not suitable for tasks that require the preservation of global structures.</p></li>\n<li><p><strong>Uniform Manifold Approximation and Projection (UMAP)</strong>: UMAP is a relatively newer technique that has gained\nsignificant attention due to its versatility and performance. UMAP is able to balance the preservation of both\nglobal and local structures within data. Like t-SNE, UMAP can be used visualizing high-dimensional data in two\nor three dimensions. However, UMAP is also effective as a general-purpose non-linear dimensionality reduction\ntechnique, making it suitable for a wide range of applications where preserving the overall structure of the\ndata in lower dimensions is crucial.</p></li>\n</ul>\n\n<h4 id=\"summary\">Summary:</h4>\n\n<table>\n<thead>\n<tr>\n  <th>Feature</th>\n  <th>PCA</th>\n  <th>t-SNE</th>\n  <th>UMAP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Type</td>\n  <td>Linear</td>\n  <td>Non-linear</td>\n  <td>Non-linear</td>\n</tr>\n<tr>\n  <td>Preserves</td>\n  <td>Global structure (variance)</td>\n  <td>Local structure, cluster patterns</td>\n  <td>Local and global structure to some extent</td>\n</tr>\n<tr>\n  <td>Filters out</td>\n  <td>Noise, less important variance</td>\n  <td>Global structure, distances between clusters</td>\n  <td>Less important variance, noise</td>\n</tr>\n<tr>\n  <td>Best for</td>\n  <td>- Understanding main sources of variation<br>- Data compression<br>- Preprocessing<br>- Linear relationships</td>\n  <td>- Visualizing high-dimensional data<br>- Discovering clusters or patterns<br>- Exploratory data analysis</td>\n  <td>- General-purpose dimensionality reduction<br>- Balancing local and global structure preservation</td>\n</tr>\n<tr>\n  <td>Limitations</td>\n  <td>- Assumes linear relationships<br>- May miss complex patterns</td>\n  <td>- Can distort global structure<br>- Non-deterministic</td>\n  <td>- Sensitive to parameters<br>- Does not completely preserve density</td>\n</tr>\n</tbody>\n</table>\n\n<p>References:</p>\n\n<ul>\n<li>PCA: <a href=\"https://www.nature.com/articles/s43586-022-00184-w\">https://www.nature.com/articles/s43586-022-00184-w</a></li>\n<li>t-SNE: <a href=\"https://jmlr.org/papers/v9/vandermaaten08a.html\">https://jmlr.org/papers/v9/vandermaaten08a.html</a></li>\n<li>UAMP: <a href=\"https://arxiv.org/abs/1802.03426\">https://arxiv.org/abs/1802.03426</a></li>\n</ul>\n\n<h3 id=\"notes\">Notes:</h3>\n\n<p>This module leverages the implementations from scikit-learn for PCA and t-SNE, and the umap-learn library for UMAP.\nThe reduced data is returned as a PyTorch tensor, allowing seamless integration with PyTorch-based workflows.</p>\n\n<p>Learn more:</p>\n\n<ul>\n<li>PCA: <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html\">https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html</a></li>\n<li>t-SNE: <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\">https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html</a></li>\n<li>UMAP: <a href=\"https://umap-learn.readthedocs.io/\">https://umap-learn.readthedocs.io/</a></li>\n</ul>\n"}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"fullname": "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction", "modulename": "senselab.utils.tasks.dimensionality_reduction", "qualname": "compute_dimensionality_reduction", "kind": "function", "doc": "<p>Reduce the dimensionality of the given data using the specified model.</p>\n\n<p>This function provides three methods: PCA, t-SNE, or UMAP. The reduced data is returned as a PyTorch tensor.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (torch.Tensor):</strong>  Input data tensor of shape (n_samples, n_features).</li>\n<li><strong>model ({\"pca\", \"tsne\", \"umap\"}, optional):</strong>  The dimensionality reduction model to use.\nChoices are:\n    \"pca\" for Principal Component Analysis (default),\n    \"tsne\" for t-Distributed Stochastic Neighbor Embedding, or\n    \"umap\" for Uniform Manifold Approximation and Projection</li>\n<li><strong>n_components (int, optional):</strong>  Number of dimensions in the output.\nMust be less than or equal to the number of features in the input data.\nDefaults to 2.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to pass to the chosen model.\n(See below for links to each model's documentation for available parameters.)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: The reduced data tensor of shape (n_samples, n_components).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If an invalid model choice is provided or if n_components is\ngreater than the number of features in the input data or less than 0.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># 100 samples, 10 features</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">torch.Size([100, 10])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reduced_data</span> <span class=\"o\">=</span> <span class=\"n\">compute_dimensionality_reduction</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reduced_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([100, 2])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reduced_data</span> <span class=\"o\">=</span> <span class=\"n\">compute_dimensionality_reduction</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;pca&quot;</span><span class=\"p\">,</span> <span class=\"n\">n_components</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">svd_solver</span><span class=\"o\">=</span><span class=\"s2\">&quot;full&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reduced_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([100, 2])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reduced_data</span> <span class=\"o\">=</span> <span class=\"n\">compute_dimensionality_reduction</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;tsne&quot;</span><span class=\"p\">,</span> <span class=\"n\">n_components</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">perplexity</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reduced_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([100, 3])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reduced_data</span> <span class=\"o\">=</span> <span class=\"n\">compute_dimensionality_reduction</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;umap&quot;</span><span class=\"p\">,</span> <span class=\"n\">n_components</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n<span class=\"go\">    force_approximation_algorithm=False, init=&#39;spectral&#39;, learning_rate=1.0, n_neighbors=5)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reduced_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([100, 4])</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This function uses implementations from scikit-learn for PCA and t-SNE, and the umap-learn\n  library for UMAP. For detailed information about each method and its parameters, please\n  refer to the following documentation:</p>\n  \n  <ul>\n  <li>PCA: <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html\">https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html</a></li>\n  <li>t-SNE: <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\">https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html</a></li>\n  <li>UMAP: <a href=\"https://umap-learn.readthedocs.io/en/latest/api.html\">https://umap-learn.readthedocs.io/en/latest/api.html</a></li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;pca&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tsne&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;umap&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pca&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">n_components</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">object</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.eer": {"fullname": "senselab.utils.tasks.eer", "modulename": "senselab.utils.tasks.eer", "kind": "module", "doc": "<p>This module implements some utilities for computing the Equal Error Rate (EER).</p>\n"}, "senselab.utils.tasks.eer.compute_eer": {"fullname": "senselab.utils.tasks.eer.compute_eer", "modulename": "senselab.utils.tasks.eer", "qualname": "compute_eer", "kind": "function", "doc": "<p>Compute the Equal Error Rate (EER).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>predictions (torch.Tensor):</strong>  A 1D tensor of predictions.</li>\n<li><strong>targets (torch.Tensor):</strong>  A 1D tensor of targets.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[float, float]: The EER and the threshold for the EER.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">predictions</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.input_output": {"fullname": "senselab.utils.tasks.input_output", "modulename": "senselab.utils.tasks.input_output", "kind": "module", "doc": "<p>This module implements some IOTask utilities.</p>\n\n<p>This modules is deprecated and will be removed soon.</p>\n"}, "senselab.utils.tasks.input_output.read_files_from_disk": {"fullname": "senselab.utils.tasks.input_output.read_files_from_disk", "modulename": "senselab.utils.tasks.input_output", "qualname": "read_files_from_disk", "kind": "function", "doc": "<p>Read files from disk and create a Hugging Face <code>Dataset</code> object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"fullname": "senselab.utils.tasks.input_output.read_dataset_from_disk", "modulename": "senselab.utils.tasks.input_output", "qualname": "read_dataset_from_disk", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from disk.</p>\n\n<p>It determines the format based on the file extension or directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">split</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">streaming</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"fullname": "senselab.utils.tasks.input_output.read_dataset_from_hub", "modulename": "senselab.utils.tasks.input_output", "qualname": "read_dataset_from_hub", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from the Hugging Face Hub.</p>\n\n<p>It includes support for private repositories.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">remote_repository</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">revision</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;main&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">split</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"fullname": "senselab.utils.tasks.input_output.push_dataset_to_hub", "modulename": "senselab.utils.tasks.input_output", "qualname": "push_dataset_to_hub", "kind": "function", "doc": "<p>Uploads a Hugging Face <code>Dataset</code> object to the Hugging Face Hub.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">remote_repository</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">revision</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;main&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">split</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"fullname": "senselab.utils.tasks.input_output.save_dataset_to_disk", "modulename": "senselab.utils.tasks.input_output", "qualname": "save_dataset_to_disk", "kind": "function", "doc": "<p>Saves a Hugging Face <code>Dataset</code> object to disk.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;parquet&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.plotting": {"fullname": "senselab.utils.tasks.plotting", "modulename": "senselab.utils.tasks.plotting", "kind": "module", "doc": "<p>This module implements plotting methods for utilities.</p>\n"}, "senselab.utils.tasks.plotting.plot_transcript": {"fullname": "senselab.utils.tasks.plotting.plot_transcript", "modulename": "senselab.utils.tasks.plotting", "qualname": "plot_transcript", "kind": "function", "doc": "<p>Plots the transcript visualization over time.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>transcript (ScriptLine):</strong>  The transcript object containing chunks of text with start and end times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add option to save the plot</li>\n  <li>Add option to choose the size of the Figure</li>\n  <li>Add check if transcript contains chunks with time information</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">transcript</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.plotting.plot_segment": {"fullname": "senselab.utils.tasks.plotting.plot_segment", "modulename": "senselab.utils.tasks.plotting", "qualname": "plot_segment", "kind": "function", "doc": "<p>Plots the segments of the transcript over time.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>segments (List[ScriptLine]):</strong>  The segments object containing segments with start and end times and a label.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add option to save the plot</li>\n  <li>Add option to choose the size of the Figure</li>\n  <li>Add check if transcript contains segments with time information</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">segments</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">script_line</span><span class=\"o\">.</span><span class=\"n\">ScriptLine</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.utils.tasks.pooling": {"fullname": "senselab.utils.tasks.pooling", "modulename": "senselab.utils.tasks.pooling", "kind": "module", "doc": "<p>This module implements pooling methods for torch tensors.</p>\n"}, "senselab.utils.tasks.pooling.pooling": {"fullname": "senselab.utils.tasks.pooling.pooling", "modulename": "senselab.utils.tasks.pooling", "qualname": "pooling", "kind": "function", "doc": "<p>Apply pooling to the input tensor along the specified dimension.</p>\n\n<p>This function provides three pooling methods: mean, min, or max. The pooled tensor is returned as a PyTorch tensor.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (torch.Tensor):</strong>  Input tensor of shape (n_samples, n_features, n_channels).</li>\n<li><strong>pool_type (str, optional):</strong>  The pooling method to use.\nChoices are:\n    * \"mean\" for mean pooling\n    * \"min\" for min pooling\n    * \"max\" for max pooling\nDefaults to \"mean\".</li>\n<li><strong>dimension (int, optional):</strong>  The dimension along which to apply the pooling.\nDefaults to 0.</li>\n<li><strong>keep_dimension (bool, optional):</strong>  Whether to keep the original tensor dimension after pooling.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: The pooled tensor of shape (n_samples, n_features, n_channels).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If an invalid pooling method choice is provided.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>  <span class=\"c1\"># 10 samples, 20 features, 30 channels</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">torch.Size([10, 20, 30])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pooled_data</span> <span class=\"o\">=</span> <span class=\"n\">pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;mean&quot;</span><span class=\"p\">,</span> <span class=\"n\">dimension</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">keep_dimension</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pooled_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([1, 20, 30])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pooled_data</span> <span class=\"o\">=</span> <span class=\"n\">pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;max&quot;</span><span class=\"p\">,</span> <span class=\"n\">dimension</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">keep_dimension</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pooled_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([10, 30])</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pooled_data</span> <span class=\"o\">=</span> <span class=\"n\">pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;min&quot;</span><span class=\"p\">,</span> <span class=\"n\">dimension</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pooled_data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"go\">torch.Size([10, 20])</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">pool_type</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;mean&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;min&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;max&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mean&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dimension</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keep_dimension</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "senselab.video": {"fullname": "senselab.video", "modulename": "senselab.video", "kind": "module", "doc": "<p>This module contains implementation for video processing.</p>\n"}, "senselab.video.data_structures": {"fullname": "senselab.video.data_structures", "modulename": "senselab.video.data_structures", "kind": "module", "doc": "<p>This module provides the API of the senselab video data structures.</p>\n"}, "senselab.video.data_structures.pose": {"fullname": "senselab.video.data_structures.pose", "modulename": "senselab.video.data_structures.pose", "kind": "module", "doc": "<p>Data structures relevant for pose estimation.</p>\n"}, "senselab.video.data_structures.pose.PoseModel": {"fullname": "senselab.video.data_structures.pose.PoseModel", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseModel", "kind": "class", "doc": "<p>Enum representing different pose estimation models.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>MEDIAPIPE (str):</strong>  Enum value for MediaPipe pose estimation.</li>\n<li><strong>YOLO (str):</strong>  Enum value for YOLO pose estimation.</li>\n</ul>\n", "bases": "builtins.str, enum.Enum"}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"fullname": "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseModel.MEDIAPIPE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PoseModel.MEDIAPIPE: &#x27;mp&#x27;&gt;"}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"fullname": "senselab.video.data_structures.pose.PoseModel.YOLO", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseModel.YOLO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PoseModel.YOLO: &#x27;yolo&#x27;&gt;"}, "senselab.video.data_structures.pose.PoseLandmark": {"fullname": "senselab.video.data_structures.pose.PoseLandmark", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseLandmark", "kind": "class", "doc": "<p>Abstract base class for representing pose landmarks.</p>\n\n<h6 id=\"methods\">Methods:</h6>\n\n<blockquote>\n  <p>as_list() -> List[float]:\n      Convert the landmark data to a list of coordinates.</p>\n</blockquote>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"fullname": "senselab.video.data_structures.pose.PoseLandmark.as_list", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseLandmark.as_list", "kind": "function", "doc": "<p>Convert the landmark data to a list of floating-point values.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[float]: List of landmark data as floats.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"fullname": "senselab.video.data_structures.pose.PoseLandmark.model_config", "modulename": "senselab.video.data_structures.pose", "qualname": "PoseLandmark.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark", "kind": "class", "doc": "<p>Represents a pose landmark detected by MediaPipe.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>x (float):</strong>  X-coordinate of the landmark.</li>\n<li><strong>y (float):</strong>  Y-coordinate of the landmark.</li>\n<li><strong>z (float):</strong>  Z-coordinate of the landmark.</li>\n<li><strong>visibility (float):</strong>  Probability of the landmark being visible [0, 1].</li>\n</ul>\n", "bases": "PoseLandmark"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.x", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.y", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.z", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.visibility", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.as_list", "kind": "function", "doc": "<p>Convert the landmark data to a list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[float]: [x, y, z, visibility] values.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"fullname": "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config", "modulename": "senselab.video.data_structures.pose", "qualname": "MediaPipePoseLandmark.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark", "kind": "class", "doc": "<p>Represents a pose keypoint detected by YOLO.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>x (float):</strong>  X-coordinate of the keypoint.</li>\n<li><strong>y (float):</strong>  Y-coordinate of the keypoint.</li>\n<li><strong>confidence (float):</strong>  Confidence score of the detected keypoint [0, 1].</li>\n</ul>\n", "bases": "PoseLandmark"}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark.x", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark.y", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark.confidence", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark.as_list", "kind": "function", "doc": "<p>Convert the keypoint data to a list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[float]: [x, y, confidence] values.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"fullname": "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config", "modulename": "senselab.video.data_structures.pose", "qualname": "YOLOPoseLandmark.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.video.data_structures.pose.IndividualPose": {"fullname": "senselab.video.data_structures.pose.IndividualPose", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose", "kind": "class", "doc": "<p>Data structure for the estimated pose of a single individual in an image.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>individual_index (int):</strong>  Index of the individual in the detection result.</li>\n<li><strong>normalized_landmarks (Dict[str, PoseLandmark]):</strong>  Dictionary of body landmarks with normalized coordinates.</li>\n<li><strong>world_landmarks (Optional[Dict[str, PoseLandmark]]):</strong>  Dictionary of body landmarks with real-world coordinates.</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"fullname": "senselab.video.data_structures.pose.IndividualPose.individual_index", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose.individual_index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"fullname": "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose.normalized_landmarks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, senselab.video.data_structures.pose.PoseLandmark]"}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"fullname": "senselab.video.data_structures.pose.IndividualPose.world_landmarks", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose.world_landmarks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Dict[str, senselab.video.data_structures.pose.PoseLandmark]]"}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"fullname": "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose.get_landmark_coordinates", "kind": "function", "doc": "<p>Retrieve coordinates for a specific landmark.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>landmark (str):</strong>  Name of the landmark (e.g., \"right_ankle\").</li>\n<li><strong>world (bool):</strong>  Whether to retrieve world coordinates. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>PoseLandmark: Object containing information on the specified landmark.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the specified landmark is not found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">landmark</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">world</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">PoseLandmark</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"fullname": "senselab.video.data_structures.pose.IndividualPose.model_config", "modulename": "senselab.video.data_structures.pose", "qualname": "IndividualPose.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "senselab.video.data_structures.pose.ImagePose": {"fullname": "senselab.video.data_structures.pose.ImagePose", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose", "kind": "class", "doc": "<p>Data structure for storing estimated poses of multiple individuals in an image.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>model (PoseModel):</strong>  The model used for pose estimation.</li>\n<li><strong>image (np.ndarray):</strong>  Original image as a NumPy array.</li>\n<li><strong>individuals (List[IndividualPose]):</strong>  List of IndividualPose objects for each detected individual.</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.video.data_structures.pose.ImagePose.model_config": {"fullname": "senselab.video.data_structures.pose.ImagePose.model_config", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;arbitrary_types_allowed&#x27;: True}"}, "senselab.video.data_structures.pose.ImagePose.model": {"fullname": "senselab.video.data_structures.pose.ImagePose.model", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": senselab.video.data_structures.pose.PoseModel"}, "senselab.video.data_structures.pose.ImagePose.image": {"fullname": "senselab.video.data_structures.pose.ImagePose.image", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.image", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "senselab.video.data_structures.pose.ImagePose.individuals": {"fullname": "senselab.video.data_structures.pose.ImagePose.individuals", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.individuals", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[senselab.video.data_structures.pose.IndividualPose]"}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"fullname": "senselab.video.data_structures.pose.ImagePose.validate_image", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.validate_image", "kind": "function", "doc": "<p>Ensures image is a 3D numpy array with three color channels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"fullname": "senselab.video.data_structures.pose.ImagePose.get_individual", "modulename": "senselab.video.data_structures.pose", "qualname": "ImagePose.get_individual", "kind": "function", "doc": "<p>Retrieve a specific individual's pose data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>individual_index (int):</strong>  Index of the individual to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>IndividualPose: Pose data for the specified individual.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the index is invalid or no individuals are detected.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">individual_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">IndividualPose</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.video": {"fullname": "senselab.video.data_structures.video", "modulename": "senselab.video.data_structures.video", "kind": "module", "doc": "<p>Data structures relevant for video tasks and pipelines.</p>\n"}, "senselab.video.data_structures.video.Video": {"fullname": "senselab.video.data_structures.video.Video", "modulename": "senselab.video.data_structures.video", "qualname": "Video", "kind": "class", "doc": "<p>Pydantic model for video and its corresponding metadata.</p>\n\n<p>This class supports both pre-loaded video data (frames and frame_rate) and lazy-loading from a filepath.\nThe associated audio is kept as a private attribute.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>metadata:</strong>  A dictionary with additional video-related metadata.</li>\n</ul>\n", "bases": "pydantic.main.BaseModel"}, "senselab.video.data_structures.video.Video.__init__": {"fullname": "senselab.video.data_structures.video.Video.__init__", "modulename": "senselab.video.data_structures.video", "qualname": "Video.__init__", "kind": "function", "doc": "<p>Initialize a Video instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>frames (optional):</strong>  Pre-loaded video frames as a 4D tensor (T, H, W, C) or a list of frames.</li>\n<li><strong>frame_rate (optional):</strong>  The corresponding frame rate (fps). Required if frames is provided.</li>\n<li><strong>filepath (optional):</strong>  Path to the video file for lazy loading.</li>\n<li><strong>metadata (optional):</strong>  Metadata dictionary.</li>\n<li><strong>audio (optional):</strong>  Associated audio data.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If neither frames nor a valid filepath is provided, or if frames is provided without frame_rate.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "senselab.video.data_structures.video.Video.metadata": {"fullname": "senselab.video.data_structures.video.Video.metadata", "modulename": "senselab.video.data_structures.video", "qualname": "Video.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, "senselab.video.data_structures.video.Video.model_config": {"fullname": "senselab.video.data_structures.video.Video.model_config", "modulename": "senselab.video.data_structures.video", "qualname": "Video.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;arbitrary_types_allowed&#x27;: True}"}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"fullname": "senselab.video.data_structures.video.Video.convert_to_tensor", "modulename": "senselab.video.data_structures.video", "qualname": "Video.convert_to_tensor", "kind": "function", "doc": "<p>Converts input video frames to a 4D torch.Tensor of shape (T, H, W, C).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v:</strong>  Video frames provided as a list of frames or a torch.Tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A torch.Tensor representation of the video frames.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the provided input does not conform to the expected types or shapes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">PIL</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">]],</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.video.Video.frames": {"fullname": "senselab.video.data_structures.video.Video.frames", "modulename": "senselab.video.data_structures.video", "qualname": "Video.frames", "kind": "variable", "doc": "<p>Returns the video frames as a 4D torch.Tensor with shape (T, H, W, C).</p>\n\n<p>Triggers lazy loading from the file path if the frames have not been loaded yet.</p>\n", "annotation": ": torch.Tensor"}, "senselab.video.data_structures.video.Video.frame_rate": {"fullname": "senselab.video.data_structures.video.Video.frame_rate", "modulename": "senselab.video.data_structures.video", "qualname": "Video.frame_rate", "kind": "variable", "doc": "<p>Returns the frame rate (fps) of the video.</p>\n\n<p>Triggers lazy loading from the file path if not already loaded.</p>\n", "annotation": ": float"}, "senselab.video.data_structures.video.Video.audio": {"fullname": "senselab.video.data_structures.video.Video.audio", "modulename": "senselab.video.data_structures.video", "qualname": "Video.audio", "kind": "variable", "doc": "<p>Returns the associated audio data as a private Audio instance.</p>\n", "annotation": ": Optional[senselab.audio.data_structures.audio.Audio]"}, "senselab.video.data_structures.video.Video.generate_id": {"fullname": "senselab.video.data_structures.video.Video.generate_id", "modulename": "senselab.video.data_structures.video", "qualname": "Video.generate_id", "kind": "function", "doc": "<p>Generate a unique identifier for the Video instance.</p>\n\n<p>The identifier is computed as an MD5-based UUID derived from the video frames and frame rate.\nIf a private Audio object exists, its generate_id() is incorporated.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string unique identifier.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.video.data_structures.video.Video.model_post_init": {"fullname": "senselab.video.data_structures.video.Video.model_post_init", "modulename": "senselab.video.data_structures.video", "qualname": "Video.model_post_init", "kind": "function", "doc": "<p>This function is meant to behave like a BaseModel method to initialise private attributes.</p>\n\n<p>It takes context as an argument since that's what pydantic-core passes when calling it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>self:</strong>  The BaseModel instance.</li>\n<li><strong>context:</strong>  The context.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks": {"fullname": "senselab.video.tasks", "modulename": "senselab.video.tasks", "kind": "module", "doc": "<p>Tasks for video processing.</p>\n"}, "senselab.video.tasks.input_output": {"fullname": "senselab.video.tasks.input_output", "modulename": "senselab.video.tasks.input_output", "kind": "module", "doc": "<p>This module implements the video IOTask.</p>\n"}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"fullname": "senselab.video.tasks.input_output.extract_audios_from_local_videos", "modulename": "senselab.video.tasks.input_output", "qualname": "extract_audios_from_local_videos", "kind": "function", "doc": "<p>Read files from disk and create a Hugging Face <code>Dataset</code> object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">audio_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;wav&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">acodec</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pcm_s16le&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation": {"fullname": "senselab.video.tasks.pose_estimation", "modulename": "senselab.video.tasks.pose_estimation", "kind": "module", "doc": "<h1 id=\"pose-estimation\">Pose Estimation</h1>\n\n<p><a href=\"https://github.com/sensein/senselab/blob/main/tutorials/video/pose_estimation.ipynb\"><img src=\"https://img.shields.io/badge/Tutorial-Click%20Here-blue?style=for-the-badge\" alt=\"Tutorial\" /></a></p>\n\n<h2 id=\"task-overview\">Task Overview</h2>\n\n<p>Pose estimation is the process of detecting and tracking key points on a human body or other objects in images or videos. These key points represent joints, limbs, or other significant regions of interest. Pose estimation is widely used in applications such as motion analysis, sports performance tracking, gesture recognition, and augmented reality.</p>\n\n<p><code>senselab</code> supports pose estimation using <strong>MediaPipe</strong> and <strong>YOLO</strong>, offering models with varying accuracy, speed, and computational requirements.</p>\n\n<hr />\n\n<h2 id=\"models\">Models</h2>\n\n<h3 id=\"mediapipehttpsaigoogledevedgemediapipesolutionsvisionpose_landmarker\"><a href=\"https://ai.google.dev/edge/mediapipe/solutions/vision/pose_landmarker\">MediaPipe</a></h3>\n\n<p>MediaPipe provides three pose estimation models:</p>\n\n<ul>\n<li><strong>Lite</strong>: Optimized for mobile devices with low latency requirements.</li>\n<li><strong>Full</strong>: Balanced between accuracy and efficiency, suitable for most applications.</li>\n<li><strong>Heavy</strong>: High-accuracy model designed for tasks where precision is critical but latency is less of a concern.</li>\n</ul>\n\n<p>These models detect 33 key points across the body, including joints, eyes, ears, and the nose.</p>\n\n<h3 id=\"yolo\">YOLO</h3>\n\n<p>YOLO-based pose estimation models are efficient and capable of detecting key points in real-time. Supported variants include:</p>\n\n<ul>\n<li><strong><a href=\"https://docs.ultralytics.com/models/yolov8/\">YOLOv8</a></strong> and <strong><a href=\"https://docs.ultralytics.com/models/yolo11/#what-tasks-can-yolo11-models-perform\">YOLOv11</a></strong> families, with increasing model sizes (e.g., <code>8n</code>, <code>8s</code>, <code>11n</code>, <code>11l</code>) to balance speed and accuracy.</li>\n</ul>\n\n<p>These models detect 17 key points, including joints like shoulders, elbows, knees, and ankles.</p>\n\n<h2 id=\"evaluation\">Evaluation</h2>\n\n<h3 id=\"metrics\">Metrics</h3>\n\n<ul>\n<li><strong>Percentage of Correct Parts (PCP)</strong>: Evaluates limb detection accuracy. A limb is considered correct if the predicted key points are within half the limb\u2019s length from the true points.</li>\n<li><strong>Percentage of Correct Keypoints (PCK)</strong>: Considers a key point correct if the distance between the true and predicted points is within a threshold (e.g., 0.2 times the person\u2019s head bone length).</li>\n<li><strong>Percentage of Detected Joints (PDJ)</strong>: Evaluates joints as correct if the true and predicted points are within a fraction of the torso\u2019s diameter.</li>\n<li><strong>Object Keypoint Similarity (OKS)</strong>: Measures the normalized distance between true and predicted key points, scaled by the person\u2019s size. Computes the mean Average Precision (mAP) for all key points in the frame.</li>\n</ul>\n\n<h3 id=\"benchmark-datasets\">Benchmark Datasets</h3>\n\n<ul>\n<li><strong><a href=\"https://cocodataset.org/#keypoints-2020\">COCO Keypoints</a></strong>: Annotated key points for human poses in diverse scenes.</li>\n<li><strong><a href=\"http://human-pose.mpi-inf.mpg.de/\">MPII Human Pose</a></strong>: Dataset focused on human pose estimation.</li>\n<li><strong><a href=\"https://github.com/axelcarlier/lsp\">Leeds Sports Pose Extended</a></strong>: 10,000 sports images with up to 14 human joint annotations.</li>\n</ul>\n"}, "senselab.video.tasks.pose_estimation.api": {"fullname": "senselab.video.tasks.pose_estimation.api", "modulename": "senselab.video.tasks.pose_estimation.api", "kind": "module", "doc": "<p>This module provides the API for pose estimation tasks.</p>\n"}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"fullname": "senselab.video.tasks.pose_estimation.api.estimate_pose", "modulename": "senselab.video.tasks.pose_estimation.api", "qualname": "estimate_pose", "kind": "function", "doc": "<p>Estimate poses in an image using the specified model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image_path (str):</strong>  Path to the input image file.</li>\n<li><strong>model (str):</strong>  The model to use for pose estimation. Options are 'mediapipe' or 'yolo'.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for model-specific configurations:\n<ul>\n<li>For MediaPipe:\n<ul>\n<li>model_type (str): Type of MediaPipe model ('lite', 'full', 'heavy'). Defaults to 'lite'.</li>\n<li>num_individuals (int): Maximum number of individuals to detect. Defaults to 1.</li>\n</ul></li>\n<li>For YOLO:\n<ul>\n<li>model_type (str): Type of YOLO model ('8n', '8s', '11l', etc.). Defaults to '8n'.</li>\n</ul></li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing the estimated poses.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If an unsupported model or invalid arguments are provided.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">estimate_pose</span><span class=\"p\">(</span><span class=\"s2\">&quot;image.jpg&quot;</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;mediapipe&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;full&quot;</span><span class=\"p\">,</span> <span class=\"n\">num_individuals</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">estimate_pose</span><span class=\"p\">(</span><span class=\"s2\">&quot;image.jpg&quot;</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;yolo&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;8n&quot;</span><span class=\"p\">)</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"fullname": "senselab.video.tasks.pose_estimation.api.visualize_pose", "modulename": "senselab.video.tasks.pose_estimation.api", "qualname": "visualize_pose", "kind": "function", "doc": "<p>Visualize detected poses by drawing landmarks and connections on the image.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pose_image (ImagePose):</strong>  The pose estimation result containing detected poses.</li>\n<li><strong>output_path (str):</strong>  Optional path to save the visualized image. If provided, saves the\nannotated image to this location.</li>\n<li><strong>plot (bool):</strong>  Whether to display the annotated image using matplotlib.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: The input image with pose landmarks and connections drawn on it.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pose_image</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plot</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate": {"fullname": "senselab.video.tasks.pose_estimation.estimate", "modulename": "senselab.video.tasks.pose_estimation.estimate", "kind": "module", "doc": "<p>This module implements pose estimation functionality.</p>\n"}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"fullname": "senselab.video.tasks.pose_estimation.estimate.PoseEstimator", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "PoseEstimator", "kind": "class", "doc": "<p>Abstract base class for pose estimation models.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>model_path (str):</strong>  Path to the PoesEstimator model file.</li>\n</ul>\n\n<h6 id=\"methods\">Methods:</h6>\n\n<blockquote>\n  <p>estimate(image): Estimate poses in the given image.\n  estimate_from_path(image_path): Estimate poses in the image loaded from the specified path.</p>\n</blockquote>\n", "bases": "abc.ABC"}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"fullname": "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "PoseEstimator.__init__", "kind": "function", "doc": "<p>Initialize the PoseEstimator.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model_type (str):</strong>  Type of model to use.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "PoseEstimator.model_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"fullname": "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "PoseEstimator.estimate", "kind": "function", "doc": "<p>Estimate poses in an image.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image (np.ndarray):</strong>  Input image in RGB format.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "PoseEstimator.estimate_from_path", "kind": "function", "doc": "<p>Estimate poses in an image loaded from a file path.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image_path (str):</strong>  Path to the input image file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator", "kind": "class", "doc": "<p>MediaPipe implementation of pose estimation.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>model_path (str):</strong>  Path to the MediaPipe model file.</li>\n<li><strong>num_individuals (int):</strong>  Number of individuals to detect.</li>\n</ul>\n", "bases": "PoseEstimator"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.__init__", "kind": "function", "doc": "<p>Initialize the MediaPipePoseEstimator.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model_type (str):</strong>  Type of MediaPipe model to use ('lite', 'full', 'heavy').</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lite&#39;</span></span>)</span>"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.model_path", "kind": "variable", "doc": "<p></p>\n"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.num_individuals", "kind": "variable", "doc": "<p></p>\n"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.detector", "kind": "function", "doc": "<p>Initialization of the MediaPipe detector.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_individuals (int):</strong>  Maximum number of individuals to detect. Defaults to 1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>vision.PoseLandmarker: A MediaPipe pose landmarker object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">num_individuals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mediapipe</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">python</span><span class=\"o\">.</span><span class=\"n\">vision</span><span class=\"o\">.</span><span class=\"n\">pose_landmarker</span><span class=\"o\">.</span><span class=\"n\">PoseLandmarker</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.estimate", "kind": "function", "doc": "<p>Estimate poses using MediaPipe.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image (np.ndarray):</strong>  Input image in RGB format.</li>\n<li><strong>num_individuals (int):</strong>  Maximum number of individuals to detect. Defaults to 1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If <code>num_individuals</code> is not a positive integer.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">num_individuals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.estimate_from_path", "kind": "function", "doc": "<p>Estimate poses in image from file path using MediaPipe.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image_path (str):</strong>  Path to the input image file.</li>\n<li><strong>num_individuals (int):</strong>  Maximum number of individuals to detect. Defaults to 1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>FileNotFoundError:</strong>  If the specified image file does not exist.</li>\n<li><strong>ValueError:</strong>  If <code>num_individuals</code> is not a positive integer.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_individuals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"fullname": "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "MediaPipePoseEstimator.extract_landmarks", "kind": "function", "doc": "<p>Extract normalized and world landmarks from the detection result.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>detection_result (vision.PoseLandmarkerResult):</strong>  The result from the MediaPipe pose detector.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[IndividualPose]: A list of <code>IndividualPose</code> objects representing detected individuals.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">detection_result</span><span class=\"p\">:</span> <span class=\"n\">mediapipe</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">python</span><span class=\"o\">.</span><span class=\"n\">vision</span><span class=\"o\">.</span><span class=\"n\">pose_landmarker</span><span class=\"o\">.</span><span class=\"n\">PoseLandmarkerResult</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">IndividualPose</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"fullname": "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "YOLOPoseEstimator", "kind": "class", "doc": "<p>YOLO implementation of pose estimation.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>model_path (str):</strong>  Path to the YOLO model file.</li>\n</ul>\n", "bases": "PoseEstimator"}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"fullname": "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "YOLOPoseEstimator.__init__", "kind": "function", "doc": "<p>Initialize the YOLOPoseEstimator.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model_type (str):</strong>  Type of YOLO model to use (e.g. '8n', '11p', '11s').</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;8n&#39;</span></span>)</span>"}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "YOLOPoseEstimator.model_path", "kind": "variable", "doc": "<p></p>\n"}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"fullname": "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "YOLOPoseEstimator.estimate", "kind": "function", "doc": "<p>Estimate poses using YOLO.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image (np.ndarray):</strong>  Input image in RGB format.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"fullname": "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path", "modulename": "senselab.video.tasks.pose_estimation.estimate", "qualname": "YOLOPoseEstimator.estimate_from_path", "kind": "function", "doc": "<p>Estimate poses in image from file path using YOLO.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>image_path (str):</strong>  Path to the input image file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ImagePose: An object containing detected poses and metadata.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>FileNotFoundError:</strong>  If the specified image file does not exist.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.utils": {"fullname": "senselab.video.tasks.pose_estimation.utils", "modulename": "senselab.video.tasks.pose_estimation.utils", "kind": "module", "doc": "<p>This module provides utilities for pose estimation.</p>\n"}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"fullname": "senselab.video.tasks.pose_estimation.utils.MODEL_PATH", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "MODEL_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;src/senselab/video/tasks/pose_estimation/models&#x27;"}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"fullname": "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "SENSELAB_KEYPOINT_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;Nose&#x27;, 1: &#x27;Left Eye Inner&#x27;, 2: &#x27;Left Eye&#x27;, 3: &#x27;Left Eye Outer&#x27;, 4: &#x27;Right Eye Inner&#x27;, 5: &#x27;Right Eye&#x27;, 6: &#x27;Right Eye Outer&#x27;, 7: &#x27;Left Ear&#x27;, 8: &#x27;Right Ear&#x27;, 9: &#x27;Mouth Left&#x27;, 10: &#x27;Mouth Right&#x27;, 11: &#x27;Left Shoulder&#x27;, 12: &#x27;Right Shoulder&#x27;, 13: &#x27;Left Elbow&#x27;, 14: &#x27;Right Elbow&#x27;, 15: &#x27;Left Wrist&#x27;, 16: &#x27;Right Wrist&#x27;, 17: &#x27;Left Pinky&#x27;, 18: &#x27;Right Pinky&#x27;, 19: &#x27;Left Index&#x27;, 20: &#x27;Right Index&#x27;, 21: &#x27;Left Thumb&#x27;, 22: &#x27;Right Thumb&#x27;, 23: &#x27;Left Hip&#x27;, 24: &#x27;Right Hip&#x27;, 25: &#x27;Left Knee&#x27;, 26: &#x27;Right Knee&#x27;, 27: &#x27;Left Ankle&#x27;, 28: &#x27;Right Ankle&#x27;, 29: &#x27;Left Heel&#x27;, 30: &#x27;Right Heel&#x27;, 31: &#x27;Left Foot Index&#x27;, 32: &#x27;Right Foot Index&#x27;}"}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"fullname": "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "YOLO_KEYPOINT_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;Nose&#x27;, 1: &#x27;Left Eye&#x27;, 2: &#x27;Right Eye&#x27;, 3: &#x27;Left Ear&#x27;, 4: &#x27;Right Ear&#x27;, 5: &#x27;Left Shoulder&#x27;, 6: &#x27;Right Shoulder&#x27;, 7: &#x27;Left Elbow&#x27;, 8: &#x27;Right Elbow&#x27;, 9: &#x27;Left Wrist&#x27;, 10: &#x27;Right Wrist&#x27;, 11: &#x27;Left Hip&#x27;, 12: &#x27;Right Hip&#x27;, 13: &#x27;Left Knee&#x27;, 14: &#x27;Right Knee&#x27;, 15: &#x27;Left Ankle&#x27;, 16: &#x27;Right Ankle&#x27;}"}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"fullname": "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "MEDIAPIPE_KEYPOINT_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;Nose&#x27;, 1: &#x27;Left Eye Inner&#x27;, 2: &#x27;Left Eye&#x27;, 3: &#x27;Left Eye Outer&#x27;, 4: &#x27;Right Eye Inner&#x27;, 5: &#x27;Right Eye&#x27;, 6: &#x27;Right Eye Outer&#x27;, 7: &#x27;Left Ear&#x27;, 8: &#x27;Right Ear&#x27;, 9: &#x27;Mouth Left&#x27;, 10: &#x27;Mouth Right&#x27;, 11: &#x27;Left Shoulder&#x27;, 12: &#x27;Right Shoulder&#x27;, 13: &#x27;Left Elbow&#x27;, 14: &#x27;Right Elbow&#x27;, 15: &#x27;Left Wrist&#x27;, 16: &#x27;Right Wrist&#x27;, 17: &#x27;Left Pinky&#x27;, 18: &#x27;Right Pinky&#x27;, 19: &#x27;Left Index&#x27;, 20: &#x27;Right Index&#x27;, 21: &#x27;Left Thumb&#x27;, 22: &#x27;Right Thumb&#x27;, 23: &#x27;Left Hip&#x27;, 24: &#x27;Right Hip&#x27;, 25: &#x27;Left Knee&#x27;, 26: &#x27;Right Knee&#x27;, 27: &#x27;Left Ankle&#x27;, 28: &#x27;Right Ankle&#x27;, 29: &#x27;Left Heel&#x27;, 30: &#x27;Right Heel&#x27;, 31: &#x27;Left Foot Index&#x27;, 32: &#x27;Right Foot Index&#x27;}"}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"fullname": "senselab.video.tasks.pose_estimation.utils.MODELS", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "MODELS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;mediapipe&#x27;: {&#x27;lite&#x27;: &#x27;https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task&#x27;, &#x27;full&#x27;: &#x27;https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_full/float16/1/pose_landmarker_full.task&#x27;, &#x27;heavy&#x27;: &#x27;https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_heavy/float16/1/pose_landmarker_heavy.task&#x27;}, &#x27;yolo&#x27;: {&#x27;8n&#x27;: &#x27;yolov8n-pose.pt&#x27;, &#x27;8s&#x27;: &#x27;yolov8s-pose.pt&#x27;, &#x27;8m&#x27;: &#x27;yolov8m-pose.pt&#x27;, &#x27;8l&#x27;: &#x27;yolov8l-pose.pt&#x27;, &#x27;8x&#x27;: &#x27;yolov8x-pose.pt&#x27;, &#x27;11n&#x27;: &#x27;yolo11n-pose.pt&#x27;, &#x27;11s&#x27;: &#x27;yolo11s-pose.pt&#x27;, &#x27;11m&#x27;: &#x27;yolo11m-pose.pt&#x27;, &#x27;11l&#x27;: &#x27;yolo11l-pose.pt&#x27;, &#x27;11x&#x27;: &#x27;yolo11x-pose.pt&#x27;}}"}, "senselab.video.tasks.pose_estimation.utils.get_model": {"fullname": "senselab.video.tasks.pose_estimation.utils.get_model", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "get_model", "kind": "function", "doc": "<p>Retrieve the model file or name, depending on the model type.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (str):</strong>  The model category ('mediapipe' or 'yolo').</li>\n<li><strong>model_type (str):</strong>  The specific model type (e.g., 'lite', 'full', '8n').</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The local path to the MediaPipe model file or the YOLO model name.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If an invalid model type is provided.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">model_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.utils.download_model": {"fullname": "senselab.video.tasks.pose_estimation.utils.download_model", "modulename": "senselab.video.tasks.pose_estimation.utils", "qualname": "download_model", "kind": "function", "doc": "<p>Download a model file from a URL if it doesn't already exist locally.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url (str):</strong>  The URL of the model file.</li>\n<li><strong>save_path (str):</strong>  The local path to save the model file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "senselab.video.tasks.pose_estimation.visualization": {"fullname": "senselab.video.tasks.pose_estimation.visualization", "modulename": "senselab.video.tasks.pose_estimation.visualization", "kind": "module", "doc": "<p>This module implements visualization for the Pose Estimation task.</p>\n"}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"fullname": "senselab.video.tasks.pose_estimation.visualization.visualize", "modulename": "senselab.video.tasks.pose_estimation.visualization", "qualname": "visualize", "kind": "function", "doc": "<p>Visualize detected poses by drawing landmarks and connections on the image.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pose_image (ImagePose):</strong>  The pose estimation result containing detected poses.</li>\n<li><strong>output_path (str):</strong>  Optional path to save the visualized image. If provided, saves the\nannotated image to this location.</li>\n<li><strong>plot (bool):</strong>  Whether to display the annotated image using matplotlib.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: The input image with pose landmarks and connections drawn on it.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pose_image</span><span class=\"p\">:</span> <span class=\"n\">senselab</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">ImagePose</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plot</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"senselab": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 881}, "senselab.audio": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.data_structures": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.data_structures.audio": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "senselab.audio.data_structures.audio.Audio": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 62}, "senselab.audio.data_structures.audio.Audio.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 179}, "senselab.audio.data_structures.audio.Audio.metadata": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.data_structures.audio.Audio.model_config": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 18}, "senselab.audio.data_structures.audio.Audio.waveform": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 61}, "senselab.audio.data_structures.audio.Audio.filepath": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 12}, "senselab.audio.data_structures.audio.Audio.generate_id": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 46}, "senselab.audio.data_structures.audio.Audio.window_generator": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 80}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 197, "bases": 0, "doc": 175}, "senselab.audio.data_structures.audio.Audio.from_stream": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 83}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 60}, "senselab.audio.data_structures.audio.batch_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 125}, "senselab.audio.data_structures.audio.unbatch_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 119}, "senselab.audio.data_structures.audio_classification_result": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 50}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 16}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 42}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 42}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 37}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 12}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 13}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 14}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 13}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 15}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 75}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"qualname": 3, "fullname": 10, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.audio.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "senselab.audio.tasks.classification": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 537}, "senselab.audio.tasks.classification.api": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 59}, "senselab.audio.tasks.classification.api.classify_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 166, "bases": 0, "doc": 116}, "senselab.audio.tasks.classification.huggingface": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 62}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 257, "bases": 0, "doc": 179}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1671}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 60}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 166, "bases": 0, "doc": 127}, "senselab.audio.tasks.data_augmentation": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 398}, "senselab.audio.tasks.data_augmentation.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 173, "bases": 0, "doc": 110}, "senselab.audio.tasks.data_augmentation.audiomentations": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 72}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 146, "bases": 0, "doc": 226}, "senselab.audio.tasks.features_extraction": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 2666}, "senselab.audio.tasks.features_extraction.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 61}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 202, "bases": 0, "doc": 3773}, "senselab.audio.tasks.features_extraction.opensmile": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 48}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 59}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 208, "bases": 0, "doc": 175}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 49}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 99}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 345}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 364}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 145, "bases": 0, "doc": 388}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 104, "bases": 0, "doc": 347}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 104, "bases": 0, "doc": 334}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 340}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 115, "bases": 0, "doc": 356}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 115, "bases": 0, "doc": 568}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 127, "bases": 0, "doc": 504}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 246}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 104}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 104}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 425, "bases": 0, "doc": 350}, "senselab.audio.tasks.features_extraction.torchaudio": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 137, "bases": 0, "doc": 112}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 162, "bases": 0, "doc": 131}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 181, "bases": 0, "doc": 146}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 156, "bases": 0, "doc": 133}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 84}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 106, "bases": 0, "doc": 117}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 307, "bases": 0, "doc": 250}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 108}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 88}, "senselab.audio.tasks.forced_alignment": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.forced_alignment.constants": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 17, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 78, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 546, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"qualname": 3, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"qualname": 3, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"qualname": 3, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"qualname": 3, "fullname": 10, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"qualname": 2, "fullname": 9, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"qualname": 2, "fullname": 9, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"qualname": 2, "fullname": 9, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"qualname": 2, "fullname": 9, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"qualname": 3, "fullname": 10, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 66}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"qualname": 3, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"qualname": 3, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 74}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"qualname": 2, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 142, "bases": 0, "doc": 78}, "senselab.audio.tasks.input_output": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.input_output.utils": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.audio.tasks.input_output.utils.read_audios": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 118}, "senselab.audio.tasks.input_output.utils.save_audios": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 153}, "senselab.audio.tasks.plotting": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.plotting.plotting": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 98}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 113}, "senselab.audio.tasks.plotting.plotting.play_audio": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 54}, "senselab.audio.tasks.preprocessing": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.preprocessing.preprocessing": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 128, "bases": 0, "doc": 93}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 74}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 85}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 85}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 66}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 70}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 94}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 85}, "senselab.audio.tasks.speaker_diarization": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 271}, "senselab.audio.tasks.speaker_diarization.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 244, "bases": 0, "doc": 144}, "senselab.audio.tasks.speaker_diarization.pyannote": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 244, "bases": 0, "doc": 154}, "senselab.audio.tasks.speaker_diarization_evaluation": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 143, "bases": 0, "doc": 205}, "senselab.audio.tasks.speaker_embeddings": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 198}, "senselab.audio.tasks.speaker_embeddings.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 317}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 154, "bases": 0, "doc": 141}, "senselab.audio.tasks.speaker_verification": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 203, "bases": 0, "doc": 159}, "senselab.audio.tasks.speech_enhancement": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 217}, "senselab.audio.tasks.speech_enhancement.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 164, "bases": 0, "doc": 91}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 170, "bases": 0, "doc": 153}, "senselab.audio.tasks.speech_to_text": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 975}, "senselab.audio.tasks.speech_to_text.api": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 62}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 210, "bases": 0, "doc": 132}, "senselab.audio.tasks.speech_to_text.huggingface": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 61}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 304, "bases": 0, "doc": 207}, "senselab.audio.tasks.speech_to_text_evaluation": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 776}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 114}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 114}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 114}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 114}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 114}, "senselab.audio.tasks.ssl_embeddings": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.audio.tasks.ssl_embeddings.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 177, "bases": 0, "doc": 378}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 183, "bases": 0, "doc": 126}, "senselab.audio.tasks.text_to_speech": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 708}, "senselab.audio.tasks.text_to_speech.api": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 291, "bases": 0, "doc": 259}, "senselab.audio.tasks.text_to_speech.coqui": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 269, "bases": 0, "doc": 125}, "senselab.audio.tasks.text_to_speech.huggingface": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 157}, "senselab.audio.tasks.text_to_speech.marstts": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 338, "bases": 0, "doc": 348}, "senselab.audio.tasks.voice_activity_detection": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 399}, "senselab.audio.tasks.voice_activity_detection.api": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 169, "bases": 0, "doc": 96}, "senselab.audio.tasks.voice_cloning": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 329}, "senselab.audio.tasks.voice_cloning.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 217, "bases": 0, "doc": 586}, "senselab.audio.tasks.voice_cloning.coqui": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 210, "bases": 0, "doc": 121}, "senselab.audio.tasks.voice_cloning.sparc": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 210, "bases": 0, "doc": 104}, "senselab.audio.workflows": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.audio.workflows.health_measurements": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 162}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 596}, "senselab.text": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.text.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.text.tasks.embeddings_extraction": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.text.tasks.embeddings_extraction.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 91}, "senselab.text.tasks.embeddings_extraction.huggingface": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 105}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 104}, "senselab.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.config": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.config.get_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 12}, "senselab.utils.constants": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.utils.data_structures.dataset": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.utils.data_structures.dataset.Participant": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 48}, "senselab.utils.data_structures.dataset.Participant.id": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.Participant.metadata": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.Participant.set_id": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "senselab.utils.data_structures.dataset.Participant.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.dataset.Session": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 48}, "senselab.utils.data_structures.dataset.Session.id": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.Session.metadata": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.Session.set_id": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "senselab.utils.data_structures.dataset.Session.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.dataset.SenselabDataset": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 123}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"qualname": 2, "fullname": 7, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"qualname": 2, "fullname": 7, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"qualname": 2, "fullname": 7, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"qualname": 2, "fullname": 7, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 96}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 96}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 34}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 156}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 53}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 94}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 94}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 56}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 56}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 65}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 209}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.device": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.data_structures.device.DeviceType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "senselab.utils.data_structures.device.DeviceType.CPU": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.device.DeviceType.MPS": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.device.DTYPE_MAP": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 31, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.file": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.data_structures.file.File": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "senselab.utils.data_structures.file.File.filepath": {"qualname": 2, "fullname": 7, "annotation": 11, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.file.File.type": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.utils.data_structures.file.File.validate_filepath": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 6}, "senselab.utils.data_structures.file.File.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.file.from_strings_to_files": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 16}, "senselab.utils.data_structures.file.get_common_directory": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 47}, "senselab.utils.data_structures.language": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.utils.data_structures.language.Language": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "senselab.utils.data_structures.language.Language.language_code": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.language.Language.validate_language": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "senselab.utils.data_structures.language.Language.alpha_2": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.utils.data_structures.language.Language.alpha_3": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.utils.data_structures.language.Language.name": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.utils.data_structures.language.Language.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.logging": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.utils.data_structures.logging.logger": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.logging.ch": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.logging.formatter": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.utils.data_structures.model.SenselabModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"qualname": 4, "fullname": 9, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.SenselabModel.revision": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 40}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.HFModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.HFModel.revision": {"qualname": 2, "fullname": 7, "annotation": 12, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.HFModel.info": {"qualname": 2, "fullname": 7, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 38}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 17}, "senselab.utils.data_structures.model.HFModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.SpeechBrainModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.CoquiTTSModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 37}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 60}, "senselab.utils.data_structures.model.TorchModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "senselab.utils.data_structures.model.TorchModel.revision": {"qualname": 2, "fullname": 7, "annotation": 12, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 37}, "senselab.utils.data_structures.model.TorchModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.TorchAudioModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"qualname": 2, "fullname": 7, "annotation": 12, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 34}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 12}, "senselab.utils.data_structures.model.is_torch_model": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 11}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 13}, "senselab.utils.data_structures.model.check_github_repo_exists": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 16}, "senselab.utils.data_structures.pydra_helpers": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 16}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 420}, "senselab.utils.data_structures.script_line": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.utils.data_structures.script_line.ScriptLine": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 67}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"qualname": 2, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"qualname": 2, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"qualname": 2, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"qualname": 2, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"qualname": 2, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 14}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 54}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 47}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 35}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 27}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 29}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 48}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"qualname": 3, "fullname": 9, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.utils.data_structures.talk_bank_helpers": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 107}, "senselab.utils.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.utils.tasks.batching": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "senselab.utils.tasks.batching.batch_list": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 75}, "senselab.utils.tasks.cca_cka": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.utils.tasks.cca_cka.compute_cca": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 96}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 6}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.utils.tasks.cca_cka.compute_cka": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 212}, "senselab.utils.tasks.cosine_similarity": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 376}, "senselab.utils.tasks.cross_correlation": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 264}, "senselab.utils.tasks.dimensionality_reduction": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 882}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 784}, "senselab.utils.tasks.eer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "senselab.utils.tasks.eer.compute_eer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 64}, "senselab.utils.tasks.input_output": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "senselab.utils.tasks.input_output.read_files_from_disk": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 16}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 27}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 25}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 16}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 13}, "senselab.utils.tasks.plotting": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.utils.tasks.plotting.plot_transcript": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 87}, "senselab.utils.tasks.plotting.plot_segment": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 90}, "senselab.utils.tasks.pooling": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.utils.tasks.pooling.pooling": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 573}, "senselab.video": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.video.data_structures": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "senselab.video.data_structures.pose": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.video.data_structures.pose.PoseModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 44}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.PoseLandmark": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 33}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 31}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 72}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 26}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 59}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 25}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.pose.IndividualPose": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 75}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"qualname": 3, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"qualname": 3, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 86}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"qualname": 3, "fullname": 8, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.pose.ImagePose": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 67}, "senselab.video.data_structures.pose.ImagePose.model_config": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.pose.ImagePose.model": {"qualname": 2, "fullname": 7, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.ImagePose.image": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.ImagePose.individuals": {"qualname": 2, "fullname": 7, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 14}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 72}, "senselab.video.data_structures.video": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "senselab.video.data_structures.video.Video": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 61}, "senselab.video.data_structures.video.Video.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 125}, "senselab.video.data_structures.video.Video.metadata": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.data_structures.video.Video.model_config": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 18}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 87}, "senselab.video.data_structures.video.Video.frames": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "senselab.video.data_structures.video.Video.frame_rate": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "senselab.video.data_structures.video.Video.audio": {"qualname": 2, "fullname": 7, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "senselab.video.data_structures.video.Video.generate_id": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 56}, "senselab.video.data_structures.video.Video.model_post_init": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 60}, "senselab.video.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "senselab.video.tasks.input_output": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 16}, "senselab.video.tasks.pose_estimation": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 487}, "senselab.video.tasks.pose_estimation.api": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 314}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 101}, "senselab.video.tasks.pose_estimation.estimate": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 67}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 27}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"qualname": 3, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 47}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 53}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 44}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 31}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 50}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 87}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 107}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 57}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 30}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 33}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 46}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 73}, "senselab.video.tasks.pose_estimation.utils": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 171, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 85, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 171, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 151, "signature": 0, "bases": 0, "doc": 3}, "senselab.video.tasks.pose_estimation.utils.get_model": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 97}, "senselab.video.tasks.pose_estimation.utils.download_model": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 55}, "senselab.video.tasks.pose_estimation.visualization": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 101}}, "length": 473, "save": true}, "index": {"qualname": {"root": {"2": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}}, "df": 1}, "3": {"docs": {"senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 18, "s": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 40}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 9}, "s": {"docs": {"senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 7}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 3}, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}}, "df": 7}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 38, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "s": {"5": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 2}}}}, "docs": {}, "df": 0}}, "p": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 23}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.language.Language.language_code": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}, "u": {"docs": {"senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}}, "df": 1}}, "h": {"docs": {"senselab.utils.data_structures.logging.ch": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 9, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}}, "df": 1}, "p": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}}, "df": 15}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 10, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}}, "df": 18}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}}, "df": 5}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 2}, "r": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 10, "p": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}}, "df": 4}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}}, "df": 4}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.type": {"tf": 1}}, "df": 1}}}}, "f": {"1": {"docs": {}, "df": 0, "f": {"2": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 32}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.logger": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 10, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}}}}}}, "k": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 4}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.language.Language.name": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 7}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 34, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}}, "df": 6}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 7}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}}, "df": 3}}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "x": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}}, "df": 2}, "z": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}}, "df": 1}}}, "fullname": {"root": {"2": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}}, "df": 1}, "3": {"docs": {"senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab": {"tf": 1}, "senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1.4142135623730951}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 473, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}}, "df": 18}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}}, "df": 5}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 10, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 232}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 17, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}}, "df": 15}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 42, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}}, "df": 22}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1.4142135623730951}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 238, "s": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 40}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 7}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}}, "df": 34}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}}, "df": 53}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 239, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 33, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "e": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 4}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 12}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 9}, "s": {"docs": {"senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 7}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}}, "l": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 3}, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}}, "df": 7}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 57, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "s": {"5": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 2}}}}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 24}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 9}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.language.Language.language_code": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 30}}}}}}}, "y": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 9}}}, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}, "u": {"docs": {"senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}}, "df": 1}}, "h": {"docs": {"senselab.utils.data_structures.logging.ch": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 6}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 6, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 9, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}}, "df": 1}, "p": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 8}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 4}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 2}, "r": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 35, "p": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}}, "df": 13, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}}, "df": 4}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}}, "df": 4}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}}, "df": 41, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 271}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 6}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}}, "df": 2}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.type": {"tf": 1}}, "df": 1}}}}, "f": {"1": {"docs": {}, "df": 0, "f": {"2": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.type": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 32}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 36}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}}, "df": 53}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 66, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 15}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 163}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.name": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.logger": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}}, "df": 16, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "y": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 12, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frames": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.audio": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.7320508075688772}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 82, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "k": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}}, "df": 21}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 42}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}}, "df": 6}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 8}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 10}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 33}}}, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}}, "df": 20}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.language.Language.name": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}}, "df": 4, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 12}}}}}, "r": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}}, "df": 3}}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "x": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}}, "df": 2}, "z": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}}, "df": 1}}}, "annotation": {"root": {"docs": {"senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}}, "df": 100, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 5}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1.4142135623730951}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1}}, "df": 8}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}}, "df": 7}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}}, "df": 19}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}}, "df": 19, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}}, "df": 19}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1}}, "df": 14, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 15}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 16}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.audio": {"tf": 1.7320508075688772}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1}}, "df": 5}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}}, "x": {"2": {"7": {"docs": {"senselab.utils.data_structures.file.File.filepath": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.ImagePose.image": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.model.HFModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}}, "df": 1}}, "f": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.info": {"tf": 1}}, "df": 1}}}}}}}}}}}, "default_value": {"root": {"0": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "1": {"0": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3, "k": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}}, "df": 1}}, "1": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3, "n": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "m": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "x": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}, "2": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "3": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "4": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "5": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "6": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 4}, "7": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "8": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "9": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3, "b": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}, "2": {"0": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "1": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "2": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "3": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "4": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "5": {"0": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "6": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "7": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "8": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "9": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "3": {"0": {"0": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 2.6457513110645907}}, "df": 1}}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "1": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "2": {"9": {"8": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 2}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "4": {"0": {"0": {"docs": {"senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "5": {"3": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 3.4641016151377544}}, "df": 1}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "6": {"0": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1}}, "df": 1}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "7": {"8": {"1": {"docs": {}, "df": 0, "f": {"6": {"6": {"2": {"2": {"0": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "8": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3, "n": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "m": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "x": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}, "9": {"6": {"0": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "8": {"0": {"2": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}, "docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2.449489742783178}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.291502622129181}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 2}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging.logger": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.logging.ch": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.logging.formatter": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 4.47213595499958}}, "df": 47, "x": {"2": {"7": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 3.1622776601683795}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 4.898979485566356}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 12.489995996796797}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 2.449489742783178}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 8.12403840463596}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 5.830951894845301}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 8.12403840463596}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 7.483314773547883}}, "df": 25}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 2.449489742783178}}, "df": 1, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 4}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}}, "df": 1}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}}, "df": 15}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 4.123105625617661}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 2.449489742783178}}, "df": 1, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.logger": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "/": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 4}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 2.8284271247461903}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 4}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.utils.data_structures.logging.logger": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.ch": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.logging.logger": {"tf": 1}, "senselab.utils.data_structures.logging.ch": {"tf": 1}, "senselab.utils.data_structures.logging.formatter": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}}, "df": 15}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 1}, "v": {"7": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "a": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.4142135623730951}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}}, "df": 1}}}}}}}}, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 2}}}}}}}, "u": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 4}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 2.8284271247461903}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 4}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 2}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}, "s": {"docs": {"senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 2}}}, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 3.1622776601683795}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 3.1622776601683795}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 3.3166247903554}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 2}}, "f": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "/": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 2}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.logging.formatter": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 2}, "d": {"docs": {}, "df": 0, "u": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}}}}, "b": {"5": {"docs": {}, "df": 0, "e": {"0": {"docs": {}, "df": 0, "e": {"7": {"7": {"4": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 2}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}, "e": {"2": {"4": {"docs": {}, "df": 0, "c": {"docs": {"senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 2.449489742783178}}, "df": 3}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 2}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 2}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 5.0990195135927845}}, "df": 1}}}}}}, "u": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 2}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {}, "df": 0, "/": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"1": {"1": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "m": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "x": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 2, "v": {"8": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "m": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}, "x": {"docs": {"senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "signature": {"root": {"0": {"0": {"5": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 7}, "1": {"0": {"0": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"4": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"8": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0}, "6": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 10, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}, "2": {"5": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 1}, "docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}, "3": {"0": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}, "9": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 2}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 2}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.8284271247461903}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 2}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 2}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.8284271247461903}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1.4142135623730951}}, "df": 23}, "docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}, "4": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}}, "df": 1}, "9": {"6": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}, "5": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}, "8": {"0": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 1}}, "docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 3.7416573867739413}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 7.937253933193772}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 4.123105625617661}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 7.874007874011811}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 12.68857754044952}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 10.344080432788601}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 6.082762530298219}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 8.426149773176359}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 8.831760866327848}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 5.385164807134504}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 4.123105625617661}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 4.123105625617661}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 5}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 4.69041575982343}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 5.5677643628300215}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 5.5677643628300215}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 6.244997998398398}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 6.557438524302}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 11.445523142259598}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 14.071247279470288}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 11.445523142259598}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 11.74734012447073}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 8.94427190999916}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 10.770329614269007}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 12.84523257866513}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 6.324555320336759}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 12.84523257866513}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 8.12403840463596}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 8.12403840463596}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 8.12403840463596}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 10.770329614269007}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 9.16515138991168}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 9.16515138991168}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 9.16515138991168}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 9.643650760992955}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 9.643650760992955}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 10.099504938362077}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 8.12403840463596}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 9.16515138991168}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 9.16515138991168}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 18.439088914585774}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 10.488088481701515}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 11.40175425099138}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 12.041594578792296}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 11.180339887498949}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 8.660254037844387}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 9.219544457292887}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 15.684387141358123}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 7.14142842854285}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 9}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 5.291502622129181}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 6}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 10.344080432788601}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 11.357816691600547}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 12.68857754044952}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 8.06225774829855}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 8.717797887081348}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 5.656854249492381}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 10.14889156509222}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 7.681145747868608}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 8.246211251235321}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 8.660254037844387}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 9}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 8.246211251235321}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 9.273618495495704}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 7.3484692283495345}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 13.92838827718412}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 13.92838827718412}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 10.63014581273465}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 10.908712114635714}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 11.135528725660043}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 12.727922061357855}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 11.445523142259598}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 11.661903789690601}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 12.922847983320086}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 15.459624833740307}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 4.898979485566356}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 4.898979485566356}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 4.898979485566356}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 4.898979485566356}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 4.898979485566356}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 11.916375287812984}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 12.12435565298214}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 15.264337522473747}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 14.696938456699069}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 12.165525060596439}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 16.401219466856727}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 11.575836902790225}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 13.114877048604}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 12.884098726725126}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 12.884098726725126}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 10.677078252031311}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 9.591663046625438}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 10.392304845413264}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 10.392304845413264}, "senselab.utils.config.get_config": {"tf": 4.358898943540674}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 4.47213595499958}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 4.47213595499958}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 9.695359714832659}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 9.695359714832659}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 6.164414002968976}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 7.211102550927978}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 6.782329983125268}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 6.164414002968976}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 6}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 5.744562646538029}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 5.744562646538029}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 5.477225575051661}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 9.327379053088816}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 8.94427190999916}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 6.557438524302}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 4.58257569495584}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 4.47213595499958}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 6.928203230275509}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 7.280109889280518}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 4.47213595499958}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 6.928203230275509}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 6.082762530298219}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 7.280109889280518}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 7.280109889280518}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 4}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 4.47213595499958}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 6.928203230275509}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 5.656854249492381}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 6.708203932499369}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 7.483314773547883}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 7.810249675906654}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 6.164414002968976}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 6.164414002968976}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 4.123105625617661}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 4.123105625617661}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 5.291502622129181}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 6.082762530298219}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 6.928203230275509}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 7.54983443527075}, "senselab.utils.tasks.batching.batch_list": {"tf": 6.082762530298219}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 7}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 11.224972160321824}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 5.656854249492381}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 6}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 9.433981132056603}, "senselab.utils.tasks.eer.compute_eer": {"tf": 6.48074069840786}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 6.244997998398398}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 6.928203230275509}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 7.810249675906654}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 8.366600265340756}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 7.874007874011811}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 5.744562646538029}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 6.164414002968976}, "senselab.utils.tasks.pooling.pooling": {"tf": 9.643650760992955}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 4.123105625617661}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 4.123105625617661}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 4.123105625617661}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 7.280109889280518}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 5.291502622129181}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 6.164414002968976}, "senselab.video.data_structures.video.Video.__init__": {"tf": 3.7416573867739413}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 8.48528137423857}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 3.4641016151377544}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 6.082762530298219}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 8.602325267042627}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 7.280109889280518}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 8.48528137423857}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 3.4641016151377544}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 6.48074069840786}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 6}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 4.47213595499958}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 6.928203230275509}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 7.54983443527075}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 7.280109889280518}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 7.937253933193772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 4.47213595499958}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 6.48074069840786}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 6}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 8.48528137423857}}, "df": 180, "d": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 2}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 106, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 9, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 46}}, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}}, "df": 27, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 27}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 34}, "d": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 2}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2.23606797749979}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 2}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 2}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 3}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 3}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 3}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.449489742783178}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.7320508075688772}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 74, "s": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 42}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 35}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1.4142135623730951}}, "df": 13}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 7}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 8}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.449489742783178}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 38}}, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 44}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 81}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 44}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 9}}}}}, "n": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 8, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 8}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 56, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 10}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}}, "df": 27, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"1": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}}, "df": 25}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 13, "s": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "s": {"1": {"6": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 43}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 2}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 103, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1}, "t": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 6}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 2}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 2}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 2}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 2}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 100, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 2}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 102}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"1": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 13}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 12}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 44}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 9}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "j": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 33, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 3}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 10, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 9}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 2}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 30, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 9}}, "b": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}}, "df": 20}}}, "s": {"docs": {"senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 14}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 11}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {"senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {"senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 13, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 20}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.4142135623730951}}, "df": 32, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1, "o": {"docs": {"senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 5, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 6}}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}, "y": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 13}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 13}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 13}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "doc": {"root": {"0": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.242640687119285}}, "df": 1, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 7.3484692283495345}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "2": {"1": {"3": {"9": {"2": {"8": {"4": {"2": {"6": {"1": {"8": {"5": {"9": {"9": {"8": {"5": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "1": {"8": {"4": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"6": {"6": {"6": {"9": {"5": {"6": {"5": {"9": {"9": {"8": {"0": {"1": {"7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"7": {"5": {"4": {"6": {"6": {"9": {"1": {"8": {"9": {"4": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"4": {"1": {"4": {"9": {"6": {"1": {"8": {"4": {"9": {"9": {"1": {"7": {"7": {"3": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}, "6": {"7": {"3": {"5": {"7": {"3": {"6": {"0": {"3": {"8": {"5": {"3": {"5": {"8": {"3": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"3": {"9": {"7": {"5": {"3": {"7": {"1": {"4": {"2": {"0": {"3": {"8": {"3": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"2": {"2": {"4": {"7": {"1": {"2": {"3": {"7": {"1": {"8": {"2": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"2": {"1": {"7": {"4": {"0": {"5": {"1": {"0": {"8": {"7": {"5": {"5": {"6": {"4": {"2": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"1": {"6": {"0": {"1": {"5": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"9": {"7": {"7": {"9": {"7": {"8": {"4": {"9": {"2": {"4": {"8": {"6": {"7": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "9": {"5": {"9": {"7": {"5": {"5": {"2": {"7": {"1": {"6": {"7": {"3": {"2": {"0": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 7}, "2": {"1": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.0990195135927845}}, "df": 1}, "9": {"4": {"9": {"2": {"4": {"6": {"5": {"2": {"5": {"7": {"6": {"4": {"4": {"6": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "3": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "5": {"5": {"3": {"4": {"8": {"4": {"1": {"5": {"1": {"6": {"2": {"0": {"5": {"2": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.196152422706632}}, "df": 1}, "3": {"0": {"2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "1": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "4": {"2": {"6": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"2": {"2": {"1": {"5": {"3": {"2": {"6": {"2": {"6": {"6": {"9": {"2": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"0": {"3": {"8": {"5": {"1": {"4": {"3": {"4": {"6": {"8": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "4": {"3": {"9": {"7": {"0": {"1": {"0": {"8": {"0": {"3": {"2": {"2": {"2": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.605551275463989}}, "df": 1}, "5": {"2": {"3": {"0": {"2": {"8": {"3": {"7": {"3": {"7": {"1": {"8": {"2": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"8": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.358898943540674}}, "df": 1}, "6": {"6": {"9": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "7": {"0": {"2": {"9": {"8": {"4": {"9": {"3": {"1": {"6": {"3": {"7": {"7": {"3": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "4": {"4": {"7": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.7416573867739413}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "9": {"0": {"2": {"5": {"1": {"9": {"0": {"7": {"7": {"0": {"6": {"2": {"6": {"0": {"6": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"9": {"5": {"1": {"0": {"8": {"0": {"3": {"2": {"2": {"2": {"6": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"8": {"0": {"1": {"5": {"4": {"2": {"8": {"2": {"2": {"7": {"2": {"8": {"4": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 10.770329614269007}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2.6457513110645907}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 4}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 3.872983346207417}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 34, "\u2013": {"2": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.6457513110645907}}, "df": 8}, "1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.7416573867739413}}, "df": 1}, "2": {"4": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.69041575982343}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}, "6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "7": {"2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "8": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "8": {"0": {"docs": {}, "df": 0, "/": {"0": {"2": {"6": {"9": {"9": {"2": {"0": {"0": {"4": {"0": {"0": {"0": {"0": {"8": {"3": {"5": {"3": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"9": {"5": {"9": {"4": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "9": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 8, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "1": {"0": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "4": {"5": {"7": {"3": {"5": {"6": {"8": {"1": {"0": {"5": {"6": {"9": {"7": {"6": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 3, "n": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "l": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 2}, "p": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 1}}, "2": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}, "1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.69041575982343}}, "df": 1}, "2": {"1": {"4": {"2": {"8": {"5": {"8": {"8": {"0": {"3": {"2": {"7": {"2": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}}, "df": 1, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.8284271247461903}}, "df": 1}, "8": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 6}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "3": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "5": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.7416573867739413}}, "df": 1}, "1": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "7": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}, "4": {"0": {"0": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "9": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "4": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.358898943540674}}, "df": 1}, "6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 6.082762530298219}}, "df": 1}, "8": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.4641016151377544}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.4641016151377544}}, "df": 1}, "9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "5": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}, "8": {"7": {"8": {"9": {"0": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "3": {"0": {"4": {"7": {"4": {"6": {"6": {"5": {"8": {"2": {"9": {"7": {"1": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"6": {"6": {"0": {"8": {"8": {"8": {"6": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.795831523312719}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "8": {"1": {"6": {"4": {"8": {"5": {"8": {"8": {"1": {"8": {"0": {"5": {"4": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"3": {"9": {"0": {"2": {"0": {"5": {"3": {"8": {"3": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}}, "df": 1}, "6": {"0": {"0": {"0": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "5": {"3": {"5": {"3": {"2": {"0": {"6": {"3": {"9": {"6": {"1": {"0": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}}, "df": 1}, "1": {"3": {"1": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"3": {"4": {"5": {"5": {"3": {"0": {"6": {"2": {"9": {"1": {"5": {"8": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.872983346207417}}, "df": 1}, "5": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"0": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "8": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 3, "k": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}, "7": {"0": {"1": {"9": {"8": {"5": {"4": {"4": {"8": {"5": {"9": {"8": {"8": {"6": {"1": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"3": {"2": {"5": {"6": {"8": {"3": {"5": {"9": {"3": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"7": {"9": {"1": {"8": {"1": {"2": {"8": {"9": {"6": {"7": {"2": {"8": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"9": {"7": {"5": {"9": {"5": {"2": {"1": {"4": {"8": {"4": {"3": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"6": {"0": {"3": {"7": {"3": {"8": {"0": {"6": {"9": {"5": {"3": {"4": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "9": {"0": {"1": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "6": {"5": {"4": {"0": {"9": {"5": {"1": {"6": {"2": {"6": {"6": {"1": {"5": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}, "5": {"1": {"1": {"6": {"2": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 6.782329983125268}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.8284271247461903}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.6457513110645907}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 28, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}}, "df": 3}, "b": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}, "2": {"0": {"0": {"0": {"docs": {}, "df": 0, "\u2013": {"5": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "4": {"3": {"1": {"8": {"2": {"3": {"7": {"3": {"0": {"4": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}, "1": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"6": {"6": {"6": {"6": {"4": {"8": {"3": {"8": {"7": {"9": {"0": {"8": {"9": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.23606797749979}}, "df": 4, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "1": {"0": {"8": {"9": {"5": {"4": {"7": {"9": {"4": {"9": {"1": {"3": {"2": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.69041575982343}}, "df": 1}, "docs": {}, "df": 0}, "5": {"8": {"7": {"7": {"6": {"5": {"2": {"1": {"6": {"8": {"2": {"7": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "2": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1}, "5": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}, "3": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "2": {"9": {"6": {"0": {"7": {"9": {"7": {"9": {"3": {"1": {"8": {"1": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}}, "df": 1, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "4": {"5": {"2": {"0": {"4": {"0": {"3": {"1": {"4": {"6": {"7": {"4": {"3": {"7": {"7": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"3": {"5": {"3": {"9": {"9": {"0": {"7": {"9": {"3": {"2": {"2": {"8": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 3}, "5": {"0": {"0": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 2}, "4": {"4": {"4": {"7": {"9": {"3": {"7": {"0": {"1": {"1": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "3": {"6": {"4": {"4": {"5": {"0": {"4": {"7": {"9": {"8": {"1": {"3": {"1": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 4, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "6": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"2": {"0": {"1": {"1": {"1": {"0": {"8": {"3": {"9": {"8": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4}}, "df": 1}, "docs": {}, "df": 0}, "4": {"7": {"4": {"6": {"0": {"6": {"9": {"9": {"0": {"8": {"1": {"4": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.605551275463989}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "7": {"4": {"8": {"0": {"3": {"1": {"6": {"1": {"6": {"2": {"1": {"0": {"9": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"7": {"5": {"6": {"8": {"3": {"5": {"9": {"3": {"7": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"0": {"2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "5": {"2": {"0": {"4": {"8": {"8": {"7": {"3": {"9": {"0": {"1": {"3": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "7": {"2": {"5": {"6": {"4": {"6": {"9": {"7": {"2": {"6": {"5": {"6": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.47213595499958}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 23, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "3": {"0": {"0": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "1": {"5": {"1": {"1": {"3": {"4": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"5": {"0": {"1": {"1": {"9": {"1": {"9": {"7": {"3": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "7": {"9": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "8": {"7": {"0": {"7": {"6": {"8": {"4": {"2": {"7": {"8": {"4": {"8": {"8": {"1": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.23606797749979}}, "df": 5, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "1": {"4": {"4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "5": {"7": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "1": {"3": {"5": {"9": {"8": {"4": {"3": {"0": {"1": {"5": {"6": {"7": {"0": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "8": {"5": {"6": {"1": {"4": {"0": {"7": {"0": {"6": {"5": {"4": {"3": {"7": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}, "3": {"6": {"4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "9": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "4": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "4": {"0": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "7": {"9": {"6": {"9": {"0": {"5": {"5": {"1": {"7": {"5": {"7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "5": {"0": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "1": {"1": {"0": {"6": {"1": {"3": {"2": {"3": {"1": {"8": {"8": {"3": {"1": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"7": {"3": {"1": {"2": {"9": {"5": {"5": {"8": {"5": {"6": {"3": {"2": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"9": {"0": {"9": {"6": {"8": {"7": {"9": {"7": {"2": {"3": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"2": {"9": {"4": {"9": {"2": {"8": {"5": {"5": {"0": {"7": {"2": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "5": {"8": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}, "8": {"7": {"3": {"1": {"8": {"4": {"6": {"8": {"0": {"9": {"3": {"8": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "1": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}, "5": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}, "9": {"3": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"3": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 16.852299546352718}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 4}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 7.483314773547883}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 14, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2.23606797749979}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 19, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 1}}, "4": {"0": {"0": {"0": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}, "1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "3": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "1": {"2": {"9": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "6": {"4": {"6": {"1": {"9": {"4": {"4": {"5": {"8": {"0": {"0": {"7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "9": {"5": {"8": {"8": {"2": {"3": {"8": {"0": {"0": {"0": {"8": {"6": {"9": {"7": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}, "2": {"5": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "9": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "8": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.795831523312719}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "6": {"4": {"3": {"5": {"7": {"8": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "8": {"7": {"5": {"2": {"3": {"5": {"3": {"1": {"9": {"1": {"3": {"7": {"5": {"7": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"0": {"5": {"3": {"9": {"4": {"0": {"1": {"7": {"7": {"3": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "2": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "4": {"1": {"3": {"7": {"7": {"2": {"2": {"2": {"5": {"3": {"7": {"9": {"9": {"4": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "4": {"5": {"4": {"5": {"4": {"5": {"4": {"5": {"4": {"5": {"4": {"5": {"4": {"5": {"3": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.358898943540674}}, "df": 1}, "docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "7": {"0": {"3": {"5": {"8": {"9": {"9": {"1": {"6": {"2": {"2": {"9": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "6": {"2": {"9": {"2": {"6": {"2": {"6": {"8": {"5": {"7": {"7": {"5": {"7": {"5": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"2": {"6": {"8": {"4": {"2": {"0": {"9": {"6": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "3": {"8": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "5": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "3": {"1": {"6": {"9": {"5": {"5": {"5": {"6": {"6": {"4": {"0": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.4641016151377544}}, "df": 1}, "5": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"6": {"2": {"2": {"6": {"8": {"3": {"0": {"4": {"8": {"2": {"4": {"8": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"0": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"3": {"7": {"9": {"2": {"0": {"9": {"5": {"1": {"8": {"4": {"3": {"2": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 9, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 4}}, "5": {"0": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 8}, "1": {"6": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}, "1": {"2": {"4": {"1": {"3": {"0": {"2": {"4": {"9": {"0": {"2": {"3": {"4": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"8": {"9": {"1": {"8": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"0": {"5": {"7": {"1": {"2": {"8": {"9": {"0": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"2": {"1": {"8": {"8": {"5": {"0": {"3": {"1": {"9": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"1": {"4": {"1": {"6": {"5": {"9": {"3": {"5": {"6": {"4": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"9": {"5": {"5": {"1": {"3": {"1": {"5": {"3": {"0": {"7": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"5": {"3": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "7": {"2": {"4": {"3": {"8": {"5": {"7": {"3": {"2": {"5": {"5": {"2": {"4": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "9": {"8": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"5": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "8": {"5": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "8": {"7": {"0": {"5": {"0": {"9": {"1": {"4": {"7": {"6": {"4": {"4": {"0": {"4": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"1": {"1": {"9": {"6": {"2": {"2": {"4": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"4": {"0": {"8": {"9": {"8": {"1": {"3": {"2": {"3": {"2": {"4": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"0": {"7": {"5": {"4": {"8": {"2": {"5": {"1": {"0": {"4": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"1": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "9": {"1": {"1": {"3": {"3": {"4": {"7": {"5": {"3": {"0": {"3": {"6": {"4": {"9": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "2": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}, "9": {"0": {"1": {"2": {"1": {"3": {"6": {"4": {"5": {"9": {"3": {"5": {"0": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"7": {"8": {"0": {"6": {"8": {"1": {"4": {"3": {"1": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 19, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}}}, "6": {"0": {"2": {"2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "5": {"0": {"3": {"6": {"2": {"5": {"8": {"6": {"9": {"7": {"5": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1}}, "1": {"2": {"5": {"2": {"7": {"3": {"7": {"0": {"4": {"5": {"2": {"8": {"8": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "9": {"4": {"0": {"5": {"7": {"4": {"6": {"4": {"5": {"9": {"9": {"6": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"3": {"0": {"8": {"5": {"1": {"8": {"4": {"0": {"9": {"7": {"2": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"3": {"4": {"1": {"1": {"3": {"0": {"2": {"5": {"6": {"6": {"5": {"2": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"9": {"8": {"0": {"2": {"6": {"2": {"7": {"5": {"6": {"3": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"4": {"3": {"0": {"4": {"5": {"0": {"4": {"3": {"9": {"4": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"2": {"2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "9": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "4": {"0": {"0": {"0": {"6": {"7": {"8": {"0": {"6": {"2": {"4": {"3": {"8": {"9": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"8": {"5": {"4": {"1": {"0": {"2": {"6": {"1": {"1": {"5": {"4": {"1": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 2}, "5": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "6": {"9": {"2": {"3": {"2": {"0": {"5": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"0": {"8": {"5": {"9": {"3": {"7": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "6": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "7": {"6": {"1": {"7": {"7": {"9": {"7": {"8": {"5": {"1": {"5": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"3": {"9": {"6": {"8": {"3": {"2": {"4": {"6": {"6": {"1": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"4": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"2": {"2": {"7": {"2": {"7": {"0": {"1": {"2": {"6": {"3": {"4": {"2": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"5": {"8": {"2": {"8": {"1": {"8": {"0": {"3": {"1": {"3": {"1": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 4}, "7": {"0": {"7": {"1": {"0": {"6": {"7": {"8": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}, "1": {"0": {"7": {"9": {"6": {"3": {"5": {"6": {"2": {"0": {"1": {"1": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"6": {"7": {"2": {"7": {"8": {"2": {"8": {"9": {"7": {"9": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"9": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "7": {"6": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"3": {"0": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "6": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "6": {"4": {"8": {"7": {"8": {"6": {"5": {"4": {"4": {"7": {"9": {"9": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"5": {"0": {"9": {"8": {"1": {"1": {"4": {"0": {"1": {"3": {"6": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"7": {"5": {"3": {"9": {"0": {"6": {"2": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"5": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "1": {"8": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 9}, "6": {"2": {"7": {"7": {"1": {"2": {"8": {"1": {"4": {"8": {"3": {"4": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"7": {"4": {"5": {"8": {"4": {"9": {"6": {"0": {"9": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"4": {"5": {"9": {"6": {"6": {"7": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"5": {"2": {"8": {"1": {"5": {"7": {"9": {"4": {"1": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}, "8": {"8": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "9": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 6.082762530298219}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "9": {"6": {"3": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "8": {"4": {"2": {"5": {"7": {"5": {"0": {"7": {"3": {"2": {"4": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 5}, "8": {"0": {"0": {"4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "7": {"8": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "8": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "9": {"5": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 3}, "1": {"2": {"2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "3": {"0": {"7": {"6": {"4": {"7": {"7": {"0": {"5": {"0": {"7": {"8": {"1": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"4": {"0": {"1": {"8": {"5": {"2": {"6": {"0": {"7": {"7": {"2": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"3": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "6": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.795831523312719}}, "df": 1}, "docs": {}, "df": 0}, "8": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.4641016151377544}}, "df": 1}, "docs": {}, "df": 0}, "9": {"5": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"9": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "7": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"8": {"7": {"5": {"6": {"6": {"6": {"1": {"4": {"1": {"5": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "8": {"9": {"9": {"7": {"8": {"0": {"2": {"7": {"3": {"4": {"3": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"0": {"9": {"9": {"8": {"1": {"3": {"4": {"6": {"1": {"3": {"0": {"3": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"6": {"6": {"8": {"8": {"4": {"6": {"1": {"3": {"0": {"3": {"7": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.5677643628300215}}, "df": 1}, "7": {"4": {"9": {"8": {"3": {"3": {"4": {"9": {"6": {"8": {"0": {"9": {"1": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}}, "df": 1}, "8": {"3": {"4": {"9": {"5": {"0": {"9": {"2": {"3": {"9": {"1": {"9": {"6": {"7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"4": {"3": {"1": {"8": {"3": {"5": {"1": {"7": {"4": {"5": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"9": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"1": {"4": {"6": {"1": {"2": {"6": {"5": {"1": {"8": {"7": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 4, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 4}, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 2}}, "9": {"0": {"0": {"1": {"7": {"1": {"9": {"3": {"7": {"8": {"3": {"5": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "4": {"5": {"3": {"4": {"0": {"3": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"8": {"6": {"0": {"1": {"7": {"7": {"9": {"9": {"3": {"7": {"7": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}}, "df": 1}, "1": {"0": {"8": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.477225575051661}}, "df": 1}, "2": {"4": {"7": {"5": {"6": {"3": {"4": {"8": {"1": {"3": {"3": {"0": {"8": {"7": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"1": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.8284271247461903}}, "df": 1}, "4": {"8": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.872983346207417}}, "df": 1}, "6": {"8": {"3": {"3": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}}, "df": 1}, "5": {"4": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.8284271247461903}}, "df": 1}, "6": {"0": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "9": {"6": {"0": {"2": {"1": {"9": {"3": {"0": {"0": {"8": {"3": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.898979485566356}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5}}, "df": 1}, "7": {"4": {"6": {"3": {"1": {"8": {"4": {"6": {"1": {"9": {"7": {"0": {"7": {"6": {"2": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"2": {"0": {"2": {"0": {"1": {"1": {"1": {"0": {"8": {"4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}}, "df": 1}, "8": {"2": {"3": {"0": {"6": {"7": {"7": {"6": {"8": {"1": {"6": {"0": {"4": {"6": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"5": {"7": {"9": {"0": {"5": {"9": {"8": {"8": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "docs": {}, "df": 0}, "4": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.8284271247461903}}, "df": 1}, "2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "9": {"1": {"4": {"9": {"5": {"9": {"9": {"7": {"8": {"6": {"5": {"2": {"8": {"2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"8": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "6": {"2": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}}, "df": 4}, "docs": {"senselab": {"tf": 20.904544960366874}, "senselab.audio": {"tf": 1.7320508075688772}, "senselab.audio.data_structures": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio": {"tf": 4.242640687119285}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 7.874007874011811}, "senselab.audio.data_structures.audio.Audio.metadata": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 4.795831523312719}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 3.872983346207417}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 5.5677643628300215}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 8.06225774829855}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 5.744562646538029}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 4.69041575982343}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 5.830951894845301}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 6.6332495807108}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 4.58257569495584}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.labels": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.scores": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 3.4641016151377544}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 6}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 2}, "senselab.audio.tasks": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification": {"tf": 12.489995996796797}, "senselab.audio.tasks.classification.api": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 7.3484692283495345}, "senselab.audio.tasks.classification.huggingface": {"tf": 2.8284271247461903}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 7.3484692283495345}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 23.45207879911715}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.DISCRETE": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.CONTINUOUS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.VALENCE": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType.NOT_RECOGNIZED": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 7.3484692283495345}, "senselab.audio.tasks.data_augmentation": {"tf": 9.16515138991168}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 6}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 5.291502622129181}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 5.916079783099616}, "senselab.audio.tasks.features_extraction": {"tf": 37.68288736283355}, "senselab.audio.tasks.features_extraction.api": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 35.45419580247167}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 5.477225575051661}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 7.615773105863909}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 6.4031242374328485}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 13.228756555322953}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 12}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 13.341664064126334}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 12.884098726725126}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 12.409673645990857}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 12.806248474865697}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 12.96148139681572}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 15.748015748023622}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 14.594519519326424}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 11.224972160321824}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 6.4031242374328485}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 6.4031242374328485}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 11.269427669584644}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 6.708203932499369}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 7.14142842854285}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 7.54983443527075}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 7.14142842854285}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 6}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 6.244997998398398}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 9.433981132056603}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 6.48074069840786}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 5.744562646538029}, "senselab.audio.tasks.forced_alignment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.SAMPLE_RATE": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.MINIMUM_SEGMENT_SIZE": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.PUNKT_ABBREVIATIONS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.LANGUAGES_WITHOUT_SPACES": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_TORCH": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.constants.DEFAULT_ALIGN_MODELS_HF": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.word": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.start": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.end": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment.score": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.char": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.start": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.end": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment.score": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.start": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.end": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_char": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_cdx": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.clean_wdx": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment.sentence_spans": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.start": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.end": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.words": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment.chars": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.segments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult.language": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.segments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult.word_segments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 5.196152422706632}, "senselab.audio.tasks.forced_alignment.data_structures.Point.__init__": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point.token_index": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point.time_index": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point.score": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 5.744562646538029}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.__init__": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.label": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.start": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.end": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.score": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 4.898979485566356}, "senselab.audio.tasks.input_output": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 6.557438524302}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 7.14142842854285}, "senselab.audio.tasks.plotting": {"tf": 1.7320508075688772}, "senselab.audio.tasks.plotting.plotting": {"tf": 1.7320508075688772}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 6.4031242374328485}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 6.782329983125268}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 5.0990195135927845}, "senselab.audio.tasks.preprocessing": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 6.48074069840786}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 4.898979485566356}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 5.477225575051661}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 5.477225575051661}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 4.795831523312719}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 5.291502622129181}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 5.744562646538029}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 5.830951894845301}, "senselab.audio.tasks.speaker_diarization": {"tf": 9.219544457292887}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 7.3484692283495345}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 7.615773105863909}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 6.855654600401044}, "senselab.audio.tasks.speaker_embeddings": {"tf": 6.782329983125268}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 13.601470508735444}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 7.0710678118654755}, "senselab.audio.tasks.speaker_verification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_verification.speaker_verification.TRAINING_SAMPLE_RATE": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 6.48074069840786}, "senselab.audio.tasks.speech_enhancement": {"tf": 7.416198487095663}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 6}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MAX_DURATION_SECONDS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.MIN_LENGTH": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 6.708203932499369}, "senselab.audio.tasks.speech_to_text": {"tf": 20.149441679609886}, "senselab.audio.tasks.speech_to_text.api": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 7.745966692414834}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 8.12403840463596}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 16.55294535724685}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 8.366600265340756}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 8.366600265340756}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 8.366600265340756}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 8.366600265340756}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 8.366600265340756}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 14.730919862656235}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 6.48074069840786}, "senselab.audio.tasks.text_to_speech": {"tf": 15}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 8.717797887081348}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 7.0710678118654755}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 7.681145747868608}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 10.099504938362077}, "senselab.audio.tasks.voice_activity_detection": {"tf": 11.789826122551595}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 6}, "senselab.audio.tasks.voice_cloning": {"tf": 9.273618495495704}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 14.45683229480096}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 5.744562646538029}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 6.48074069840786}, "senselab.audio.workflows": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements": {"tf": 3.7416573867739413}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 2.449489742783178}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 15.524174696260024}, "senselab.text": {"tf": 1.7320508075688772}, "senselab.text.tasks": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 6}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 6}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 6}, "senselab.utils": {"tf": 1.7320508075688772}, "senselab.utils.config": {"tf": 1.7320508075688772}, "senselab.utils.config.get_config": {"tf": 1.7320508075688772}, "senselab.utils.constants": {"tf": 1.7320508075688772}, "senselab.utils.constants.SENSELAB_NAMESPACE": {"tf": 1.7320508075688772}, "senselab.utils.data_structures": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant": {"tf": 4.123105625617661}, "senselab.utils.data_structures.dataset.Participant.id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant.metadata": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 2}, "senselab.utils.data_structures.dataset.Session": {"tf": 4.123105625617661}, "senselab.utils.data_structures.dataset.Session.id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Session.metadata": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 5.656854249492381}, "senselab.utils.data_structures.dataset.SenselabDataset.participants": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.sessions": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.audios": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.videos": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.metadata": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 4.795831523312719}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 4.795831523312719}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 5.830951894845301}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 5.196152422706632}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 5.196152422706632}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 3.605551275463989}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 3.605551275463989}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 3.4641016151377544}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 6}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 2}, "senselab.utils.data_structures.device": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.device.DeviceType.CPU": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.device.DeviceType.CUDA": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.device.DeviceType.MPS": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.device.DTYPE_MAP": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.File": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.File.filepath": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.File.type": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.File.model_config": {"tf": 2}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 2.23606797749979}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 4.358898943540674}, "senselab.utils.data_structures.language": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.language_code": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.name": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 2}, "senselab.utils.data_structures.logging": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.logging.logger": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.logging.ch": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.logging.formatter": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel.path_or_uri": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel.revision": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 2.449489742783178}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.HFModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.revision": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.info": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 2.449489742783178}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 2.449489742783178}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 4.69041575982343}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchModel.revision": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 2.449489742783178}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchAudioModel.revision": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 2.449489742783178}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 2}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 12.041594578792296}, "senselab.utils.data_structures.script_line": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 5.291502622129181}, "senselab.utils.data_structures.script_line.ScriptLine.text": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.speaker": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.start": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.end": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.chunks": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 4.898979485566356}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 4.898979485566356}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 3.4641016151377544}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 3.4641016151377544}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 3.4641016151377544}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 3.605551275463989}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 4.898979485566356}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 2}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 5.656854249492381}, "senselab.utils.tasks": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching.batch_list": {"tf": 5.477225575051661}, "senselab.utils.tasks.cca_cka": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 6}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.CKAKernelType.LINEAR": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.CKAKernelType.RBF": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 9.219544457292887}, "senselab.utils.tasks.cosine_similarity": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 15.84297951775486}, "senselab.utils.tasks.cross_correlation": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 12.24744871391589}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 14.798648586948742}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 20.37154878746336}, "senselab.utils.tasks.eer": {"tf": 1.7320508075688772}, "senselab.utils.tasks.eer.compute_eer": {"tf": 5.477225575051661}, "senselab.utils.tasks.input_output": {"tf": 2.449489742783178}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 2.23606797749979}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 2.8284271247461903}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 2.8284271247461903}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 2.23606797749979}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 2.23606797749979}, "senselab.utils.tasks.plotting": {"tf": 1.7320508075688772}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 6.244997998398398}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 6.244997998398398}, "senselab.utils.tasks.pooling": {"tf": 1.7320508075688772}, "senselab.utils.tasks.pooling.pooling": {"tf": 18.57417562100671}, "senselab.video": {"tf": 1.7320508075688772}, "senselab.video.data_structures": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.PoseModel": {"tf": 4.58257569495584}, "senselab.video.data_structures.pose.PoseModel.MEDIAPIPE": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.PoseModel.YOLO": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 3.605551275463989}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 3.4641016151377544}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 2}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 5.744562646538029}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.x": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.y": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.z": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.visibility": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 3.4641016151377544}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 2}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 5.196152422706632}, "senselab.video.data_structures.pose.YOLOPoseLandmark.x": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.YOLOPoseLandmark.y": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.YOLOPoseLandmark.confidence": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 3.4641016151377544}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 2}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 5.196152422706632}, "senselab.video.data_structures.pose.IndividualPose.individual_index": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.normalized_landmarks": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.world_landmarks": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 6.4031242374328485}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 2}, "senselab.video.data_structures.pose.ImagePose": {"tf": 5.196152422706632}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 2}, "senselab.video.data_structures.pose.ImagePose.model": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.image": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.individuals": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 5.916079783099616}, "senselab.video.data_structures.video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video": {"tf": 4.123105625617661}, "senselab.video.data_structures.video.Video.__init__": {"tf": 7.0710678118654755}, "senselab.video.data_structures.video.Video.metadata": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_config": {"tf": 2}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 5.830951894845301}, "senselab.video.data_structures.video.Video.frames": {"tf": 2.449489742783178}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 2.449489742783178}, "senselab.video.data_structures.video.Video.audio": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 3.872983346207417}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 4.69041575982343}, "senselab.video.tasks": {"tf": 1.7320508075688772}, "senselab.video.tasks.input_output": {"tf": 1.7320508075688772}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation": {"tf": 11.958260743101398}, "senselab.video.tasks.pose_estimation.api": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 13.076696830622021}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 6}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 5.0990195135927845}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 3.872983346207417}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.model_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 4.58257569495584}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 3.872983346207417}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.model_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.num_individuals": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 6.557438524302}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 6.928203230275509}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 5.0990195135927845}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 3.872983346207417}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 3.872983346207417}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.model_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 5.916079783099616}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.MODEL_PATH": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.SENSELAB_KEYPOINT_MAPPING": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.YOLO_KEYPOINT_MAPPING": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.MEDIAPIPE_KEYPOINT_MAPPING": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.MODELS": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 6.4031242374328485}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 4.58257569495584}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 6}}, "df": 473, "w": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 4, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 14, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 3}}, "s": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 59, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}}, "df": 9}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.7320508075688772}}, "df": 3, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}}, "df": 17}}, "n": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.7320508075688772}}, "df": 3}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 23, "a": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 13}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 15}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 20}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 6}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}}, "df": 1, "x": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 6}, "m": {"1": {"6": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "o": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 12}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1}}, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 12, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 4}}, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}, "docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 16}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}}, "df": 1}}}, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 8}, "y": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}}, "df": 2}, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.4641016151377544}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 8, "o": {"docs": {"senselab": {"tf": 3}, "senselab.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.7416573867739413}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2}, "senselab.audio.tasks.data_augmentation": {"tf": 3}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 3}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 5.656854249492381}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 2.23606797749979}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 3.4641016151377544}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 4.123105625617661}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.6457513110645907}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 2.8284271247461903}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.6457513110645907}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}, "senselab.text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 2.6457513110645907}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.6457513110645907}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.449489742783178}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.7320508075688772}}, "df": 173, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.23606797749979}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.8284271247461903}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.6457513110645907}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 31, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}}, "df": 13}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 10}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}}, "df": 9}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 2.449489742783178}, "senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.8284271247461903}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 123}, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab": {"tf": 3}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 2.23606797749979}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 2}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 2}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 5.0990195135927845}, "senselab.audio.tasks.classification.api": {"tf": 3}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 3.872983346207417}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 6.557438524302}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2.6457513110645907}, "senselab.audio.tasks.data_augmentation": {"tf": 3.605551275463989}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 2}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction": {"tf": 6.782329983125268}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3.4641016151377544}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 3.872983346207417}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 2.8284271247461903}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 2.8284271247461903}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 2.23606797749979}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 2.449489742783178}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization": {"tf": 3.605551275463989}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 4}, "senselab.audio.tasks.speaker_embeddings": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 3}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 3.7416573867739413}, "senselab.audio.tasks.speech_enhancement": {"tf": 3}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 3}, "senselab.audio.tasks.speech_to_text": {"tf": 5}, "senselab.audio.tasks.speech_to_text.api": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 3}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 3.7416573867739413}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 6.928203230275509}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 3}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 3}, "senselab.audio.tasks.text_to_speech": {"tf": 5}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 3.872983346207417}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 2.8284271247461903}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 4.58257569495584}, "senselab.audio.tasks.voice_activity_detection": {"tf": 3.3166247903554}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.voice_cloning": {"tf": 3.7416573867739413}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 5.744562646538029}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 2.23606797749979}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 2}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.name": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 3.4641016151377544}, "senselab.utils.data_structures.script_line": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 2.23606797749979}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks": {"tf": 1.4142135623730951}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 3}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 5.291502622129181}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 3.7416573867739413}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 2}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 2.23606797749979}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 2.449489742783178}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.8284271247461903}, "senselab.video.data_structures": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 2}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frames": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.4142135623730951}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 3.872983346207417}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 2.6457513110645907}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 2}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 2.449489742783178}}, "df": 264, "y": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 11}, "m": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 13}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}}, "df": 13}}, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.605551275463989}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 48}, "n": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 13}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 2}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}}, "df": 8, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}}, "df": 2}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 8, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2}}, "df": 10}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 3.605551275463989}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 25, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 5}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 3.3166247903554}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}}, "df": 32, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"1": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.23606797749979}}, "df": 1}, "2": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.23606797749979}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.8284271247461903}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2.8284271247461903}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.utils.tasks.eer.compute_eer": {"tf": 2}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.8284271247461903}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 32, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2}, "senselab.utils.tasks.pooling": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}}, "df": 27, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}}, "df": 16}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 5}, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"1": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3.1622776601683795}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 10}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 6}, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 10}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 2}}, "df": 11, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 2.6457513110645907}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 2}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.7320508075688772}}, "df": 12}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}}, "df": 2}}}}, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 37, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 30, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}}, "df": 10}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.23606797749979}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 21, "u": {"docs": {}, "df": 0, "p": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 4.47213595499958}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 3.605551275463989}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 9}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.4641016151377544}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}}, "df": 2}, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 2.23606797749979}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 2.23606797749979}}, "df": 9}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.Session": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2.23606797749979}}, "df": 4, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 3}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 39, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 2}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}}, "df": 11}, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}}, "df": 8}}}, "p": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "i": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 4.242640687119285}}, "df": 7, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.477225575051661}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}}, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 13}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 17}}, "s": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 13}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}}, "df": 6}}}}}, "b": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}}, "df": 1, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 3.872983346207417}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 3.3166247903554}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 3}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 3.605551275463989}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 3.872983346207417}, "senselab.audio.tasks.voice_cloning": {"tf": 2.6457513110645907}, "senselab.audio.workflows.health_measurements": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 39, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}}, "df": 11, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 4}}}}}}}}}}, "t": {"5": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 19, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 21}, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 2, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 5}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 4.358898943540674}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 3.4641016151377544}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}}, "df": 2}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_embeddings": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1.4142135623730951}}, "df": 27, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 4, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 30, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.6457513110645907}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.449489742783178}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 16, "s": {"docs": {"senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"senselab": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 8}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 3}, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "o": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}}, "df": 24, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}}, "df": 15, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"1": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}, "2": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}, "docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.input_output": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 2}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 24}}}, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}}, "df": 20}, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}}, "df": 12}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 9, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 5}, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "v": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "v": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "5": {"0": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 31, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 9}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}}, "df": 11}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.872983346207417}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"1": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}}, "df": 29, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 5, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}}, "df": 15, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1.7320508075688772}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 5}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 4.47213595499958}}, "df": 1, "n": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 7.810249675906654}}, "df": 1}}}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2.449489742783178}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 12}, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 2}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}}, "df": 3}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.6457513110645907}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"senselab": {"tf": 2.6457513110645907}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.7416573867739413}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 3.1622776601683795}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.449489742783178}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 3.4641016151377544}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.4641016151377544}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 105, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 2}}, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.8284271247461903}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.4641016151377544}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 3.872983346207417}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 3}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3}, "senselab.audio.tasks.text_to_speech": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 3}, "senselab.audio.tasks.voice_cloning": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.workflows.health_measurements": {"tf": 2}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2.23606797749979}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 84, "t": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 26, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {"senselab": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2.449489742783178}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 16, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 2.8284271247461903}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 18, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 19, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 2.23606797749979}}, "df": 4}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 9}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 18}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2.23606797749979}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 34, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 8}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 2}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 8}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 2}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1.7320508075688772}}, "df": 7}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}, "f": {"docs": {"senselab": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2.23606797749979}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 91}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}}, "df": 16, "s": {"docs": {"senselab.audio": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}}, "df": 21}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 2}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 2.449489742783178}}, "df": 14, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 2}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 9}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.6457513110645907}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 37, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.7320508075688772}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}}, "df": 1}}}}}}, "/": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 2}}, "d": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.7320508075688772}}, "df": 3}, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 2}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"senselab.utils.tasks.input_output": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}, "a": {"3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 4.123105625617661}, "senselab.audio.tasks.data_augmentation": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction": {"tf": 3.4641016151377544}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 2}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 3.4641016151377544}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.6457513110645907}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 2.23606797749979}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching.batch_list": {"tf": 2}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.4641016151377544}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 2}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 2}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.4142135623730951}}, "df": 201, "n": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 65, "d": {"docs": {"senselab": {"tf": 4.123105625617661}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 5}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 2.8284271247461903}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 4}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 3.605551275463989}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 3}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.449489742783178}, "senselab.audio.workflows": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 3.605551275463989}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 4.242640687119285}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 3.605551275463989}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 117, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 51, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.8284271247461903}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 28, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 8}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1, "m": {"6": {"4": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}}, "df": 45, "a": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 3}, "n": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 127}}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 3.872983346207417}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}, "t": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 23, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}}, "df": 25}, "d": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab": {"tf": 3.7416573867739413}, "senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 2}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 2}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 3}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 3.3166247903554}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.7320508075688772}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.7320508075688772}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 2}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3.872983346207417}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.audio": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 125, "s": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 2}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 2}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 2}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3.7416573867739413}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 54, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}, "c": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 2.8284271247461903}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2.449489742783178}}, "df": 7, "s": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.7320508075688772}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.7320508075688772}}, "df": 7, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 22, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 8}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "i": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}}, "df": 15, "s": {"docs": {"senselab.utils.data_structures": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"1": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.605551275463989}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 2}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.449489742783178}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 5.916079783099616}}, "df": 1}}}, "i": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"5": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}}, "df": 1, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 7}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 26}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}}, "df": 15}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 5, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "q": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 3}}}}}, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 47, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.7320508075688772}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "s": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 4.898979485566356}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 16}}}}}}}}, "t": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.Participant": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 2.449489742783178}}, "df": 4, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}, "senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.tasks": {"tf": 1}}, "df": 22}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 30}, "s": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}}, "df": 36}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.23606797749979}}, "df": 2}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.872983346207417}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.449489742783178}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 4}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 6}, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 2}}, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2}}, "df": 8}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 4.898979485566356}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}}, "df": 5}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 10}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"senselab": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}}, "df": 17}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 4}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 3.4641016151377544}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 11}}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"2": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 2}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 2}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 6}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.7320508075688772}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2.449489742783178}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}}, "a": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 3.4641016151377544}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.6457513110645907}}, "df": 2}, "p": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "k": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4}, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 3}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.7320508075688772}}, "df": 21, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 13}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 3.4641016151377544}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 3.4641016151377544}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 2.8284271247461903}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 5.5677643628300215}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "q": {"5": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}, "j": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "f": {"0": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 7, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"2": {"7": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}, "1": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 7, "\u2013": {"docs": {}, "df": 0, "f": {"2": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}, "2": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 4, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}, "3": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 2.6457513110645907}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 4.123105625617661}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 3.1622776601683795}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 2}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.8284271247461903}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}, "senselab.video": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}}, "df": 215, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.449489742783178}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.forced_alignment": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 16}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 13, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 2}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.7320508075688772}}, "df": 31, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 11}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 4.58257569495584}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}}, "df": 3}}}, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.7320508075688772}}, "df": 54, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 21}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 2}, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 2.6457513110645907}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}}, "df": 28}}}}}, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "w": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "\u2014": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"senselab": {"tf": 2}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 93}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 15, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 2.449489742783178}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 2}, "senselab.video.data_structures.video.Video.frames": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 8}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}, "q": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 31, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "y": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}}, "df": 17}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 9}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2}}, "df": 6}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "c": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 38, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}}, "df": 17}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 12}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "t": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1, "f": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 2.449489742783178}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 2.6457513110645907}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 2}, "senselab.audio.tasks.classification": {"tf": 3.4641016151377544}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 5.830951894845301}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 2}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 2}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction": {"tf": 8.12403840463596}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.SingleWordSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 2}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 2}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 2}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 6}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 3.3166247903554}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.6457513110645907}, "senselab.audio.tasks.voice_activity_detection": {"tf": 3.1622776601683795}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 2}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 3}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.449489742783178}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 2.23606797749979}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3.872983346207417}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.449489742783178}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 2}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 2}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.8284271247461903}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 185, "f": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}, "senselab.audio.tasks.data_augmentation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.7320508075688772}}, "df": 72, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 9}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}}}, "/": {"1": {"0": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"1": {"8": {"0": {"2": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"0": {"6": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"9": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"0": {"8": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "docs": {}, "df": 0}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 4}, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 18, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 22}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 5}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 2}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 3.1622776601683795}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.device.DeviceType": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 15}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "n": {"docs": {"senselab": {"tf": 2}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.605551275463989}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 63, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 18}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}}, "df": 4}}, "e": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 8}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}}}}}, "t": {"2": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"0": {"3": {"2": {"7": {"2": {"0": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 13, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 13, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 42, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 50}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}}, "df": 5}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "b": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 3}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 3}, "docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 71, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 3.872983346207417}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}}, "df": 24}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}}, "df": 5}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 10}}, "y": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 3.4641016151377544}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 37, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 5, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 28}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 2.449489742783178}, "senselab.utils.tasks.batching": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.7320508075688772}}, "df": 4}, "d": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.23606797749979}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.3166247903554}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.6457513110645907}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 2.6457513110645907}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 4.242640687119285}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 4.58257569495584}, "senselab.utils.tasks.pooling.pooling": {"tf": 3.4641016151377544}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}}, "df": 50, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.23606797749979}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 27, "s": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.449489742783178}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 12}, "/": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 2.449489742783178}}, "df": 9}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 7}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}}, "df": 5, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "s": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 19}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.8284271247461903}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 2}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device.DeviceType": {"tf": 1}}, "df": 31, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}}, "df": 7}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.input_output": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 3.1622776601683795}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2.6457513110645907}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.8284271247461903}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 44, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 4.123105625617661}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 27}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 4}, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 5.291502622129181}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}}, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "e": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 10, "n": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 4.123105625617661}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}}, "df": 18, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 50}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 8}}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}}, "df": 7}}}}}}, "m": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 3.1622776601683795}}, "df": 2, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 3}}, "df": 6, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.449489742783178}}, "df": 2}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 2}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.8284271247461903}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.device": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 2.6457513110645907}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {"senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}, "b": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 3.1622776601683795}}, "df": 6, "h": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}, "a": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}}, "df": 1}}}, "v": {"1": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}, "2": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 5}, "3": {"docs": {}, "df": 0, "?": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}, "docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 3.1622776601683795}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 3}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3.3166247903554}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 23, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.6457513110645907}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 4, "+": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.4142135623730951}, "senselab.video.tasks": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}}, "df": 16, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.8284271247461903}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 3}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2, "d": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 22}}}}}, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 13}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.file.File.validate_filepath": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 9, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 2}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 9}}}}, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 2.8284271247461903}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}}, "df": 2}}, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 2, "p": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Point": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}}, "df": 11}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 3.1622776601683795}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 3}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.23606797749979}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 2}, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 3.7416573867739413}}, "df": 1}}}}}}}}, "t": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 5}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.7320508075688772}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.utils.config.get_config": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.video": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.filepath": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.audio": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 131}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 5}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 9, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 14, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.utils.tasks.input_output": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 2.23606797749979}, "senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3.4641016151377544}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.449489742783178}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2.449489742783178}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 52, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 2}, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 3.605551275463989}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 10}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 29}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 11, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 29, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}}, "df": 1}}}}, "^": {"2": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "b": {"docs": {}, "df": 0, "f": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 12, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 10}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.6457513110645907}, "senselab.video.data_structures.video.Video": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 18, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 13}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 3.7416573867739413}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.23606797749979}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 4.242640687119285}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 18, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.4142135623730951}}, "df": 11, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 6}}, "r": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.7320508075688772}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "e": {"docs": {"senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.forced_alignment": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.preprocessing": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.text.tasks": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.data_structures": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.utils.tasks.pooling": {"tf": 1}, "senselab.video": {"tf": 1}, "senselab.video.data_structures": {"tf": 1}, "senselab.video.tasks.input_output": {"tf": 1}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}}, "df": 75, "s": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2}, "senselab.audio.tasks.classification.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 2}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.SERType": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 2}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 2.8284271247461903}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 2}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 2}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 2}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2.8284271247461903}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 2}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 3}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 2}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3.4641016151377544}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 2.23606797749979}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 3}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 3.605551275463989}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 3}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.7320508075688772}}, "df": 98, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.605551275463989}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 3.1622776601683795}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 3.3166247903554}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 35, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "c": {"2": {"4": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.6457513110645907}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 20}}, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}}, "df": 4}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.PyannoteDiarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.utils.data_structures.dataset": {"tf": 1}}, "df": 16}}}, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 10}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1.7320508075688772}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 6, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 3}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 15}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}}, "df": 1}}}, "s": {"5": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.marstts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}}, "df": 2}}}}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 2}}, "df": 3, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}}, "df": 12}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}, "d": {"5": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 2}, "docs": {"senselab": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 4}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 12}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"3": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}}, "df": 6, "p": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}}, "df": 2}}, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"1": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "2": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "3": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "4": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 3}}}, "u": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_arraylike": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 33, "r": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}}, "df": 5}}, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.constants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 45}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 75}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.set_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.4142135623730951}}, "df": 9}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.8284271247461903}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2.6457513110645907}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 12}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"4": {"docs": {"senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}}, "df": 2}, "docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleSegment": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.SingleAlignedSegment": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.device": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation.audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.input_output": {"tf": 1}, "senselab.audio.tasks.input_output.utils": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.data_structures.file": {"tf": 1}, "senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.input_output": {"tf": 1}, "senselab.utils.tasks.plotting": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}}, "df": 23}}}, "y": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.data_structures.device": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"senselab.utils.data_structures": {"tf": 1}, "senselab.utils.tasks": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 7}, "l": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1.7320508075688772}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.6457513110645907}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 20, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}}, "df": 43}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 2}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 7}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_enhancement.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}}, "df": 6}}}}, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 4}, "s": {"docs": {"senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1.7320508075688772}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.utils.data_structures.file.File.type": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 3.7416573867739413}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 17}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 30}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 9}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 12, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3}, "s": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 3.3166247903554}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 5, "s": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 2}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 19}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 2.6457513110645907}}, "df": 2}, "c": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 10, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.video.data_structures.pose": {"tf": 1}, "senselab.video.data_structures.pose.PoseModel": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 2.6457513110645907}, "senselab.video.tasks.pose_estimation.api": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 17}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"2": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 3.4641016151377544}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 16, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 5}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"0": {"2": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.eer": {"tf": 1}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1.7320508075688772}}, "df": 2}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.8284271247461903}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.config": {"tf": 1}, "senselab.utils.config.get_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 24, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 28, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1.4142135623730951}}, "df": 22}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.model_config": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Participant.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.Session.model_config": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.model_config": {"tf": 1}, "senselab.utils.data_structures.file.File.model_config": {"tf": 1}, "senselab.utils.data_structures.language.Language.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SpeechBrainModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.PyannoteAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.SentenceTransformersModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.model_config": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.model_config": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.model_config": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.model_config": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.model_config": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.model_config": {"tf": 1}, "senselab.video.data_structures.video.Video.model_config": {"tf": 1}}, "df": 22}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 2}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": null}}, "df": 1}}, "s": {"docs": {}, "df": 0, "\u2014": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.forced_alignment.constants": {"tf": 1}, "senselab.utils.constants": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 4.358898943540674}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2, "d": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio": {"tf": 1}, "senselab.audio.data_structures": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.plotting": {"tf": 1}, "senselab.audio.tasks.plotting.plotting": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface": {"tf": 1}, "senselab.utils": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video": {"tf": 1}}, "df": 25}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 51}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"senselab.utils.config.get_config": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 6, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 2.449489742783178}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2}, "senselab.utils.tasks.eer.compute_eer": {"tf": 1}}, "df": 8, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1}}, "df": 3}, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.eer": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.449489742783178}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.4142135623730951}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"1": {"docs": {}, "df": 0, "o": {"3": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"5": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"1": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"8": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}}}}, "docs": {}, "df": 0}}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"2": {"6": {"1": {"5": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"4": {"3": {"5": {"8": {"6": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.23606797749979}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 8}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2}}, "df": 6, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.7320508075688772}}, "df": 9, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel": {"tf": 1}}, "df": 4}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 2}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"senselab": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 13}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 9, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 4}, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 2}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.449489742783178}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 2.6457513110645907}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 24, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1, "d": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 3, "d": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 2}}, "df": 1}, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 2}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 2}}, "df": 1, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.7320508075688772}, "senselab.utils.tasks.pooling.pooling": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {"senselab.audio.tasks.forced_alignment.data_structures.SingleCharSegment": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4, "\u2014": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_torchaudio_model_exists": {"tf": 1}, "senselab.utils.data_structures.model.is_torch_model": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 2}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1.4142135623730951}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.pooling.pooling": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 7, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 10}, "d": {"docs": {"senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 7}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 2}}, "df": 6}}, "w": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.file.File": {"tf": 1}, "senselab.utils.data_structures.model": {"tf": 1}, "senselab.utils.data_structures.model.SenselabModel": {"tf": 1}, "senselab.utils.data_structures.script_line": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.7320508075688772}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 2.8284271247461903}, "senselab.audio.tasks.classification.api": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 14, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.23606797749979}}, "df": 5}, "r": {"docs": {"senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.speaker_embeddings.api": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}}, "df": 8}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 2.23606797749979}, "senselab.audio.tasks.voice_cloning.api": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.audio.tasks.voice_cloning.coqui": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner": {"tf": 1}}, "df": 10}}}, "e": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 4, "d": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 3}, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.7320508075688772}}, "df": 3, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 4}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}}, "df": 9}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}}, "df": 1}}, "p": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.6457513110645907}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 3}}, "c": {"0": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 2}}, "df": 2, "a": {"docs": {"senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.7320508075688772}}, "df": 2}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"senselab.utils.tasks.cca_cka": {"tf": 1}, "senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 3, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.8284271247461903}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 3.1622776601683795}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.449489742783178}}, "df": 11, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}}, "df": 4, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "w": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1}}, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 4.242640687119285}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 6.48074069840786}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.ImagePose.get_individual": {"tf": 1}}, "df": 4, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.sampling_rate": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.SenselabModel.validate_path_or_uri": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.data_structures.model.TorchAudioModel.validate_torchaudio_model_id": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}}, "df": 50, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "y": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "n": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_activity_detection": {"tf": 2.23606797749979}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_participant": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.add_session": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 7, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.tasks.plotting.plot_transcript": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 42}}, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cross_correlation": {"tf": 1}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 8}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 6}, "y": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cca": {"tf": 2}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1.4142135623730951}}, "df": 15, "p": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose.validate_image": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 3.3166247903554}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.plotting.plotting.play_audio": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 4.898979485566356}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.tasks.batching.batch_list": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate_from_path": {"tf": 1}}, "df": 28}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "e": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}}, "df": 1}}}, "n": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 6.48074069840786}}, "df": 1}}, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"2": {"0": {"0": {"6": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 6}}}}}}, "p": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 6}}, "g": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 2.23606797749979}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 18, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}}, "df": 18, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.video.data_structures.video.Video.generate_id": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 3}, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.generate_id": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.Participant": {"tf": 1}, "senselab.utils.data_structures.dataset.Session": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 11}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.utils.data_structures.model.TorchModel": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 1}}, "df": 1, "+": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.utils.data_structures.model.check_github_repo_exists": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1, "n": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.get_sound": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}}, "df": 31}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1}}, "df": 8}}, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.6457513110645907}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 4}}}}, "m": {"docs": {"senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_audio_duration": {"tf": 2.449489742783178}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 3.4641016151377544}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.7320508075688772}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 3.4641016151377544}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 3}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2.449489742783178}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 4.242640687119285}, "senselab.utils.tasks.cross_correlation.compute_normalized_cross_correlation": {"tf": 3}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 5.477225575051661}, "senselab.utils.tasks.pooling.pooling": {"tf": 4.898979485566356}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2.449489742783178}}, "df": 26}, "p": {"docs": {}, "df": 0, "u": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}}, "df": 4}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 2.6457513110645907}}, "df": 1}}}}}, "o": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}, "l": {"6": {"docs": {"senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"senselab": {"tf": 1}}, "df": 1}, "g": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 2}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.language": {"tf": 1}, "senselab.utils.data_structures.language.Language": {"tf": 1}, "senselab.utils.data_structures.language.Language.validate_language": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_2": {"tf": 1}, "senselab.utils.data_structures.language.Language.alpha_3": {"tf": 1}, "senselab.utils.data_structures.language.Language.name": {"tf": 1}}, "df": 19, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 2.23606797749979}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose.get_landmark_coordinates": {"tf": 2.23606797749979}}, "df": 5, "s": {"docs": {"senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.IndividualPose": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.detector": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.Segment": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 13, "s": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification": {"tf": 1.7320508075688772}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 2.23606797749979}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}}, "df": 10}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}, "r": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.convert_to_tensor": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 2}, "senselab.audio.data_structures.audio.unbatch_audios": {"tf": 2}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api.classify_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.api.augment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.forced_alignment.data_structures.TranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.data_structures.AlignedTranscriptionResult": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.input_output.utils.save_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.speechbrain": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 2}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.7320508075688772}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.449489742783178}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.dataset.SenselabDataset": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.from_strings_to_files": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.file.get_common_directory": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 2}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 90, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 9}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.utils.tasks.plotting.plot_segment": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.get_sessions": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark": {"tf": 1}, "senselab.video.data_structures.pose.PoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_verification.speaker_verification.verify_speaker": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.api.extract_embeddings_from_text": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}}, "df": 8}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_spectrograms": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}}, "df": 12}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.input_output.utils.read_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.downmix_audios_to_mono": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.select_channel_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.speechbrain.SpeechBrainEmbeddings.extract_speechbrain_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement.api.enhance_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.tasks.voice_cloning.coqui.CoquiVoiceCloner.clone_voices": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.sparc.SparcVoiceCloner.clone_voices": {"tf": 1.7320508075688772}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1.7320508075688772}}, "df": 37, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.get_participants": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.data_structures.pose.ImagePose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.extract_landmarks": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.tasks.batching.batch_list": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "n": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.model_post_init": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.model_post_init": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.model_post_init": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 13}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification": {"tf": 1.4142135623730951}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1.7320508075688772}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.timestamps_must_be_positive": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.get_text": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_speaker": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_timestamps": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.script_line.ScriptLine.get_chunks": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.from_dict": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.6457513110645907}}, "df": 4}}, "s": {"docs": {"senselab.audio.tasks.forced_alignment.forced_alignment.align_transcriptions": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.api.diarize_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection.api.detect_human_voice_activity_in_audios": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1.4142135623730951}}, "df": 7}}, "k": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1.4142135623730951}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.PoseEstimator.estimate_from_path": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.data_structures.audio.Audio.__init__": {"tf": 1.4142135623730951}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.video.data_structures.video.Video": {"tf": 1}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}, "senselab.video.data_structures.video.Video.frame_rate": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 6}}, "r": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2}}, "df": 2}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.preprocessing.preprocessing.resample_audios": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "t": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 3.1622776601683795}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "c": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.8284271247461903}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 4}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation.utils.download_model": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 2}, "senselab.video.tasks.pose_estimation.api.visualize_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.visualization.visualize": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"0": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.logging": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.data_structures.audio.Audio.save_to_file": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory": {"tf": 1}, "senselab.audio.tasks.features_extraction.opensmile.OpenSmileFeatureExtractorFactory.get_opensmile_extractor": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.opensmile.extract_opensmile_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.speaker_diarization_evaluation": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 2.23606797749979}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.validate_labels_and_scores": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2.23606797749979}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 2}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 2}, "senselab.audio.tasks.forced_alignment.data_structures.Segment.length": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.pad_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 17, "s": {"docs": {"senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.449489742783178}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.23606797749979}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.7320508075688772}, "senselab.audio.tasks.data_augmentation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.strings_must_be_stripped": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}, "senselab.utils.data_structures.script_line.ScriptLine.validate_text_and_speaker": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.plotting.plotting.plot_waveform": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.audio_merge_from_pydra_task": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_audios_from_filepaths": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.generate_videos_from_filepaths": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "g": {"docs": {"senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1.4142135623730951}}, "df": 1}}}, "x": {"8": {"6": {"docs": {"senselab": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 2}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1.7320508075688772}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.speaker_embeddings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "y": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1.4142135623730951}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "u": {"docs": {"senselab": {"tf": 2}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 8, "r": {"docs": {"senselab": {"tf": 2}}, "df": 1}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_to_text": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"senselab.video.data_structures.pose.PoseModel": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1.7320508075688772}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 2}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.estimate_from_path": {"tf": 1}, "senselab.video.tasks.pose_estimation.utils.get_model": {"tf": 1.4142135623730951}}, "df": 9, "v": {"1": {"1": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"senselab.video.tasks.pose_estimation.estimate.YOLOPoseEstimator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.data_structures.audio.Audio": {"tf": 1}}, "df": 1}, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}}, "df": 1}}, "s": {"docs": {"senselab.audio.data_structures.audio.Audio.window_generator": {"tf": 1}, "senselab.audio.data_structures.audio.Audio.from_stream": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 2}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"senselab": {"tf": 2.449489742783178}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 2.449489742783178}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 2}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 2}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 2.8284271247461903}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 2.8284271247461903}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 2.8284271247461903}, "senselab.utils.tasks.pooling.pooling": {"tf": 2.449489742783178}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 3.4641016151377544}}, "df": 22, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 2}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"senselab": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.voice_activity_detection": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_enhancement": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 8}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"1": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 2}}, "df": 2, "\u2013": {"docs": {}, "df": 0, "h": {"2": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "2": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.7320508075688772}, "senselab.video.data_structures.video.Video.__init__": {"tf": 1}, "senselab.video.data_structures.video.Video.convert_to_tensor": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.data_structures.audio.batch_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.audiomentations.augment_audios_with_audiomentations": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.preprocessing.preprocessing.chunk_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.extract_segments": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.evenly_segment_audios": {"tf": 1}, "senselab.audio.tasks.preprocessing.preprocessing.concatenate_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.tasks.cosine_similarity.compute_cosine_similarity": {"tf": 1}, "senselab.video.data_structures.video.Video.frames": {"tf": 1}}, "df": 14}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.data_structures.audio.Audio.waveform": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation.torch_audiomentations.augment_audios_with_torch_audiomentations": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speaker_embeddings": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 12, "h": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.speech_enhancement.speechbrain.SpeechBrainEnhancer.enhance_audios_with_speechbrain": {"tf": 1}}, "df": 1, "s": {"docs": {"senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}}, "df": 3}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"senselab": {"tf": 1}, "senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "z": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 2}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_praat_parselmouth_features_from_audios": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"senselab": {"tf": 1}, "senselab.audio.workflows.health_measurements": {"tf": 2.8284271247461903}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.7320508075688772}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.speech_enhancement": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "y": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}, "senselab.video.tasks.pose_estimation.estimate.MediaPipePoseEstimator.__init__": {"tf": 1}}, "df": 3}}, "d": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {"senselab": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction": {"tf": 3.1622776601683795}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_jitter": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_shimmer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_objective_quality_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio_squim.extract_subjective_quality_features_from_audios": {"tf": 1}}, "df": 9, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"senselab.audio.tasks.data_augmentation": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 2.23606797749979}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_scores": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.get_label_score_pairs": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_label": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_pitch_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1}}, "df": 12}}, "r": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.7320508075688772}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.api": {"tf": 1}, "senselab.audio.tasks.classification.huggingface": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speaker_embeddings.api.extract_speaker_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text.api": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1.4142135623730951}, "senselab.text.tasks.embeddings_extraction.sentence_transformers.SentenceTransformerFactory.extract_text_embeddings": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.check_hf_repo_exists": {"tf": 1}, "senselab.utils.tasks.input_output.read_files_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_disk": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1.4142135623730951}, "senselab.utils.tasks.input_output.save_dataset_to_disk": {"tf": 1}, "senselab.video.tasks.input_output.extract_audios_from_local_videos": {"tf": 1}}, "df": 31, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.from_hf_classification_pipeline": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_senselab_dataset_to_hf_datasets": {"tf": 2}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 2.23606797749979}, "senselab.utils.data_structures.model.HFModel": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.get_model_info": {"tf": 1}}, "df": 6}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.speaker_diarization": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1}, "senselab.utils.data_structures.model.HFModel.validate_hf_model_id": {"tf": 1}, "senselab.utils.data_structures.model.CoquiTTSModel.validate_path_or_uri": {"tf": 1}, "senselab.utils.data_structures.model.TorchModel.validate_torch_model_id": {"tf": 1}, "senselab.utils.tasks.input_output.read_dataset_from_hub": {"tf": 1}, "senselab.utils.tasks.input_output.push_dataset_to_hub": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_activity_detection": {"tf": 1.4142135623730951}, "senselab.video.tasks.pose_estimation": {"tf": 2.23606797749979}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.classification": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.tasks.speech_to_text": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech": {"tf": 1}, "senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_audio_split_for_pydra_task": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.torchaudio.extract_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_spectrogram_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mfcc_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_mel_filter_bank_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.torchaudio.extract_torchaudio_features_from_audios": {"tf": 1.4142135623730951}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1.4142135623730951}}, "df": 7}}, "f": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.api.extract_ssl_embeddings_from_audios": {"tf": 1}, "senselab.audio.tasks.ssl_embeddings.self_supervised_features.SSLEmbeddingsFactory.extract_ssl_embeddings": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}, "senselab.text.tasks.embeddings_extraction.huggingface.HFFactory.extract_text_embeddings": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"senselab.audio.tasks.classification.speech_emotion_recognition": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1.4142135623730951}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_speech_rate": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"senselab.audio.tasks.speech_to_text.huggingface.HuggingFaceASR.transcribe_audios_with_transformers": {"tf": 1}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"senselab.audio.tasks.text_to_speech.huggingface.HuggingFaceTTS.synthesize_texts_with_transformers": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "q": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.dimensionality_reduction": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}}, "df": 2}}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.create_bids_dataset": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction": {"tf": 1.7320508075688772}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1.7320508075688772}}, "df": 6, "#": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "q": {"docs": {"senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "r": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 2.449489742783178}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 2}}, "df": 3, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_mer": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wil": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_wip": {"tf": 1.4142135623730951}, "senselab.audio.tasks.speech_to_text_evaluation.utils.calculate_cer": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}, "k": {"docs": {"senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_labels": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k_score": {"tf": 1}, "senselab.audio.data_structures.audio_classification_result.AudioClassificationResult.top_k": {"tf": 1}, "senselab.audio.tasks.classification.huggingface.HuggingFaceAudioClassifier.classify_audios_with_transformers": {"tf": 1.4142135623730951}, "senselab.audio.tasks.text_to_speech.marstts.Mars5TTS.synthesize_texts_with_mars5tts": {"tf": 1.4142135623730951}}, "df": 5, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.text_to_speech.coqui.CoquiTTS.synthesize_texts_with_coqui": {"tf": 1.4142135623730951}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_harmonicity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_cpp_descriptors": {"tf": 1}, "senselab.audio.tasks.speech_to_text_evaluation": {"tf": 1}, "senselab.utils.data_structures.pydra_helpers.bytes_repr_smile": {"tf": 1}, "senselab.utils.data_structures.talk_bank_helpers.chats_to_script_lines": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 3.1622776601683795}}, "df": 8, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"senselab.audio.tasks.classification.api.classify_audios": {"tf": 1}, "senselab.audio.tasks.classification.speech_emotion_recognition.api.classify_emotions_from_speech": {"tf": 1}, "senselab.audio.tasks.plotting.plotting.plot_specgram": {"tf": 1}, "senselab.audio.tasks.speech_to_text.api.transcribe_audios": {"tf": 1}, "senselab.audio.tasks.text_to_speech.api.synthesize_texts": {"tf": 1}, "senselab.audio.tasks.voice_cloning.api.clone_voices": {"tf": 1}, "senselab.utils.tasks.dimensionality_reduction.compute_dimensionality_reduction": {"tf": 1}, "senselab.video.tasks.pose_estimation.api.estimate_pose": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1.7320508075688772}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_values": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_pitch_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_intensity_descriptors": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_slope_tilt": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.measure_f1f2_formants_bandwidths": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 1}, "senselab.utils.data_structures.dataset.SenselabDataset.convert_hf_dataset_to_senselab_dataset": {"tf": 1}}, "df": 8}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.data_structures.pose.YOLOPoseLandmark": {"tf": 2}, "senselab.video.data_structures.pose.YOLOPoseLandmark.as_list": {"tf": 1}, "senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 3, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"senselab.utils.tasks.cca_cka.CKAKernelType": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 2.449489742783178}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"senselab.utils.tasks.pooling.pooling": {"tf": 2}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"senselab.video.data_structures.video.Video": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"senselab.audio.tasks.features_extraction": {"tf": 1}, "senselab.audio.tasks.features_extraction.api.extract_features_from_audios": {"tf": 1}, "senselab.audio.tasks.features_extraction.praat_parselmouth.extract_spectral_moments": {"tf": 2}, "senselab.audio.workflows.health_measurements.extract_health_measurements.extract_health_measurements": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"senselab.audio.tasks.features_extraction.praat_parselmouth": {"tf": 1}, "senselab.audio.workflows.health_measurements.extract_health_measurements": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"senselab.audio.tasks.speaker_diarization.pyannote.diarize_audios_with_pyannote": {"tf": 1}, "senselab.audio.tasks.speech_to_text": {"tf": 1}, "senselab.audio.tasks.text_to_speech": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "c": {"docs": {"senselab.audio.tasks.voice_cloning": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"senselab.video.tasks.pose_estimation": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"senselab.audio.tasks.speaker_diarization_evaluation.utils.calculate_diarization_error_rate": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {"senselab.utils.tasks.cca_cka.compute_cca": {"tf": 1}, "senselab.utils.tasks.cca_cka.compute_cka": {"tf": 1}, "senselab.video.data_structures.pose.MediaPipePoseLandmark": {"tf": 1.4142135623730951}, "senselab.video.data_structures.pose.MediaPipePoseLandmark.as_list": {"tf": 1}}, "df": 4}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();