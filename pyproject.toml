[tool.poetry]
name = "senselab"
version = "0.0.1"
description = "Senselab is a Python package that simplifies building pipelines for speech and voice analysis."
authors = [
  "Fabio Catania <fabiocat@mit.edu>",
  "Satra Ghosh <satra@mit.edu>"
]
maintainers = [
  "Fabio Catania <fabiocat@mit.edu>",
  "Satra Ghosh <satra@mit.edu>"
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/sensein/senselab"
repository = "https://github.com/sensein/senselab"
documentation = "https://sensein.github.io/senselab"
keywords = ["voice", "speech", "audio"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent"
]
packages = [{include = "senselab", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
datasets = "~=3"
torch = "~=2.6"
torchvision = "~=0.20"
torchaudio = "~=2.5"
transformers = "~=4.47"
pydra = "~=0.25"
pydantic = "~=2.7"
accelerate = "*"
huggingface-hub = "~=0.23"
praat-parselmouth = "~=0.4"
audiomentations = "~=0.35"
torch-audiomentations = "~=0.11"
sentence-transformers = "~=3.1"
jiwer = "~=3.0"
speechbrain = "~=1"
pyav = "~=14.0"
pyannote-audio = "~=3.3"
pycountry = "~=24.6"
types-requests = "~=2.32"
opensmile = "~=2.5"
numpy = ">=1.26,<3.0"
umap-learn = "~=0.5"
scikit-learn = "~=1.5"
nltk = "~=3.9"
vocos = "~=0.1"
iso639 = "~=0.1"
nest-asyncio = "~=1.5"
pylangacq = "~=0.19"
mediapipe = "~=0.10"
opencv-python = "~=4.10"
ultralytics = "~=8.3"
rouge-score = "~=0.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest-xdist = {version = "~=3.6.1", extras = ["psutil"]}
pytest-mock = "~=3.14"
pytest-cov = "~=6.0"
mypy = "~=1.9"
pre-commit = "~=4.0"
ruff = "~=0.3"
codespell = "~=2.3"
jupyter = "~=1.0"
ipywidgets = "~=8.1"
ipykernel = "*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "~=15.0"

[tool.poetry.scripts]
senselab-cli = "senselab.cli:main"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
  "src/tests"
]

[tool.mypy]
ignore_missing_imports = true
plugins = [
  "pydantic.mypy"
]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 120
indent-width = 4
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN101",  # self should not be annotated.
  "ANN102"  # cls should not be annotated.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
bump = true
style = "pep440"
pattern = "default-unprefixed"

[tool.codespell]
skip = [
  "poetry.lock",
  "docs_style/pdoc-theme/syntax-highlighting.css",
  "*.cha",
  "*.ipynb"
]
ignore-words-list = ["senselab", "nd", "astroid", "wil", "SER", "te"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
